<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/16/2017 2:56:32 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CD17D-6165-SYW"
  DTS:CreatorName="DEVE\yiwushi"
  DTS:DTSID="{3CD36396-B36B-45B2-B15A-656ED7D95DD0}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Run_EC"
  DTS:PackageType="5"
  DTS:VersionBuild="59"
  DTS:VersionGUID="{461F0AA8-28A0-4385-A26E-84CF1461F9CA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CD17D-6165-SYW\MSSQL.QuickWizard]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4796311E-6796-4043-B1A8-BE8745309738}"
      DTS:ObjectName="CD17D-6165-SYW\MSSQL.QuickWizard">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.\MSSQL;Initial Catalog=QuickWizard;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CD17D-6165-SYW\MSSQL.TaskProcess]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D1CE1A26-4BBD-4A7A-8D97-38934DCA0DB4}"
      DTS:ObjectName="CD17D-6165-SYW\MSSQL.TaskProcess">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.\MSSQL;Initial Catalog=TaskProcess;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C74973CA-4AAA-467D-B6A8-C737A186CFE1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AccountNo">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{920FFD9E-1B3E-4161-901B-58F7D2124CBB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBName">
      <DTS:VariableValue
        DTS:DataType="8">TaskProcess</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B8FC135-8703-411C-A5FE-513F957DBD2E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBName_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">TaskProcess</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E9CA0B02-CC08-42C0-A013-682441096DFB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBServer">
      <DTS:VariableValue
        DTS:DataType="8">DAL_SEC</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{551289BD-3D2B-4552-8573-85FCEEF9BDF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimReportingDateID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AADF6942-F882-4845-B457-30E42FFB0837}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SceneCode">
      <DTS:VariableValue
        DTS:DataType="8">xxx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DB99336-D2DC-44B3-9E9B-51B684450013}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SceneName">
      <DTS:VariableValue
        DTS:DataType="8">bbb</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B303C2AE-D22A-4AD3-9E42-17E9E662E4E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SceneTypeCode">
      <DTS:VariableValue
        DTS:DataType="8">ccc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{629B3A6C-4655-4D41-B022-7A2A34BCF2EE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SessionID">
      <DTS:VariableValue
        DTS:DataType="8">FC2E7A29-3116-404B-9EC5-5C7392ED4573</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E48BBE06-1E59-4932-AA99-8271847DDDA5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceSchema">
      <DTS:VariableValue
        DTS:DataType="8">Working</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1D9C0BD3-61B3-44FA-9232-DE9AB35F5ADE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetSchema">
      <DTS:VariableValue
        DTS:DataType="8">Verification</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{999D833A-555F-43DB-A8B1-858CDE04FCB8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TradeType">
      <DTS:VariableValue
        DTS:DataType="8">ddd</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{79784DEC-AC89-433A-AFC9-50D92FD81D70}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TrustID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E618175A-150F-4E4F-8501-F9E464248835}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VerifySourceTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D4F7A2D2-391D-4EF6-92F5-0916D6AE8BA0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VerifyTargetTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2F349DA9-A6A7-48C4-9460-E8E11151FFC7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_Debug">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A70B2390-E81E-44CA-8422-5E39C75D9BEB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DBServer] + &quot;;Initial Catalog=&quot; +@[User::DBName_TaskProcess] + &quot; ;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_OLEDBConnString_TaskProcess_NP">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=TaskProcess ;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F9175501-3F5C-48D5-9AC5-C690B229EAE5}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{2C2EC283-1575-413E-BCE5-3E91EED3C1C0}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task\Apply Criteria"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  localeId="3081"
                  name="Apply Criteria"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public CriteriaResultBuffer CriteriaResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != CriteriaResultBuffer)
        {
            CriteriaResultBuffer.SetEndOfRowset();
            CriteriaResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"CriteriaResult"))
            {
                CriteriaResultBuffer = new CriteriaResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String OLEDBConnStringTaskProcessNP
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_OLEDBConnString_TaskProcess_NP"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;
using System.Data.OleDb;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringTaskProcessNP);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnabled)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            try
            {
                SqlCommand _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    CriteriaResultBuffer.AddRow();
                    //CriteriaResultBuffer.SessionId = new Guid(dr["SessionId"].ToString());
                    //CriteriaResultBuffer.CriteriaId = Convert.ToInt64(dr["CriteriaId"]);
                    //CriteriaResultBuffer.VerifyColumn = dr["VerifyColumn"].ToString();
                    //CriteriaResultBuffer.VerifyRow = dr["VerifyRow"].ToString();
                    //CriteriaResultBuffer.VerifyType = dr["VerifyType"].ToString();
                    //CriteriaResultBuffer.VerifyResult = dr["VerifyResult"].ToString();
                    CriteriaResultBuffer.AccountNo = dr["AccountNo"].ToString();
                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply Criteria", sMsg, "", 0, ref bFireAgain);
            }
            catch (SqlException ex)
            {
                //MessageBox.Show(ex.Message);
                throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply Pool Maintenance EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[4]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int64 CriteriaID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaID_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class CriteriaResultBuffer: ScriptBuffer

{
    public CriteriaResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String AccountNo
    {
        set
        {
            this[0] = value;
        }
    }
    public bool AccountNo_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{1EE838E7-3BD7-401B-AEF5-16B27569E41B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  --><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><OutputType>Library</OutputType><NoStandardLibraries>false</NoStandardLibraries><RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace><AssemblyName>SC_67B27F73FEF14FACB5752EEF2B189AE8</AssemblyName><ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  --><PropertyGroup><PreBuildEvent></PreBuildEvent><PostBuildEvent></PostBuildEvent></PropertyGroup><!-- This sections specifies references for the project. --><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference><Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference></ItemGroup><!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  --><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /><Compile Include="main.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    --></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="SSIS_ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_67B27F73FEF14FACB5752EEF2B189AE8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANuhllkAAAAAAAAAAOAAAiELAQsAACAAAAAIAAAAAAAAvj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGg/AABTAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
PwAAAAAAAEgAAAACAAUAUCUAABgaAAABAAAAAAAAAJgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipSAnsOAAAKAnsPAAAKF5RvEgAACioiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EgAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEgAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvEwAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvFAAACioiAhsoEQAACioeAigVAAAKKh4C
KBYAAAoqKgIDBAUoDQAACiomAhYDKBcAAAoqWgMsCAIWKBgAAAoqcgEAAHBzGQAACnoeAigaAAAK
Kh4CKBsAAAoqHgIoFgAACip+AigcAAAKAgJzHgAABn0BAAAEAgJzHwAABn0CAAAEKgMwBABPAAAA
AAAAAARyngAAcBpvHQAACiwVAgUCAygeAAAKDgRzAQAABm8cAAAGBW8fAAAKLCMCAnsEAAAEF1h9
BAAABAJ7BAAABBczDAJvGAAABgIoGQAABioGKm4CewMAAAQsEgJ7AwAABG8UAAAGAhR9AwAABCoA
AAATMAUAPQAAAAEAABEWCisuBAaUDgRyrgAAcCggAAAKMxkCBQaaAgQGlCgeAAAKDgRzEAAABn0D
AAAEBhdYCgYDMs4CbxsAAAYqBipKKwcCA28dAAAGA28OAAAGLfEqBio6AighAAAKAgN9BQAABCo6
AighAAAKAgN9BgAABCqWAnsGAAAEbyIAAApyzAAAcG8jAAAKKCQAAApvJQAACnQYAAABKqICKCcA
AAoCAnsCAAAEbyAAAAZzKAAACn0HAAAEAnsHAAAEbykAAAoqZgIoKgAACgJ7BwAABG8rAAAKAhR9
BwAABCoAGzAHABcBAAACAAARFwpyDAEAcAsDbwoAAAY51AAAAANvAgAABhYDbwIAAAZvLAAACigt
AAAKby4AAAoMKC8AAAoIbzAAAApvMQAACg0JAnsHAAAEczIAAAoTBBEEFm8zAAAKEQRvNAAAChMF
FhMGKy0CewMAAARvEwAABgJ7AwAABBEFcg4BAHBvNQAACm82AAAKbxEAAAYRBhdYEwYRBW83AAAK
LcoRBW84AAAKFBMFciIBAHADbwgAAAZvNgAAChEGjCYAAAEoOQAACgsCKDoAAAog6AMAAHI2AQBw
B3IMAQBwFhIAbzsAAAreNBMHEQd6clQBAHADbwgAAAYoPAAACgsCKDoAAAog6AMAAHKmAQBwB3IM
AQBwFhIAbzsAAAoqAAEQAAAAAEEAoeIABSgAAAEGKh4CKBYAAAYqHgIoIQAACioAABMwAgAtAAAA
AwAAEX4IAAAELSBy2gEAcNAIAAACKD4AAApvPwAACnNAAAAKCgaACAAABH4IAAAEKhp+CQAABCoe
AoAJAAAEKhp+CgAABCoucysAAAaACgAABCoeAihDAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAgAACN+AAAgCQAAMAwAACNTdHJpbmdzAAAAAFAV
AABcAgAAI1VTAKwXAAAQAAAAI0dVSUQAAAC8FwAAXAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEA
AAD6JTMAFgAAAQAAAC8AAAAJAAAACgAAACwAAAAWAAAAQwAAAA8AAAADAAAABQAAABIAAAATAAAA
AQAAAAcAAAABAAAAAAAKAAEAAAAAAAYACgHpAAYAFwHpAAoANwEwAQ4AUwE+ARIAjAHpAAYAmwHp
ABIArwHpABYA6wTVBAoAKgUZBQoAWwVGBQoATgY0BgoAeQZnBgoAkAZnBgoArQZnBgoAzAZnBgoA
5QZnBgoA/gZnBgoAGQdnBgoANAdnBgoATQdnBgoAhgdmBwoApgdmBwoAJwgwAQoAQQgwAQoASAgw
ARoA2AiwCBoA/wiwCAsADwkAABoAPwmwCAYAawnpABYApQmSCQoAyAkwAQoA8AnkCRYACgrVBBYA
FQqSCRYAMgrVBBYATgqSCQoAaQowAR4AwwqaChYAAgvVBAoAIgsPCwoAPwswAQoARAswAQoAaAtn
Bg4AlAt+Cw4ArQt+CwoAwgtmBwAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAUA
AQAQAAEAEABUAAAACQABABYAAQAQAGIAAAANAAUAHgABABAAbgAAAA0ABgAfAAEAEAB4AAAAEAAH
ACEAAAAQAIMAjQANAAgAJgAAARAAwwCNABEACgAqAAYAYgBNAAYAbgBRAAYAPwBVAAEA8gNZAAEA
ewR4AAEAewR4AAEA+QSCABEAOgWGABEAZwWKABEAqwWoAFAgAAAAAIYYqQETAAEAWyAAAAAAhgi6
AR0ABAB1IAAAAACGCMoBIgAEAH4gAAAAAIYI4QEmAAQAkyAAAAAAhgj5ASIABACcIAAAAACGCBgC
JgAEALEgAAAAAIYILQIiAAQAuiAAAAAAhghJAiYABADPIAAAAACGCFoCIgAEANggAAAAAIYIcgIi
AAQA7SAAAAAAhgiAAiIABAD2IAAAAACGCJUCKgAEAAshAAAAAIYIpAIiAAQAFCEAAAAAhgC6AiIA
BAAcIQAAAACGAMICIgAEACQhAAAAAIYYqQETAAQALyEAAAAAhgieAz8ABwA5IQAAAACGCKwDRAAI
AFAhAAAAAIYAwQNJAAkAWCEAAAAAhgDIA0kACQBgIQAAAACGAMICIgAJAGghAAAAAIYYqQFJAAkA
iCEAAAAAxgABBFwACQDjIQAAAADGAQ4ESQANAOUhAAAAAIEAHARJAA0ABCIAAAAAxgAwBGYADQBN
IgAAAADGATwESQARAE8iAAAAAMYBUARyABEAYiIAAAAAxgFkBHIAEgBkIgAAAACGGKkBfAATAHMi
AAAAAIYYqQF8ABQAgiIAAAAAhgiLBCYAFQCoIgAAAADGAAIFSQAVANEiAAAAAMYADQVJABUA7CIA
AAAAxgBkBHIAFQAgJAAAAADGADwESQAWACIkAAAAAIYYqQFJABYAKiQAAAAAgxipAUkAFgA0JAAA
AACTCHcFjgAWAG0kAAAAAJMIiwWTABYAdCQAAAAAkwiXBZgAFgB8JAAAAACWCLsFrAAXAI8kAAAA
AIYYqQFJABcAgyQAAAAAkRjdC5oBFwAAAAEAzwUAAAIA1gUAAAMA6gUAAAEAzwUAAAIA1gUAAAMA
6gUAAAEA9AUAAAEA9AUAAAEA+gUAAAIAAgYAAAMAzwUAAAQA6gUAAAEADAYAAAIAFAYAAAMAHgYA
AAQA6gUAAAEAzwUAAAEAJgYAAAEAKgYAAAEAKgYAAAEAJgYAAAEA9AVZAKkBPwBhAKkBPwBpAKkB
PwBxAKkBPwB5AKkBPwCBAKkBPwCJAKkBPwCRAKkBPwCZAKkBPwChAKkBPwCpAKkBtgCxAKkBSQAJ
AKkBEwAJAM8FuwAJANYFvwApAOgHwwAJAPEHyAApAPgHzQApAAIIyAApAA0I0gAJALoCIgAJAMIC
IgAJABYI1wAJAB8ItgC5AKkBPwAJAMEDSQAJAMgDSQARAKkBSQDBAFkI3QARAGAI5AApAHEIIgAR
AIEI6gAZAKkBSQARAOkI9QDRAOgH+gARACoJAAHZAFcJBQHxAKkBSQARAAIFSQBBAKkBPwD5ALIJ
SQARAA0FSQD5ALcJSQA5AL0JEAEBAdAJFAE5ANgJGQEJAfkJIAEJAfgHJgHBAAUKJgARAakBLAEZ
AR8KtgARAUAKMwEpAegHOQEZAFsKJgApAWQKIgApAbcJSQDBAG8KPgERANwKRQE5AfIKSwHBAG8K
VgFJAakBSQBRAVYLbgFRAXELdwFJAKkBfQFpAakBigF5AakBSQAhAKkBSQAuABsAFgIuAGMAPAIu
AAsAngEuABMA5gEuACMAFgIuACsAFgIuADMA5gEuADsAHAIuAEMAFgIuAFsAMwLjADMBCwEDAesB
CwFBARMCCwEJAgsCkQEpAgsCkQHxAFwBhQECAAEAAwANAAYADwAIABAACQASAAAAzgIuAAAA2gIz
AAAA7QI3AAAAAQMzAAAAHAM3AAAALQMzAAAARQM3AAAAUgMzAAAAZgMzAAAAcAMzAAAAgQM7AAAA
jAMzAAAA1wM3AAAA4QMzAAAArAQ3AAAAKgWeAAAAowWjAAAAxwWxAAIAAgADAAIAAwAFAAIABAAH
AAIABQAJAAIABgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAEA
EQAbAAEAEgAdAAIAIAAfAAIAJwAhAAIAKAAjAAEAKQAjAAIAKgAlAASAAAABAAAAJxktcgAAAAAA
AMQHAAAMAAAAAAAAAAAAAAABAMwAAAAAAAQAAAAAAAAAAAAAAAoAJwEAAAAABAAAAAAAAAAAAAAA
CgAwAQAAAAAMAAAAAAAAAAAAAAABAGsBAAAAAAQAAAAAAAAAAAAAAAoAyQQAAAAADAAAAAAAAAAA
AAAAAQCNCAAAAAAMAAAAAAAAAAAAAAABAHYKAAAAAAAAAAABAAAA5AsAAAAAAAAAPE1vZHVsZT4A
U0NfNjdCMjdGNzNGRUYxNEZBQ0I1NzUyRUVGMkIxODlBRTguZGxsAElucHV0MEJ1ZmZlcgBDcml0
ZXJpYVJlc3VsdEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3Jp
cHRNYWluAFJlc291cmNlcwBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3By
b2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQA
bXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZl
cgBPdXRwdXROYW1lTWFwAC5jdG9yAEJsb2JDb2x1bW4AZ2V0X0NyaXRlcmlhU1FMAGdldF9Dcml0
ZXJpYVNRTF9Jc051bGwAZ2V0X0NyaXRlcmlhRGVzY3JpcHRpb24AZ2V0X0NyaXRlcmlhRGVzY3Jp
cHRpb25fSXNOdWxsAGdldF9Dcml0ZXJpYVR5cGVDb2RlAGdldF9Dcml0ZXJpYVR5cGVDb2RlX0lz
TnVsbABnZXRfQ3JpdGVyaWFOYW1lAGdldF9Dcml0ZXJpYU5hbWVfSXNOdWxsAGdldF9Jc0VuYWJs
ZWQAZ2V0X0lzRW5hYmxlZF9Jc051bGwAZ2V0X0NyaXRlcmlhSUQAZ2V0X0NyaXRlcmlhSURfSXNO
dWxsAE5leHRSb3cARW5kT2ZSb3dzZXQAQ3JpdGVyaWFTUUwAQ3JpdGVyaWFTUUxfSXNOdWxsAENy
aXRlcmlhRGVzY3JpcHRpb24AQ3JpdGVyaWFEZXNjcmlwdGlvbl9Jc051bGwAQ3JpdGVyaWFUeXBl
Q29kZQBDcml0ZXJpYVR5cGVDb2RlX0lzTnVsbABDcml0ZXJpYU5hbWUAQ3JpdGVyaWFOYW1lX0lz
TnVsbABJc0VuYWJsZWQASXNFbmFibGVkX0lzTnVsbABDcml0ZXJpYUlEAENyaXRlcmlhSURfSXNO
dWxsAHNldF9BY2NvdW50Tm8Ac2V0X0FjY291bnROb19Jc051bGwAQWRkUm93AFNldEVuZE9mUm93
c2V0AEFjY291bnRObwBBY2NvdW50Tm9fSXNOdWxsAElucHV0c0ZpbmlzaGVkAFByb2Nlc3NJbnB1
dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3
T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFy
ZW50Q29tcG9uZW50AGdldF9PTEVEQkNvbm5TdHJpbmdUYXNrUHJvY2Vzc05QAE9MRURCQ29ublN0
cmluZ1Rhc2tQcm9jZXNzTlAAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENv
bm5lY3Rpb24AX1NxbENvbm4AUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2Vz
AFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJl
SW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZl
cgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFtZQBP
dXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1
dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzY3QjI3RjczRkVGMTRG
QUNCNTc1MkVFRjJCMTg5QUU4AGdldF9JdGVtAElzTnVsbABHZXRTdHJpbmcAR2V0Qm9vbGVhbgBH
ZXRJbnQ2NABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5n
AFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAZ2V0X0VuZE9mUm93c2V0
AEdldE91dHB1dElEAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRP
bmx5VmFyaWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABn
ZXRfRXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhD
b250ZXh0AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5EYXRh
LkNvbW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBDbG9zZQBnZXRfTGVuZ3RoAENvbnZlcnQAVG9JbnQz
MgBHZXRCbG9iRGF0YQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfVW5pY29kZQBUcmltAFNxbENv
bW1hbmQARGJDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABTcWxEYXRhUmVhZGVyAEV4ZWN1dGVS
ZWFkZXIARGJEYXRhUmVhZGVyAFRvU3RyaW5nAFJlYWQASW50MzIARm9ybWF0AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
LldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBG
aXJlSW5mb3JtYXRpb24AU3FsRXhjZXB0aW9uAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUALmNjdG9yAFNDXzc3NDc4MDJkNzU5ZDRkYmRhZWE4ZTUwOGE5MmMwYmQzLmNzcHJvai5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAA
ZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAg
AEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4A
IABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAAdQwByAGkAdABlAHIAaQBhAFIAZQBz
AHUAbAB0AAA/XwBPAEwARQBEAEIAQwBvAG4AbgBTAHQAcgBpAG4AZwBfAFQAYQBzAGsAUAByAG8A
YwBlAHMAcwBfAE4AUAAAAQATQQBjAGMAbwB1AG4AdABOAG8AABN7ADAAfQAgADoAIAB7ADEAfQAA
HUEAcABwAGwAeQAgAEMAcgBpAHQAZQByAGkAYQAAUUUAQwAgAHsAMAB9ACAAaQBzACAAbgBvAHQA
IABlAG4AYQBiAGwAZQBkACAAYQBuAGQAIABpAHMAIABuAG8AdAAgAGEAcABwAGwAaQBlAGQAADNB
AHAAcABsAHkAIABQAG8AbwBsACAATQBhAGkAbgB0AGUAbgBhAG4AYwBlACAARQBDAAB/UwBDAF8A
NwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5ADIAYwAw
AGIAZAAzAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAAqbKxeNYpFkO4fR8xx/pkNgAIiYRdzYCAzJEIt3pcVhk04IkJIAMBEhUdCBIZBCAA
Eh0DIAACAyAADgMgAAoEKAASHQMoAAIDKAAOAygACgQgAQEOBCABAQIDIAABAwYSFAMGEhgDBhIM
AgYICSAEAQgOEhUSGQsgBAEIHQgdEhUSGQUgAQESCAMGEgkFIAEBEgkDBhIhAwYSJQMGEikEAAAS
JQQAABIpBQABARIpBAgAEiUECAASKQMGEiQEAAASJAQIABIkBCABAQgDBhIVAwYdCAQgARwIBCAB
AggEIAEOCAQgAQoIBSACAQgcBiACAg4RZQUgAR0ICAYAAggSGQ4DBwEIBCAAEmkFIAESbRwEAAAS
cQUgARwSdQQBAAAAAyAACQQAAQgJBiACHQUICAUAABKAhQUgAQ4dBQYgAgEOEiEFIAASgJEEIAEc
DgYAAw4OHBwFIAASgJ0KIAYBCA4ODggQAgUAAg4OHBEHCAIOHQUOEoCJEoCRCBKAoQgAARKAqRGA
rQUgABKAsQcgAgEOEoCxBAcBEiUGIAEBEYC5CAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8B
ACpTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2oAAAUBAAAAABYBABFD
b3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQCQPwAAAAAAAAAAAACuPwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoD8AAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADQAwAAAAAAAAAAAADQAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEALXInGQAAAQAtcicZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEMAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAADAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcANwA0
ADcAOAAwADIAZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEAOQAyAGMAMABiAGQA
MwAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA0ADMAOQAuADIAOQAyADIAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAEMAXwA2ADcAQgAyADcARgA3ADMARgBFAEYAMQA0AEYAQQBDAEIANQA3ADUAMgBFAEUARgAy
AEIAMQA4ADkAQQBFADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMgAAAHgAKAABAE8AcgBpAGcAaQBu
AGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA2ADcAQgAyADcARgA3ADMARgBFAEYAMQA0AEYA
QQBDAEIANQA3ADUAMgBFAEUARgAyAEIAMQA4ADkAQQBFADgALgBkAGwAbAAAAHgAKwABAFAAcgBv
AGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIA
ZABhAGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAzAC4AYwBzAHAAcgBvAGoAAAAAAEQADwAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA0ADMAOQAuADIAOQAyADIA
OQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA0
ADMAOQAuADIAOQAyADIAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAwD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_67b27f73fef14facb5752eef2b189ae8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_OLEDBConnString_TaskProcess_NP</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">78a737b179ed2e498cc5d93feaf19ee9</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0].Columns[CriteriaID]"
                          cachedDataType="i8"
                          cachedName="CriteriaID"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Outputs[CriteriaResult]"
                      hasSideEffects="true"
                      name="CriteriaResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Apply Criteria.Outputs[CriteriaResult].Columns[AccountNo]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Sequence Container\Data Flow Task\Apply Criteria.Outputs[CriteriaResult].Columns[AccountNo]"
                          name="AccountNo" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Convert Criterias XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.IO;
using System.Collections.Generic;
//using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.Debug;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        bool bFireAgain = true;
        string sMsg = "";

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "CriteriaId", "Value", Row.CriteriaID.ToString());
            UpdateParameterAttribute(xmlDoc, "SessionId", "Value", Variables.SessionID.ToString());
            UpdateParameterAttribute(xmlDoc, "TrustId", "Value", Variables.TrustID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimReportDateId", "Value", Variables.DimReportingDateID.ToString());
            UpdateParameterAttribute(xmlDoc, "VerifySourceTable", "Value", string.Format("{0}.[{1}]",Variables.SourceSchema.ToString(),Variables.VerifySourceTable.ToString()));
            UpdateParameterAttribute(xmlDoc, "VerifyTargetTable", "Value", string.Format("{0}.[{1}]",Variables.TargetSchema.ToString(),Variables.VerifyTargetTable.ToString()));
            UpdateParameterAttribute(xmlDoc, "DBName", "Value", Variables.DBName.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimPoolId", "Value", Row.DimPoolID.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimSourceTrustID", "Value", Variables.DimSourceTrustID.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimTargetTrustID", "Value", Variables.DimTargetTrustID.ToString());
            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            if (_DEBUG)
            {
                sMsg = string.Format
                    ("[Debug: {0} {1} {2} {3}: {4}]"
                        , Row.CriteriaID.ToString()
                        , Row.CriteriaName
                        , Row.ECPassNoCode
                        , Environment.NewLine
                        , sQuery
                    );
                ComponentMetaData.FireInformation(1000, "Criteria XML To Query", sMsg, "", 0, ref bFireAgain);
            }
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);

        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {

        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;

        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public static bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public static string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public static string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public static string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public static string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String CriteriaTableTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaTableTypeCode_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[5]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int64 CriteriaSetId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaSetId_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int64 CriteriaID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[7]);
        }
    }
    public bool CriteriaID_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean Debug
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["_Debug"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DBName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DBName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String SessionID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["SessionID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String SourceSchema
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["SourceSchema"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TargetSchema
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TargetSchema"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String VerifySourceTable
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["VerifySourceTable"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String VerifyTargetTable
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["VerifyTargetTable"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  --><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><OutputType>Library</OutputType><NoStandardLibraries>false</NoStandardLibraries><RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace><AssemblyName>SC_E2943C92F5654764BDE53B2015D28597</AssemblyName><ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  --><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><WarningLevel>4</WarningLevel></PropertyGroup><!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  --><PropertyGroup><PreBuildEvent></PreBuildEvent><PostBuildEvent></PostBuildEvent></PropertyGroup><!-- This sections specifies references for the project. --><ItemGroup><Reference Include="System" /><Reference Include="System.Core"><RequiredTargetFramework>3.5</RequiredTargetFramework></Reference><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference><Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91"><Private>False</Private></Reference></ItemGroup><!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  --><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /><Compile Include="main.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    --></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="SSIS_ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC120</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{2AC64D70-C3B2-46FD-AFA7-B63A6484AB1E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_E2943C92F5654764BDE53B2015D28597.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD76k1kAAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAvlQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhUAABTAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxDQAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
VAAAAAAAAEgAAAACAAUA8C4AAHglAAABAAAAAAAAADguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASomAhYDKBEAAAoqIgIWKBIAAAoqWgMsCAIWKBMAAAoqcgEAAHBzFAAACnpmAnsOAAAKAnsPAAAK
F5RvEAAACnQHAAABKiICFygSAAAKKlICew4AAAoCew8AAAoYlG8VAAAKKiICGCgSAAAKKlICew4A
AAoCew8AAAoZlG8VAAAKKiICGSgSAAAKKlICew4AAAoCew8AAAoalG8VAAAKKiICGigSAAAKKlIC
ew4AAAoCew8AAAoblG8WAAAKKiICGygSAAAKKlICew4AAAoCew8AAAoclG8XAAAKKiICHCgSAAAK
KlICew4AAAoCew8AAAodlG8XAAAKKiICHSgSAAAKKh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJz
GgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcp4AAHAabxsAAAosFQIFAgMoHAAACg4EcwEAAAZvGAAA
BipKKwcCA28ZAAAGA28UAAAGLfEqBio6AigdAAAKAgN9AwAABCo6AigdAAAKAgN9BAAABCqWAnsE
AAAEbx4AAApyrgAAcG8fAAAKKCAAAApvIQAACqUfAAABKpYCewQAAARvHgAACnK8AABwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKcsoAAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApy8AAAcG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnIEAQBwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKch4BAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApyOAEAcG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnJIAQBwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKcmwBAHBvHwAACiggAAAKbyEAAAp0GQAAASpiAigj
AAAKAgJ7AgAABG8cAAAGfQYAAAQqHgIoJAAACioAAAAbMAcAUQIAAAEAABEXCnKQAQBwC3MlAAAK
DANvBgAABhYDbwYAAAZvJgAACignAAAKbygAAAoNcpIBAHAoKQAACglvKgAACm8rAAAKKCwAAAoT
BAlzLQAAChMFEQVvLgAAChEFFmpvLwAACggRBW8wAAAKCHLqAQBwcgACAHADbxIAAAYTChIKKDEA
AAooKQAABiYIcgwCAHByAAIAcAJ7AgAABG8fAAAGbzIAAAooKQAABiYIciACAHByAAIAcAJ7AgAA
BG8iAAAGbzIAAAooKQAABiYIcjACAHByAAIAcAJ7AgAABG8eAAAGbzIAAAooKQAABiYIckgBAHBy
AAIAcHJQAgBwAnsCAAAEbyAAAAZvMgAACgJ7AgAABG8jAAAGbzIAAAooMwAACigpAAAGJghybAEA
cHIAAgBwclACAHACewIAAARvIQAABm8yAAAKAnsCAAAEbyQAAAZvMgAACigzAAAKKCkAAAYmCHK8
AABwcgACAHACewIAAARvHQAABm8yAAAKKCkAAAYmCHJkAgBwcmoCAHAoLgAABhMGAnsGAAAELGly
egIAcBuNAwAAARMLEQsWA28SAAAGEwwSDCgxAAAKohELFwNvCgAABqIRCxgDbwgAAAaiEQsZKDQA
AAqiEQsaEQaiEQsoNQAACgsCKDYAAAog6AMAAHK2AgBwB3KQAQBwFhIAbzcAAAooKQAAChEGbzgA
AAoTBwNvAgAABm85AAAKA28CAAAGEQdvOgAACt4kEwhy4gIAcBEEKDQAAAoRCG87AAAKKDwAAAoT
CREJcz0AAAp6KgAAAEEcAAAAAAAARwAAAOUBAAAsAgAAJAAAACgAAAEbMAMAggAAAAIAABEUCgJv
PgAACgsHcvYCAHBvPwAACgwoQAAACnNBAAAKDQhvQgAAChMFKywRBW9DAAAKdAgAAAETBAkRBG9E
AAAKcjoDAHBvRQAACm9GAAAKEQRvRwAAChEFb0gAAAoty94VEQV1MgAAARMGEQYsBxEGb0kAAArc
CQMSAG9KAAAKJgYqAAABEAAAAgAoADlhABUAAAAAEzACAFMAAAADAAARFgoCAygoAAAGCwctAgYq
B29EAAAKBG9FAAAKLBYHb0QAAAoEb0UAAAoFb0sAAAoXCiseAgRvTAAACgwIBW9LAAAKB29EAAAK
CG9NAAAKJhcKBioAEzAEACAAAAAEAAARc04AAAoKBnJEAwBwAm8rAAAKA29PAAAKJgZvMgAACioT
MAMAHwAAAAQAABFzTgAACgoGclYDAHACbysAAApvUAAACiYGbzIAAAoqABswBADHAAAABQAAEXJi
AwBwCn5RAAAKc1IAAAoLAi0CBioCcoYDAHBvPwAACgwIOZYAAAAIb1MAAAoWPooAAAAHcrIDAHBv
VAAACiYIb0IAAAoTBSszEQVvQwAACnQIAAABDQdytgMAcAlvRAAACnIAAgBwb0UAAApvRgAACm8y
AAAKb1AAAAomEQVvSAAACi3E3hURBXUyAAABEwYRBiwHEQZvSQAACtwHB29VAAAKGFkYb1YAAApy
xgMAcG9UAAAKJgdvMgAACgreBRMEEQR6BioAARwAAAIASABAiAAVAAAAAAAAFgCqwAAFKAAAARsw
BQApAwAABgAAEXNOAAAKCgItBwZvMgAACioCcvYCAHBvPwAACgsHOfkCAAAHb0IAAAoTBTjJAgAA
EQVvQwAACnQIAAABDH5RAAAKDQhvRAAACnLKAwBwb0UAAApvRgAACm8yAAAKJRMGOfoBAAARBnLe
AwBwKFcAAAotJxEGcvADAHAoVwAACjqtAAAAEQZyAAQAcChXAAAKOjMBAAA4xQEAAHISBABwG40D
AAABEwcRBxYIb0QAAApyOgMAcG9FAAAKb0YAAApvMgAACqIRBxcIb0QAAApyygMAcG9FAAAKb0YA
AApvMgAACqIRBxgIb0QAAApyygMAcG9FAAAKb0YAAApvMgAACqIRBxkIb0QAAApyAAIAcG9FAAAK
b0YAAApvMgAACqIRBxoDohEHKDUAAAoNOMABAABycgQAcBuNAwAAARMIEQgWCG9EAAAKcjoDAHBv
RQAACm9GAAAKbzIAAAqiEQgXCG9EAAAKcsoDAHBvRQAACm9GAAAKbzIAAAqiEQgYCG9EAAAKcsoD
AHBvRQAACm9GAAAKbzIAAAqiEQgZCG9EAAAKcgACAHBvRQAACm9GAAAKbzIAAAqiEQgaA6IRCCg1
AAAKDTgpAQAAcnIEAHAbjQMAAAETCREJFghvRAAACnI6AwBwb0UAAApvRgAACm8yAAAKohEJFwhv
RAAACnLKAwBwb0UAAApvRgAACm8yAAAKohEJGAhvRAAACnLKAwBwb0UAAApvRgAACm8yAAAKohEJ
GQhvRAAACnIAAgBwb0UAAApvRgAACm8yAAAKohEJGgOiEQkoNQAACg04kgAAAHLcBABwG40DAAAB
EwoRChYIb0QAAApyOgMAcG9FAAAKb0YAAApvMgAACqIRChcIb0QAAApyygMAcG9FAAAKb0YAAApv
MgAACqIRChgIb0QAAApyygMAcG9FAAAKb0YAAApvMgAACqIRChkIb0QAAApyAAIAcG9FAAAKb0YA
AApvMgAACqIRChoDohEKKDUAAAoNBglvVAAACiYRBW9IAAAKOiv9///eFREFdTIAAAETCxELLAcR
C29JAAAK3N4FEwQRBHoGbzIAAAoqAAAAQTQAAAIAAAAqAAAA3AIAAAYDAAAVAAAAAAAAAAAAAAAQ
AAAADQMAAB0DAAAFAAAAKAAAARswAwA8AAAABwAAEXNOAAAKCgItBwZvMgAACioGAgMoLQAABm9U
AAAKJgYCcmoCAHAoLwAABm9UAAAKJt4DCwd6Bm8yAAAKKgEQAAAAABAAIjIAAygAAAEbMAMAZQEA
AAgAABF+UQAACgoCLQoDKFgAAAosAgYqAgNvWQAACgsHOTsBAAAHb1oAAAoKBnNSAAAKDAJyMgUA
cG8/AAAKDQksfglvQgAAChMJK1QRCW9DAAAKdAgAAAETBBEEb0QAAApyfAUAcG9FAAAKb0YAAApv
MgAACigrAAAGEwUIEQRvRAAACnI6AwBwb0UAAApvRgAACm8yAAAKEQVvWwAACiYRCW9IAAAKLaPe
FREJdTIAAAETChEKLAcRCm9JAAAK3BQNAnKOBQBwbz8AAAoNCTmFAAAACW9CAAAKEwsrWxELb0MA
AAp0CAAAARMGEQZvRAAACnJ8BQBwb0UAAApvRgAACm8yAAAKEQYoLAAABigqAAAGEwcIEQZvRAAA
CnI6AwBwb0UAAApvRgAACm8yAAAKEQdvWwAACiYRC29IAAAKLZzeFRELdTIAAAETDBEMLAcRDG9J
AAAK3AhvMgAACgreBRMIEQh6BioAAABBTAAAAgAAAEYAAABhAAAApwAAABUAAAAAAAAAAgAAANgA
AABoAAAAQAEAABUAAAAAAAAAAAAAABMAAABLAQAAXgEAAAUAAAAoAAABHgIoFgAABioeAigdAAAK
KhMwAgAtAAAACQAAEX4HAAAELSBy1AUAcNAHAAACKF0AAApvXgAACnNfAAAKCgaABwAABH4HAAAE
Khp+CAAABCoeAoAIAAAEKhp+CQAABCouczYAAAaACQAABCoeAihiAAAKKgAAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAwLAAAjfgAAeAsAAOQPAAAj
U3RyaW5ncwAAAABcGwAAVAYAACNVUwCwIQAAEAAAACNHVUlEAAAAwCEAALgDAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkBAAAA+iUzABYAAAEAAAA6AAAACAAAAAkAAAA3AAAAIAAAAGIAAAABAAAADwAA
AAkAAAAEAAAAHAAAAB8AAAABAAAAAQAAAAcAAAABAAAAAAAKAAEAAAAAAAYA9QDUAAYAAgHUAAoA
IgEbAQ4APgEpARIAdwHUAAYAhgHUABIAmgHUABYAxAW5BRYAzAW5BQoAogaRBgoA0wa+BgoAJwgN
CAoAUghACAoAaQhACAoAhghACAoApQhACAoAvghACAoA1whACAoA8ghACAoADQlACAoAJglACAoA
Xwk/CQoAfwk/CQoA4gkbAQoAGgobAQoAIQobARoAlQptChoAvAptCgsAzAoAABoA/AptCgoAKAsb
AQYAMAvUAAoAYgsbAQoAigt+CwoAtQurCwoAwgurCwoA4QsbAQoA8AsbAR4AVQwsDAoAtwwbAQoA
zQwbARYA4gy5BRYAAQ25BQoAGQ0bAQoAYg1HDQoAbw1HDQoAlg2DDRYAvA25BRYA4g25BQoAEQ4b
AQoAUg5+CwoA2A7FDgoA9Q4bAQoA+g4bAQoAHg9ACA4ASg80Dw4AYw80DwoAeA8/CQAAAAABAAAA
AAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAkAAQAWAAEAEABNAAAADQADABoAAQAQAFkAAAAN
AAQAGwABABAAYwAAAAwABQAlAAAAEABuAHgADQAHADEAAAEQAK4AeAARAAkANQAGAE0ASgAGAFkA
TgABAHwEZgABAHwEZgBRgJAFcAABAJsFeAARALIGrAARAN8GsAARACMHzgBQIAAAAACGGJQBEwAB
AFsgAAAAAIYIpQEdAAQAdSAAAAAAhgi1ASIABAB/IAAAAACGCMUBKAAFAIggAAAAAIYI3AEsAAUA
nyAAAAAAhgjzAR0ABgC5IAAAAACGCAUCKAAGAMIgAAAAAIYIHgIxAAYA1yAAAAAAhggvAigABgDg
IAAAAACGCEcCMQAGAPUgAAAAAIYIWAIoAAYA/iAAAAAAhghwAjEABgATIQAAAACGCIoCKAAGABwh
AAAAAIYIqwIoAAYAMSEAAAAAhgi5AigABgA6IQAAAACGCM4CNQAGAE8hAAAAAIYI4AIoAAYAWCEA
AAAAhgj5AjUABgBtIQAAAACGCAgDKAAGAHYhAAAAAIYAHgMoAAYAfiEAAAAAhgAmAygABgCGIQAA
AACGGJQBUgAGAKYhAAAAAMYARARWAAYAyyEAAAAAxgFRBGAACgDeIQAAAADGAWUEYAALAOAhAAAA
AIYYlAFqAAwA7yEAAAAAhhiUAWoADQD+IQAAAACGCIwEKAAOACQiAAAAAIYIlgQxAA4ASiIAAAAA
hgihBDEADgBwIgAAAACGCLgEMQAOAJYiAAAAAIYIxgQxAA4AvCIAAAAAhgjXBDEADgDiIgAAAACG
COgEMQAOAAgjAAAAAIYI9AQxAA4ALiMAAAAAhggKBTEADgBUIwAAAADGAKIFUgAOAG0jAAAAAMYA
rQVSAA4AeCMAAAAAxgBlBGAADgD0JQAAAACWANgFewAPAJQmAAAAAJYA6wWDABEA9CYAAAAAlgAE
BowAFQAgJwAAAACWAB0GkgAXAEwnAAAAAJYAKQaXABgAPCgAAAAAlgA/Bp0AGQCoKwAAAACWAFsG
pAAbAAAsAAAAAJYAeQadAB4AwC0AAAAAhhiUAVIAIADILQAAAACDGJQBUgAgANAtAAAAAJMI7wa0
ACAACS4AAAAAkwgDB7kAIAAQLgAAAACTCA8HvgAgABguAAAAAJYIMwfSACEAKy4AAAAAhhiUAVIA
IQAfLgAAAACRGJMP9QIhAAAAAQBHBwAAAgBOBwAAAwBiBwAAAQBsBwAAAQBsBwAAAQByBwAAAgB6
BwAAAwBHBwAABABiBwAAAQBHBwAAAQCEBwAAAQCIBwAAAQCIBwAAAQCEBwAAAQCSBwAAAgCZBwAA
AQCSBwAAAgCZBwAAAwCoBwAABAC3BwAAAQDHBwAAAgDRBwAAAQDHBwAAAQDcBwAAAQCSBwAAAgDl
BwAAAQCSBwAAAgDlBwAAAwD0BwAAAQCSBwAAAgADCAAAAQBsB2EAlAHcAGkAlAHcAHEAlAHcAHkA
lAHcAIEAlAHcAIkAlAHcAJEAlAHcAJkAlAHcAKEAlAHcAKkAlAHcALEAlAHhALkAlAFSAAkAlAET
AAkARwfmAAkATgfqACkAwQnuAAkAygnzAAkA0wn5AAkA2gnhAMEAlAHcACkA/An+ACkABgr5ACkA
EQoDAQkAHgMoAAkAJgMoABEAlAFSAMkAMgoIAREAOQoPARkAlAFSABEApgoVAdkAwQkaAREA5wog
AeEAFAslAQEBlAFSABEAogVSABEArQVSAEkAlAFSADkAVwswAQkBags0ATkAcgs5AREBkwtAAREB
/AlGAckAnwsxAMkApAtMARkBlAFSASEByQtSACEBzwtYAUkA3AtdASkB5wsxABkA5wsxAMkApAtk
ATEB/AtrAckApAtvAREAbgx2ATkBhAx8AREBlAyHATkAnQxSADkAqwxSAUEBwQwxAMkApAuNAUkB
lAHcAEkA7QytAUEADQ2zAWEBKA26AQwAlAHJAVkBog3UAXkBsA3aAUEA0w3eAYEB7w3kAUEA+g0x
AAwABA7rAXkBCA4oAJEBHQ5SAAwAJQ7zAUEAMQ7cAEkAOw7kAYEBSw4XApkBlAFSAJkBYA4pApkB
YA44AskAbQ5wAJkBlAHcAFkBcw5AApkBSw5EApkBVwtAApkBfQ5LAskAhA5oAskAkA6VAkEAng6a
AkEArw4xAJkBvQ6gAqEBlAFSAKkBDA/JAqkBJw/SAlEAlAHYAsEBlAHlAtEBlAFSACEAlAFSAA4A
FABzAC4AGwBxAy4AYwCXAy4ACwD5Ai4AEwBBAy4AIwBxAy4AKwBxAy4AMwBBAy4AOwB3Ay4AQwBx
Ay4AWwCOA8MAEwErAeMA4wIrASEBCwMrAUkDAwPsAmkDAwPsApUB/AEgAjICUwJuAowCqALgAgIA
AQAFABEABwAaAAgAHAAAADIDOQAAAD4DPgAAAFEDOQAAAF8DPgAAAHQDQgAAAIEDPgAAAJUDQgAA
AKIDPgAAALYDQgAAAMwDPgAAAOkDPgAAAPMDPgAAAAQERgAAABIEPgAAACcERgAAADIEPgAAACAF
PgAAACYFQgAAAC0FQgAAAEAFQgAAAEoFQgAAAFcFQgAAAGQFQgAAAGwFQgAAAH4FQgAAAKIGxAAA
ABsHyQAAAD8H1wACAAIAAwABAAMAAwABAAUABQACAAQABQACAAYABwACAAcACQACAAgACwACAAkA
DQACAAoADwACAAsAEQACAAwAEwACAA0AFQACAA4AFwACAA8AGQACABAAGwACABEAHQACABIAHwAC
ABMAIQACABwAIwACAB0AJQACAB4AJwACAB8AKQACACAAKwACACEALQACACIALwACACMAMQACACQA
MwACADIANQACADMANwABADQANwACADUAOQDAAQSAAAABAAAAJRnfbwAAAAAAAJ0JAAAMAAAAAAAA
AAAAAAABALcAAAAAAAQAAAAAAAAAAAAAAAoAEgEAAAAABAAAAAAAAAAAAAAACgAbAQAAAAAMAAAA
AAAAAAAAAAABAFYBAAAAAAQAAAAAAAAAAAAAAAoAuQUAAAAADAAAAAAAAAAAAAAAAQBKCgAAAAAM
AAAAAAAAAAAAAAABAAgMAAAAAAAAAAABAAAAmg8AAAAAADxNb2R1bGU+AFNDX0UyOTQzQzkyRjU2
NTQ3NjRCREU1M0IyMDE1RDI4NTk3LmRsbABJbnB1dDBCdWZmZXIAVXNlckNvbXBvbmVudABDb25u
ZWN0aW9ucwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfZmQwYmFiNjcxZmY0NDYy
Njg0NGQzYmM2OWEyZDgyYmUuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRC
dWZmZXIAU2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZp
Z3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdl
dF9Dcml0ZXJpYVNRTABzZXRfQ3JpdGVyaWFTUUwAZ2V0X0NyaXRlcmlhU1FMX0lzTnVsbABzZXRf
Q3JpdGVyaWFTUUxfSXNOdWxsAGdldF9YTUxTcWxRdWVyeUVDAGdldF9YTUxTcWxRdWVyeUVDX0lz
TnVsbABnZXRfRUNQYXNzTm9Db2RlAGdldF9FQ1Bhc3NOb0NvZGVfSXNOdWxsAGdldF9Dcml0ZXJp
YU5hbWUAZ2V0X0NyaXRlcmlhTmFtZV9Jc051bGwAZ2V0X0NyaXRlcmlhVGFibGVUeXBlQ29kZQBn
ZXRfQ3JpdGVyaWFUYWJsZVR5cGVDb2RlX0lzTnVsbABnZXRfSXNFbmFibGVkAGdldF9Jc0VuYWJs
ZWRfSXNOdWxsAGdldF9Dcml0ZXJpYVNldElkAGdldF9Dcml0ZXJpYVNldElkX0lzTnVsbABnZXRf
Q3JpdGVyaWFJRABnZXRfQ3JpdGVyaWFJRF9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABDcml0
ZXJpYVNRTABDcml0ZXJpYVNRTF9Jc051bGwAWE1MU3FsUXVlcnlFQwBYTUxTcWxRdWVyeUVDX0lz
TnVsbABFQ1Bhc3NOb0NvZGUARUNQYXNzTm9Db2RlX0lzTnVsbABDcml0ZXJpYU5hbWUAQ3JpdGVy
aWFOYW1lX0lzTnVsbABDcml0ZXJpYVRhYmxlVHlwZUNvZGUAQ3JpdGVyaWFUYWJsZVR5cGVDb2Rl
X0lzTnVsbABJc0VuYWJsZWQASXNFbmFibGVkX0lzTnVsbABDcml0ZXJpYVNldElkAENyaXRlcmlh
U2V0SWRfSXNOdWxsAENyaXRlcmlhSUQAQ3JpdGVyaWFJRF9Jc051bGwAUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQYXJlbnRDb21wb25lbnQA
Z2V0X0RlYnVnAGdldF9EQk5hbWUAZ2V0X0RpbVJlcG9ydGluZ0RhdGVJRABnZXRfU2Vzc2lvbklE
AGdldF9Tb3VyY2VTY2hlbWEAZ2V0X1RhcmdldFNjaGVtYQBnZXRfVHJ1c3RJRABnZXRfVmVyaWZ5
U291cmNlVGFibGUAZ2V0X1ZlcmlmeVRhcmdldFRhYmxlAERlYnVnAERCTmFtZQBEaW1SZXBvcnRp
bmdEYXRlSUQAU2Vzc2lvbklEAFNvdXJjZVNjaGVtYQBUYXJnZXRTY2hlbWEAVHJ1c3RJRABWZXJp
ZnlTb3VyY2VUYWJsZQBWZXJpZnlUYXJnZXRUYWJsZQBfRW5kT2ZMaW5lAF9ERUJVRwBQcmVFeGVj
dXRlAFBvc3RFeGVjdXRlAFN5c3RlbS5YbWwAWG1sTm9kZQBYbWxEb2N1bWVudABHZXRQYXJhbWV0
ZXJCeU5hbWUAVXBkYXRlUGFyYW1ldGVyQXR0cmlidXRlAEdldE9wZXJhdG9yV2l0aFBhcmFtZXRl
cgBHZXRPcGVyYXRvcgBTZWxlY3RlZEl0ZW1zVG9TdHJpbmcAR2V0VFNRTERlY2xhcmVIZWFkZXJG
cm9tWE1MAEdldFRTUUxFeGVjdXRhYmxlUXVlcnlGcm9tWE1MAEdldFRTUUxRdWVyeUJvZHlGcm9t
WE1MAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5h
Z2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9E
ZWZhdWx0AERlZmF1bHQAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAT3V0cHV0TWFwAHZhbHVl
AElucHV0SUQASW5wdXROYW1lAFJvdwBDb21wb25lbnQAWG1sRG9jAHNQYXJhbWV0ZXJOYW1lAHNB
dHRyaWJ1dGVOYW1lAHNBdHRyaWJ1dGVWYWx1ZQBzT3BlcmF0b3IAc1BhcmFtZXRlcgB4bWxQYXJh
bQBzTGluZURlbGltaXRlcgBzUXVlcnlOb2RlUGF0aABzTm9kZVBhdGgAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDX0UyOTQzQzkyRjU2
NTQ3NjRCREU1M0IyMDE1RDI4NTk3AGdldF9JdGVtAHNldF9JdGVtAElzTnVsbABTZXROdWxsAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AR2V0U3RyaW5nAEdldEJvb2xlYW4AR2V0SW50NjQAU3Ry
aW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMATWljcm9zb2Z0LlNx
bFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldy
YXBwZXIASURUU1ZhcmlhYmxlczEwMABnZXRfUmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxl
MTAwAFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNF
dmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRleHQAQm9vbGVhbgBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBnZXRfTGVuZ3RoAENvbnZlcnQAVG9JbnQzMgBH
ZXRCbG9iRGF0YQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfVW5pY29kZQBUcmltAEZvcm1hdABT
eXN0ZW0uSU8ATWVtb3J5U3RyZWFtAFN0cmVhbQBGbHVzaABzZXRfUG9zaXRpb24ATG9hZABJbnQ2
NABUb1N0cmluZwBFbnZpcm9ubWVudABnZXRfTmV3TGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRU
U1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElE
VFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEARmlyZUluZm9ybWF0
aW9uAEdldEJ5dGVzAFJlc2V0QmxvYkRhdGEAQWRkQmxvYkRhdGEARXhjZXB0aW9uAGdldF9NZXNz
YWdlAEFwcGxpY2F0aW9uRXhjZXB0aW9uAFhtbEVsZW1lbnQAZ2V0X0RvY3VtZW50RWxlbWVudABY
bWxOb2RlTGlzdABTZWxlY3ROb2RlcwBTdHJpbmdDb21wYXJlcgBnZXRfSW52YXJpYW50Q3VsdHVy
ZUlnbm9yZUNhc2UAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyAElFcXVh
bGl0eUNvbXBhcmVyYDEAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0
b3IAZ2V0X0N1cnJlbnQAWG1sQXR0cmlidXRlQ29sbGVjdGlvbgBnZXRfQXR0cmlidXRlcwBYbWxB
dHRyaWJ1dGUAZ2V0X0l0ZW1PZgBnZXRfVmFsdWUAQWRkAE1vdmVOZXh0AElEaXNwb3NhYmxlAERp
c3Bvc2UAVHJ5R2V0VmFsdWUAc2V0X1ZhbHVlAENyZWF0ZUF0dHJpYnV0ZQBBcHBlbmQAU3RyaW5n
QnVpbGRlcgBBcHBlbmRGb3JtYXQARW1wdHkAZ2V0X0NvdW50AFJlbW92ZQBvcF9FcXVhbGl0eQBJ
c051bGxPckVtcHR5AFNlbGVjdFNpbmdsZU5vZGUAZ2V0X0lubmVyVGV4dABSZXBsYWNlAFN5c3Rl
bS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDX2ZkMGJhYjY3MWZmNDQ2MjY4
NDRkM2JjNjlhMmQ4MmJlLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAA
DV8ARABlAGIAdQBnAAANRABCAE4AYQBtAGUAACVEAGkAbQBSAGUAcABvAHIAdABpAG4AZwBEAGEA
dABlAEkARAAAE1MAZQBzAHMAaQBvAG4ASQBEAAAZUwBvAHUAcgBjAGUAUwBjAGgAZQBtAGEAABlU
AGEAcgBnAGUAdABTAGMAaABlAG0AYQAAD1QAcgB1AHMAdABJAEQAACNWAGUAcgBpAGYAeQBTAG8A
dQByAGMAZQBUAGEAYgBsAGUAACNWAGUAcgBpAGYAeQBUAGEAcgBnAGUAdABUAGEAYgBsAGUAAAEA
VzwAPwB4AG0AbAAgAHYAZQByAHMAaQBvAG4APQAiADEALgAwACIAIABlAG4AYwBvAGQAaQBuAGcA
PQAiAHUAdABmAC0AMQA2ACIAIAA/AD4AewAwAH0AARVDAHIAaQB0AGUAcgBpAGEASQBkAAALVgBh
AGwAdQBlAAATUwBlAHMAcwBpAG8AbgBJAGQAAA9UAHIAdQBzAHQASQBkAAAfRABpAG0AUgBlAHAA
bwByAHQARABhAHQAZQBJAGQAABN7ADAAfQAuAFsAewAxAH0AXQAABQ0ACgAADy8ALwBRAHUAZQBy
AHkAADtbAEQAZQBiAHUAZwA6ACAAewAwAH0AIAB7ADEAfQAgAHsAMgB9ACAAewAzAH0AOgAgAHsA
NAB9AF0AACtDAHIAaQB0AGUAcgBpAGEAIABYAE0ATAAgAFQAbwAgAFEAdQBlAHIAeQAAE3sAMAB9
AHsAMQB9AHsAMgB9AABDLwAvAFAAYQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABlAD0AJwBTAHEA
bABQAGEAcgBhAG0AZQB0AGUAcgAnAF0AAQlOAGEAbQBlAAARIAB7ADAAfQAgAHsAMQB9AAALIAB7
ADAAfQAgAAAjKAAnAG4AbwBuAGUAJwApACAAQQBuAGQAIAAxAD0AMQAgAAErLgAvAC8AUwBlAGwA
ZQBjAHQAZQBkAEkAdABlAG0AcwAvAEkAdABlAG0AAAMoAAAPJwB7ADAAfQAnACwAIAABAykAABNT
AHEAbABEAGIAVAB5AHAAZQAAEUQAYQB0AGUAVABpAG0AZQAAD1YAYQByAEMAaABhAHIAABFOAFYA
YQByAEMAaABhAHIAAF9EAGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACAAPQAgAEMAbwBu
AHYAZQByAHQAKAB7ADIAfQAsACAAJwB7ADMAfQAnACwAIAAxADIAMAApACAAewA0AH0AAWlEAGUA
YwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACgAbQBhAHgAKQAgAD0AIABDAG8AbgB2AGUAcgB0
ACgAewAyAH0AKABtAGEAeAApACwAIAAnAHsAMwB9ACcAKQAgAHsANAB9AAFVRABlAGMAbABhAHIA
ZQAgAEAAewAwAH0AIAB7ADEAfQAgAD0AIABDAG8AbgB2AGUAcgB0ACgAewAyAH0ALAAgACcAewAz
AH0AJwApACAAewA0AH0AAUkvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAnAFIA
ZQBwAGwAYQBjAGUATwBwAGUAcgBhAHQAbwByACcAXQABEU8AcABlAHIAYQB0AG8AcgAARS8ALwBQ
AGEAcgBhAG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUgBlAHAAbABhAGMAZQBMAG8AbwBrAHUA
cAAnAF0AAX9TAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQAMwBi
AGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAASGrL6Edn1Eib8a1FylpVxAAIiYRdzYCAzJEIt3pcVhk04IkJ
IAMBEhUdCBIZBCAAEh0FIAEBEh0DIAACBCABAQIDIAAOAyAACgQoABIdAygAAgMoAA4DKAAKAwYS
EAMGEhQDIAABCSAEAQgOEhUSGQUgAQESCAMGEgkFIAEBEgkCBg4EDQAKAAIGAgcAAhIhEiUOCAAE
AhIlDg4OBQACDg4OBAABDg4FAAEOEiEGAAIOEiUOBwADDhIlDg4DBhIpAwYSLQQAABIpBAAAEi0F
AAEBEi0ECAASKQQIABItAwYSIAQAABIgBAgAEiAEIAEBDgQgAQEIAwYSFQMGHQgEIAEcCAUgAgEI
HAQgAQIIBCABDggEIAEKCAYgAgIOEWkFIAEdCAgEIAASbQUgARJxHAQAABJ1BSABHBJ5BAEAAAAD
IAAJBAABCAkGIAIdBQgIBQAAEoCJBSABDh0FBQACDg4cBSABAR0FBCABAQoGIAEBEoCRBgADDg4c
HAMAAA4GAAIODh0cBSAAEoCdCiAGAQgODg4IEAIFIAEdBQ4HAAQODhwcHBcHDQIOEiUdBQ4SgI0O
HQUSgKEOCh0cCgUgABKAqQYgARKArQ4FAAASgLEIFRKAtQIOEiEKIAEBFRKAuQETAAUgABKAvQMg
ABwFIAASgMEGIAESgMUOByACARMAEwEIIAICEwAQEwEaBwcSIRKAqRKArRUSgLUCDhIhEiESgL0S
gMkIIAESgMUSgMUIBwMCEiESgMUIIAMSgM0OHBwFBwESgM0HIAISgM0OHAMgAAgGIAESgM0OByAC
EoDNCAgUBwcOEoDNEoCtEiESgKESgL0SgMkFAAICDg4dBwwSgM0SgK0SIQ4SgKESgL0OHRwdHB0c
HRwSgMkIBwISgM0SgKEEAAECDgUgARIhDgcgAhKAzQ4OIAcNDhIhEoDNEoCtEiEOEiEOEoChEoC9
EoDJEoC9EoDJCAABEoDVEYDZBSAAEoDdByACAQ4SgN0EBwESKQYgAQERgOUIAQACAAAAAAADAAAB
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0LwEAKlNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNz
cHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEyAAAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBAACQVAAAAAAAAAAAAACuVAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAoFQAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA0AMAAAAAAAAA
AAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAN9v
JRkAAAEA328lGT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBDADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0AGIAMAAAAIAAKwAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcA
MQBmAGYANAA0ADYAMgA2ADgANAA0AGQAMwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcABy
AG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYANAAzADcA
LgAyADgANgAzADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ARQAy
ADkANAAzAEMAOQAyAEYANQA2ADUANAA3ADYANABCAEQARQA1ADMAQgAyADAAMQA1AEQAMgA4ADUA
OQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADIAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBDAF8ARQAyADkANAAzAEMAOQAyAEYANQA2ADUANAA3ADYANABCAEQARQA1
ADMAQgAyADAAMQA1AEQAMgA4ADUAOQA3AC4AZABsAGwAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAQwBfAGYAZAAwAGIAYQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAz
AGIAYwA2ADkAYQAyAGQAOAAyAGIAZQAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUA
YwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANAAzADcALgAyADgANgAzADkAAAAAAEgADwAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANAAzADcALgAyADgA
NgAzADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAMA0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_e2943c92f5654764bde53b2015d28597</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_Debug,User::DBName,User::DimReportingDateID,User::SessionID,User::SourceSchema,User::TargetSchema,User::TrustID,User::VerifySourceTable,User::VerifyTargetTable</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">3e7d77f42ca8eb458da82ee32e5fb0e0</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaTableTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTableTypeCode"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaSetId]"
                          cachedDataType="i8"
                          cachedName="CriteriaSetId"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetId]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaID]"
                          cachedDataType="i8"
                          cachedName="CriteriaID"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneCode]"
                          name="SceneCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::SceneCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::SceneCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneName]"
                          name="SceneName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::SceneName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::SceneName]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneTypeCode]"
                          name="SceneTypeCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::SceneTypeCode]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::SceneTypeCode]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[TradeType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[TradeType]"
                          name="TradeType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,100)@[User::TradeType]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,100)@[User::TradeType]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task\Get Criterias"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Criterias"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Declare @CriteriaSetName nvarchar(100) =  'scene'
select CriteriaID
	, CriteriaName
	, CriteriaDescription
	, C.CriteriaSetId
	, Verification.GetDictonaryCodeByCodeId('CriteriaSetType', C.CriteriaSetId) as CriteriaSetTypeCode
	, Verification.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode
	, IsEnable as IsEnabled
	, Verification.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, Verification.GetDictonaryCodeByCodeId('CriteriaTableType', CriteriaTableTypeId) as CriteriaTableTypeCode
	, SequenceNo
    , cast(null as nvarchar(max)) as CriteriaSQL
from Verification.Criteria C
Join Verification.CriteriaSet CS on CS.CriteriaSetId = C.CriteriaSetId
where  IsEnable = 1 And CriteriaSetTypeId = [Verification].GetDictionaryCodeID('CriteriaSetType',@CriteriaSetName)
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::_Query_GetCriteriasBySet</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task\Get Criterias.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CD17D-6165-SYW\MSSQL.TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[CD17D-6165-SYW\MSSQL.TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaID]"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]"
                          name="CriteriaID"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTableTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          dataType="bool"
                          name="IsEnabled" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaID]"
                          dataType="i8"
                          name="CriteriaID" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaID]"
                          dataType="i8"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaID]"
                          name="CriteriaID" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          dataType="bool"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[QuickWizard].[RelevanceScene]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[CD17D-6165-SYW\MSSQL.QuickWizard]"
                      connectionManagerRefId="Package.ConnectionManagers[CD17D-6165-SYW\MSSQL.QuickWizard]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SceneCode]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="SceneCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SceneCode]"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SceneName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="SceneName"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SceneName]"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneName]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TradeType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="TradeType"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TradeType]"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[TradeType]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AccountNo]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="AccountNo"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountNo]"
                          lineageId="Package\Sequence Container\Data Flow Task\Apply Criteria.Outputs[CriteriaResult].Columns[AccountNo]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SceneTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="SceneTypeCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SceneTypeCode]"
                          lineageId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[SceneTypeCode]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SceneCode]"
                          dataType="wstr"
                          length="200"
                          name="SceneCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SceneName]"
                          dataType="wstr"
                          length="200"
                          name="SceneName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SceneTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="SceneTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TradeType]"
                          dataType="wstr"
                          length="200"
                          name="TradeType" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountNo]"
                          dataType="wstr"
                          length="200"
                          name="AccountNo" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task.Paths[CriteriaResult]"
                  endId="Package\Sequence Container\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="CriteriaResult"
                  startId="Package\Sequence Container\Data Flow Task\Apply Criteria.Outputs[CriteriaResult]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Sequence Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Sequence Container\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task.Paths[OLE DB Source Output]"
                  endId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\Sequence Container\Data Flow Task\Get Criterias.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task.Paths[Output 0]"
                  endId="Package\Sequence Container\Data Flow Task\Apply Criteria.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5317FE4F-9E80-4ABD-AEE8-91DAF38E26D2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4796311E-6796-4043-B1A8-BE8745309738}"
              SQLTask:SqlStatementSource="exec QuickWizard.usp_CreateDictionary ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@SceneCode"
                SQLTask:DtsVariableName="User::SceneCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8B8EAE4F-F51A-4C76-914B-84ADF60483AA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4796311E-6796-4043-B1A8-BE8745309738}"
              SQLTask:SqlStatementSource="delete  from [QuickWizard].[RelevanceScene] where SceneCode=?&#xA;delete  from [QuickWizard].[SceneDictionary] where SceneCode=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SceneCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::SceneCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{54699675-BB17-42D9-87A0-19909726B846}"
          DTS:From="Package\Sequence Container\Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B8DED77B-5410-4CCC-9AF0-8843016E136A}"
          DTS:From="Package\Sequence Container\Execute SQL Task 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Data Flow Task" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Sequence Container\Data Flow Task"
          TopLeft="23.5428673802597,89.5058852014248" />
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\Sequence Container\Execute SQL Task"
          TopLeft="20.6857244744594,170.258827510425" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Sequence Container\Execute SQL Task 1"
          TopLeft="20.1142958932995,18.3529423090001" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="100.51429592736,131.105885201425">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.1529423090002"
              Start="0,0"
              End="0,31.6529423090002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.6529423090002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="102.62858163678,59.9529423090001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.5529428924247"
              Start="0,0"
              End="0,22.0529428924247">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.0529428924247" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="273.6,267.2"
          Size="273.6,310.4"
          Id="Package\Sequence Container"
          TopLeft="577.714295552702,70.352942163144" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\Data Flow Task\OLE DB Destination"
          TopLeft="82.4,412" />
        <NodeLayout
          Size="225.6,44"
          Id="Package\Sequence Container\Data Flow Task\Get Criterias"
          TopLeft="60,60" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Sequence Container\Data Flow Task\Derived Column"
          TopLeft="89.6,310.4" />
        <NodeLayout
          Size="214.4,41.6"
          Id="Package\Sequence Container\Data Flow Task\Convert Criterias XML to SQL"
          TopLeft="60,135.584905660377" />
        <NodeLayout
          Size="209.6,41.6"
          Id="Package\Sequence Container\Data Flow Task\Apply Criteria"
          TopLeft="60,211.169811320755" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task.Paths[Output 0]"
          TopLeft="166,177.184905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.984905660378"
              Start="0,0"
              End="0,26.484905660378">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.484905660378" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task.Paths[OLE DB Source Output]"
          TopLeft="170,104">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.584905660377"
              Start="0,0"
              End="0,24.084905660377">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.084905660377" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="167.2,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task.Paths[CriteriaResult]"
          TopLeft="165.6,252.769811320755">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.630188679245"
              Start="0,0"
              End="0,50.130188679245">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.130188679245" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task\Get Criterias">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>