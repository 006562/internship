<Functions>
  <Functiongruop Name="COMMON" CNName="条件与循环">
    <Function name="IF">
      <Expression>
        if ()
        {
        return ;
        }
        else
        {
        return ;
        };
      </Expression>
    </Function>

    <Function name="Switch">
      <Expression>
        switch()
        {
        case :
        break;

        default:
        break;
        }
      </Expression>
    </Function>
    <Function name="While">
      <Expression>
        while()
        {

        }
      </Expression>
    </Function>
    <Function name="For">
      <Expression>
        for()
        {

        }
      </Expression>
    </Function>
    <Function name="Foreach">
      <Expression>
        foreach()
        {

        }
      </Expression>
    </Function>
    <Function name="Return">
      <Expression>return ;</Expression>
    </Function>
  </Functiongruop>
  <Functiongruop Name="Operator" CNName="运算符">
    <Function name="+">
      <Expression>+</Expression>
    </Function>
    <Function name="-">
      <Expression>-</Expression>
    </Function>
    <Function name="*">
      <Expression>*</Expression>
    </Function>
    <Function name="/">
      <Expression>/</Expression>
    </Function>
  </Functiongruop>
  <Functiongruop Name="Mathematical Functions" CNName="数学函数">
    <Function name="Max">
      <Expression>Math.Max()</Expression>
    </Function>
    <Function name="Min">
      <Expression>Math.Min()</Expression>
    </Function>
    <Function name="ABS">
      <Expression>Math.Abs()</Expression>
    </Function>
    <Function name="Ceiling">
      <Expression>Math.Ceiling()</Expression>
    </Function>
    <Function name="Exp">
      <Expression>Math.Exp()</Expression>
    </Function>
    <Function name="Floor">
      <Expression>Math.Floor()</Expression>
    </Function>
    <Function name="LN">
      <Expression>Math.Log(,Math.E)</Expression>
    </Function>
    <Function name="Log">
      <Expression>Math.Log()</Expression>
    </Function>
    <Function name="Power">
      <Expression>Math.Pow()</Expression>
    </Function>
    <Function name="Round">
      <Expression>Math.Round()</Expression>
    </Function>
    <Function name="Sign">
      <Expression>Math.Sign()</Expression>
    </Function>
    <Function name="Sqrt">
      <Expression>Math.Sqrt()</Expression>
    </Function>
  </Functiongruop>
  <Functiongruop Name="DateTime" CNName="日期函数">
    <Function name="Compare">
      <Expression>DateTime.Compare(,)</Expression>
    </Function>
    <Function name="Equals">
      <Expression>DateTime.Equals(,)</Expression>
    </Function>
    <Function name="FromBinary">
      <Expression>DateTime.FromBinary()</Expression>
    </Function>
    <Function name="FromOADate">
      <Expression>DateTime.FromOADate()</Expression>
    </Function>
    <Function name="AddDays">
      <Expression>.AddDays()</Expression>
    </Function>
    <Function name="AddMonths">
      <Expression>.AddMonths()</Expression>
    </Function>
    <Function name="AddYears">
      <Expression>.AddYears()</Expression>
    </Function>
    <Function name="ToOADate">
      <Expression>.ToOADate()</Expression>
    </Function>
    <Function name="ToString">
      <Expression>.ToString()</Expression>
    </Function>
  </Functiongruop>
  <Functiongruop Name="Financial Functions" CNName="金融函数">
    <Function name="DDB">
      <Expression>Financial.DDB(, , , , )</Expression>
    </Function>
    <Function name="FV">
      <Expression>Financial.FV(, , , , )</Expression>
    </Function>
    <Function name="IPMT">
      <Expression>Financial.IPmt(, , , , , )</Expression>
    </Function>
    <Function name="IRR">
      <Expression>Financial.IRR(, )</Expression>
    </Function>
    <Function name="MIRR">
      <Expression>Financial.MIRR(, , )</Expression>
    </Function>
    <Function name="NPER">
      <Expression>Financial.NPer(, , , , )</Expression>
    </Function>
    <Function name="NPV">
      <Expression>Financial.NPV(, )</Expression>
    </Function>
    <Function name="PMT">
      <Expression>Financial.Pmt(, , , , )</Expression>
    </Function>
    <Function name="PPMT">
      <Expression>Financial.PPmt(, , , , , )</Expression>
    </Function>
    <Function name="PV">
      <Expression>Financial.PV(, , , , )</Expression>
    </Function>
    <Function name="RATE">
      <Expression>Financial.Rate(, , , , , )</Expression>
    </Function>
    <Function name="SLN">
      <Expression>Financial.SLN(, , )</Expression>
    </Function>
    <Function name="SYD">
      <Expression>Financial.SYD(, , , )</Expression>
    </Function>
  </Functiongruop>
</Functions>