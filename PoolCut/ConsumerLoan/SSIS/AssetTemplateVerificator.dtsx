<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/5/2013 9:31:59 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AU2104SDVDEV23"
  DTS:CreatorName="TSYDEV\tfs_L048057"
  DTS:DTSID="{6BA585A5-9920-4123-855D-235B1E7C1CAF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="3081"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="FactTrustTransaction"
  DTS:PackageType="5"
  DTS:VersionBuild="1237"
  DTS:VersionGUID="{900EE274-421C-421D-B9E6-E077DCE4D520}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FactTrustTransactionABS.log]"
      DTS:CreationName="FILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{26C8DA0C-094D-401C-99A5-8832EE47C38C}"
      DTS:ObjectName="FactTrustTransactionABS.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogPath] + @[System::PackageName] + "_" +  (DT_WSTR, 4)DATEPART("yyyy", @[System::StartTime]) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mm", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("dd", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("hh", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mi", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("ss", @[System::StartTime]), 2)  +  ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="E:\TSSWCFServices\TaskProcessServices\R4.Task\Logs\FactTrustTransaction_20161116223430.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_TaskProcess]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
      DTS:ObjectName="OLEDB_TaskProcess">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::_OLEDBConnString_TaskProcess]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DAL_SEC;Initial Catalog=TaskProcess ;Provider=SQLNCLI10.1;Integrated Security=SSPI;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="FactTrustTransactionABS.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{88D7C929-7D1B-45A5-8D86-099390E7CBE3}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{231776FB-D3D6-4C3A-B5FE-A427F27707FF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ActionMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D24858EA-22A1-4306-A0E1-E254A5FC40EF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CountResult">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D25C13B2-8B2E-4724-8745-5FD49956F498}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="C_Reporting_Date">
      <DTS:VariableValue
        DTS:DataType="8">20150131</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3963D6C2-D201-4AB7-9635-22A866FB2013}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::C_Reporting_Date] +  @[User::TrustID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Date_TrustID">
      <DTS:VariableValue
        DTS:DataType="8">2015013112</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{35554355-4B0E-4E91-BECC-F02AC2894BFF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBName">
      <DTS:VariableValue
        DTS:DataType="8">SFM_DAL_ConsumerLoan</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB74CE58-0B59-4BAE-A2AF-9F9DCC8718C4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBName_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">TaskProcess</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCAB3D0C-850C-461E-B671-3B3E0888F8D8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBServer">
      <DTS:VariableValue
        DTS:DataType="8">DAL_SEC</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A48A3F2-AA95-4A8D-90C8-4DF0EC79C5D8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimReportingDateID">
      <DTS:VariableValue
        DTS:DataType="8">20150131</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9CF677DE-98E7-449A-AE63-087F3E90885A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\TSSWCFServices\TaskProcessServices\R4.Task\Logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{873BCEC5-F21F-4F61-98A8-35387916CF12}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaxTrustTransactionID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{46845C1B-BFDC-4402-AE1C-2226B1AB65A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFile2">
      <DTS:VariableValue
        DTS:DataType="8">E:\Development\L073540\RBAReporting\DataSource\test.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D5322EDD-062E-41EB-89CF-C07DADF50D8B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B178DECB-A75E-4E55-A71D-F8A32B7A6113}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SessionID">
      <DTS:VariableValue
        DTS:DataType="8">FC2E7A29-3116-404B-9EC5-5C7392ED4573</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB11A50F-2B69-47BE-8528-A9BF2A45C200}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceSchema">
      <DTS:VariableValue
        DTS:DataType="8">Working</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11A31067-F0B8-408B-BDEE-AFE5F91920F7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetSchema">
      <DTS:VariableValue
        DTS:DataType="8">Verification</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{919C0620-801A-48EA-ABE5-3F2581FC2166}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TrustID">
      <DTS:VariableValue
        DTS:DataType="8">12</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B54950E1-208C-4292-A1EE-4BF076A2D133}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VerifySourceTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2F9BFDB4-FBFE-4642-8757-DD29A8379EB6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VerifyTargetTable">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27D7DF12-7960-433E-8BD5-77A7F9926288}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select convert(varchar(100),ISNULL(VariableValue,'')) as sourceTable from task.SessionContext where sessionid='&quot;+ @[User::SessionID] +&quot;' and VariableName='VerifySourceTable'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_GetSourceTableName">
      <DTS:VariableValue
        DTS:DataType="8">select convert(varchar(100),ISNULL(VariableValue,'')) as sourceTable from task.SessionContext where sessionid='FC2E7A29-3116-404B-9EC5-5C7392ED4573' and VariableName='VerifySourceTable'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B9396C7-2BEA-4407-B6F8-10C39FBA34D1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select convert(varchar(100),ISNULL(VariableValue,'')) as targetTable from task.SessionContext where sessionid='&quot;+ @[User::SessionID] +&quot;' and VariableName='VerifyTargetTable'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="V_GetTargetTableName">
      <DTS:VariableValue
        DTS:DataType="8">select convert(varchar(100),ISNULL(VariableValue,'')) as targetTable from task.SessionContext where sessionid='FC2E7A29-3116-404B-9EC5-5C7392ED4573' and VariableName='VerifyTargetTable'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FB24EB6D-E797-4019-9D42-9FE7F140958E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_ActionMessageObj">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BFC5F5D0-AE9B-46EC-AC62-25FCF26689F5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_Debug">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11668291-DC00-4C55-9819-ED3140E19420}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DBServer] + &quot;;Initial Catalog=&quot; +@[User::DBName_TaskProcess] + &quot; ;Provider=SQLNCLI10.1;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_OLEDBConnString_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=TaskProcess ;Provider=SQLNCLI10.1;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{131C672F-8014-46F0-B714-7ADEFC86F4A8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DBServer] + &quot;;Initial Catalog=&quot; +@[User::DBName_TaskProcess] + &quot; ;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_OLEDBConnString_TaskProcess_NP">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=TaskProcess ;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82E17D35-7F11-40B0-86C6-4D12C7FAFA8F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT   CStr(AT000) as AT000,&#xA;CStr(AT001) as AT001,CStr(AT002) as AT002,CStr(AT003) as AT003,CStr(AT004) as AT004,CStr(AT005) as AT005,&#xA;CStr(AT006) as  AT006,CStr(AT007) as AT007,CStr(AT008) as AT008,CStr(AT009) as AT009,CStr(AT010) as AT010,&#xA;CStr(AT011) as AT011,CStr(AT012) as AT012,CStr(AT013) as  AT013,CStr(AT014) as AT014,CStr(AT015) as AT015,CStr(AT016) as AT016,CStr(AT017) as AT017,CStr(AT018) as AT018,CStr(AT019) as AT019,CStr(AT020) as AT020)  ,CStr(AT021) as AT021,CStr(AT022) as AT022,CStr(AT023) as AT023,CStr(AT024) as AT024,CStr(AT025) as AT025,CStr(AT026) as AT026,CStr(AT027) as AT027,CStr (AT028) as AT028,CStr(AT029) as AT029,CStr(AT030) as AT030,CStr(AT031) as AT031,CStr(AT032) as AT032,CStr(AT033) as AT033,CStr(AT034) as AT034,CStr(AT035) as  AT035,CStr(AT036) as AT036,CStr(AT037) as AT037,CStr(AT038) as AT038,CStr(AT039) as AT039,CStr(AT040) as AT040,CStr(AT041) as AT041,CStr(AT042) as  AT042,CStr(AT043) as AT043,CStr(AT044) as AT044,CStr(AT045) as AT045,CStr(AT046) as AT046,CStr(AT047) as AT047,CStr(AT048) as AT048,CStr(AT049) as  AT049,CStr(AT050) as AT050,CStr(AT051) as AT051,CStr(AT052) as AT052,CStr(AT053) as AT053,CStr(AT054) as AT054,CStr(AT055) as AT055,CStr(AT056) as  AT056,CStr(AT057) as AT057,CStr(AT058) as AT058,CStr(AT059) as AT059,CStr(AT060) as AT060,CStr(AT061) as AT061,CStr(AT062) as AT062,CStr(AT063) as  AT063,CStr(AT064) as AT064,CStr(AT065) as AT065,CStr(AT066) as AT066,CStr(AT067) as AT067,CStr(AT068) as AT068,CStr(AT069) as AT069,CStr(AT070) as  AT070,CStr(AT071) as AT071,CStr(AT072) as AT072,CStr(AT073) as AT073,CStr(AT074) as AT074,CStr(AT075) as AT075,CStr(AT076) as AT076,CStr(AT077) as  AT077,CStr(AT078) as AT078,CStr(AT079) as AT079,CStr(AT080) as AT080,CStr(AT081) as AT081,CStr(AT082) as AT082,CStr(AT083) as AT083,CStr(AT084) as  AT084,CStr(AT085) as AT085,CStr(AT086) as AT086,CStr(AT087) as AT087,CStr(AT088) as AT088,CStr(AT089) as AT089,CStr(AT090) as AT090,CStr(AT091) as  AT091,CStr(AT092) as AT092,CStr(AT093) as AT093,CStr(AT094) as AT094,CStr(AT095) as AT095,CStr(AT096) as AT095,CStr(AT097) as AT097,CStr(AT098) as  AT098,CStr(AT099) as AT099,CStr(AT100) as AT100,CStr(AT101) as AT101,CStr(AT102) as AT102,CStr(AT103) as AT103,CStr(AT104) as AT104,CStr(AT105) as  AT105,CStr(AT106) as AT106,CStr(AT107) as AT107,CStr(AT108) as AT108,CStr(AT109) as AT109,CStr(AT110) as AT110,CStr(AT111) as AT111,CStr(AT112) as  AT112,CStr(AT113) as AT113,CStr(AT114) as AT114,CStr(AT115) as AT115,CStr(AT116) as AT116,CStr(AT117) as AT117,CStr(AT118) as AT118,CStr(AT119) as  AT119,CStr(AT120) as AT120,CStr(AT121) as AT121,CStr(AT122) as AT122,CStr(AT123) as AT123,CStr(AT124) as AT124,CStr(AT125) as AT125,CStr(AT126) as  AT126,CStr(AT127) as AT127,CStr(AT128) as AT128,CStr(AT129) as AT129,CStr(AT130) as AT130,CStr(AT131) as AT131,CStr(AT132) as AT132,CStr(AT133) as  AT133,CStr(AT134) as AT134,CStr(AT135) as AT135,CStr(AT136) as AT136,CStr(AT137) as AT137,CStr(AT138) as AT138,CStr(AT139) as AT139,CStr(AT140) as  AT140,CStr(AT141) as AT141,CStr(AT142) as AT142&#xA;FROM        [FullTransaction$A3:EM28]&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_Query_ExcelSource">
      <DTS:VariableValue
        DTS:DataType="8">SELECT   CStr(AT000) as AT000,
CStr(AT001) as AT001,CStr(AT002) as AT002,CStr(AT003) as AT003,CStr(AT004) as AT004,CStr(AT005) as AT005,
CStr(AT006) as  AT006,CStr(AT007) as AT007,CStr(AT008) as AT008,CStr(AT009) as AT009,CStr(AT010) as AT010,
CStr(AT011) as AT011,CStr(AT012) as AT012,CStr(AT013) as  AT013,CStr(AT014) as AT014,CStr(AT015) as AT015,CStr(AT016) as AT016,CStr(AT017) as AT017,CStr(AT018) as AT018,CStr(AT019) as AT019,CStr(AT020) as AT020)  ,CStr(AT021) as AT021,CStr(AT022) as AT022,CStr(AT023) as AT023,CStr(AT024) as AT024,CStr(AT025) as AT025,CStr(AT026) as AT026,CStr(AT027) as AT027,CStr (AT028) as AT028,CStr(AT029) as AT029,CStr(AT030) as AT030,CStr(AT031) as AT031,CStr(AT032) as AT032,CStr(AT033) as AT033,CStr(AT034) as AT034,CStr(AT035) as  AT035,CStr(AT036) as AT036,CStr(AT037) as AT037,CStr(AT038) as AT038,CStr(AT039) as AT039,CStr(AT040) as AT040,CStr(AT041) as AT041,CStr(AT042) as  AT042,CStr(AT043) as AT043,CStr(AT044) as AT044,CStr(AT045) as AT045,CStr(AT046) as AT046,CStr(AT047) as AT047,CStr(AT048) as AT048,CStr(AT049) as  AT049,CStr(AT050) as AT050,CStr(AT051) as AT051,CStr(AT052) as AT052,CStr(AT053) as AT053,CStr(AT054) as AT054,CStr(AT055) as AT055,CStr(AT056) as  AT056,CStr(AT057) as AT057,CStr(AT058) as AT058,CStr(AT059) as AT059,CStr(AT060) as AT060,CStr(AT061) as AT061,CStr(AT062) as AT062,CStr(AT063) as  AT063,CStr(AT064) as AT064,CStr(AT065) as AT065,CStr(AT066) as AT066,CStr(AT067) as AT067,CStr(AT068) as AT068,CStr(AT069) as AT069,CStr(AT070) as  AT070,CStr(AT071) as AT071,CStr(AT072) as AT072,CStr(AT073) as AT073,CStr(AT074) as AT074,CStr(AT075) as AT075,CStr(AT076) as AT076,CStr(AT077) as  AT077,CStr(AT078) as AT078,CStr(AT079) as AT079,CStr(AT080) as AT080,CStr(AT081) as AT081,CStr(AT082) as AT082,CStr(AT083) as AT083,CStr(AT084) as  AT084,CStr(AT085) as AT085,CStr(AT086) as AT086,CStr(AT087) as AT087,CStr(AT088) as AT088,CStr(AT089) as AT089,CStr(AT090) as AT090,CStr(AT091) as  AT091,CStr(AT092) as AT092,CStr(AT093) as AT093,CStr(AT094) as AT094,CStr(AT095) as AT095,CStr(AT096) as AT095,CStr(AT097) as AT097,CStr(AT098) as  AT098,CStr(AT099) as AT099,CStr(AT100) as AT100,CStr(AT101) as AT101,CStr(AT102) as AT102,CStr(AT103) as AT103,CStr(AT104) as AT104,CStr(AT105) as  AT105,CStr(AT106) as AT106,CStr(AT107) as AT107,CStr(AT108) as AT108,CStr(AT109) as AT109,CStr(AT110) as AT110,CStr(AT111) as AT111,CStr(AT112) as  AT112,CStr(AT113) as AT113,CStr(AT114) as AT114,CStr(AT115) as AT115,CStr(AT116) as AT116,CStr(AT117) as AT117,CStr(AT118) as AT118,CStr(AT119) as  AT119,CStr(AT120) as AT120,CStr(AT121) as AT121,CStr(AT122) as AT122,CStr(AT123) as AT123,CStr(AT124) as AT124,CStr(AT125) as AT125,CStr(AT126) as  AT126,CStr(AT127) as AT127,CStr(AT128) as AT128,CStr(AT129) as AT129,CStr(AT130) as AT130,CStr(AT131) as AT131,CStr(AT132) as AT132,CStr(AT133) as  AT133,CStr(AT134) as AT134,CStr(AT135) as AT135,CStr(AT136) as AT136,CStr(AT137) as AT137,CStr(AT138) as AT138,CStr(AT139) as AT139,CStr(AT140) as  AT140,CStr(AT141) as AT141,CStr(AT142) as AT142
FROM        [FullTransaction$A3:EM28]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{395E5097-1F21-4BDA-B75F-DE8D0A0EE32F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Declare @CriteriaSetName nvarchar(100) =  '&quot; + @[User::_VerifyCriteriaSetName] + &quot;'&#xA;select CriteriaID&#xA;&#x9;, CriteriaName&#xA;&#x9;, CriteriaDescription&#xA;&#x9;, C.CriteriaSetId&#xA;&#x9;, Verification.GetDictonaryCodeByCodeId('CriteriaSetType', C.CriteriaSetId) as CriteriaSetTypeCode&#xA;&#x9;, Verification.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode&#xA;&#x9;, IsEnable as IsEnabled&#xA;&#x9;, Verification.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode&#xA;&#x9;, XMLSqlQueryEC&#xA;&#x9;, XMLSqlQueryDrillThrough&#xA;&#x9;, Verification.GetDictonaryCodeByCodeId('CriteriaTableType', CriteriaTableTypeId) as CriteriaTableTypeCode&#xA;&#x9;, SequenceNo&#xA;    , cast(null as nvarchar(max)) as CriteriaSQL&#xA;from Verification.Criteria C&#xA;Join Verification.CriteriaSet CS on CS.CriteriaSetId = C.CriteriaSetId&#xA;where  IsEnable = 1 And CriteriaSetTypeId = [Verification].GetDictionaryCodeID('CriteriaSetType',@CriteriaSetName)&#xA;order by SequenceNo&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_Query_GetCriteriasBySet">
      <DTS:VariableValue
        DTS:DataType="8">Declare @CriteriaSetName nvarchar(100) =  'AssetTemplateAUTOVerification'
select CriteriaID
	, CriteriaName
	, CriteriaDescription
	, C.CriteriaSetId
	, Verification.GetDictonaryCodeByCodeId('CriteriaSetType', C.CriteriaSetId) as CriteriaSetTypeCode
	, Verification.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode
	, IsEnable as IsEnabled
	, Verification.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, Verification.GetDictonaryCodeByCodeId('CriteriaTableType', CriteriaTableTypeId) as CriteriaTableTypeCode
	, SequenceNo
    , cast(null as nvarchar(max)) as CriteriaSQL
from Verification.Criteria C
Join Verification.CriteriaSet CS on CS.CriteriaSetId = C.CriteriaSetId
where  IsEnable = 1 And CriteriaSetTypeId = [Verification].GetDictionaryCodeID('CriteriaSetType',@CriteriaSetName)
order by SequenceNo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5E1C5A4-56DB-4CBB-8446-6A07168DAE81}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_Query_GetDimTrustBond">
      <DTS:VariableValue
        DTS:DataType="8">select do.DimOrganisationID, dt.* from dbo.tblDimTrust dt inner join tblDimOrganisation do on dt.OrganisationCode = do.OrganisationCode</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F4189E40-099C-44D4-8AD8-17B2325D378E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_VerifyCriteriaSetName">
      <DTS:VariableValue
        DTS:DataType="8">AssetTemplateAUTOVerification</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,13,OnInformation</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{88D7C929-7D1B-45A5-8D86-099390E7CBE3}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Init Package"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{71C33408-D615-4A8D-94C0-4F0F022D93DB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Init Package">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Init Package\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{A2B3A97F-11AB-4FCF-960F-39A782B25876}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_cdfda5736a4b4b1f847ba5fa0b4172b2"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::LogPath,User::SessionID">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties.Settings.get_Default():ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties.Sett" +
    "ings")]

namespace ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;

namespace ST_84e426a1e0734af192fb72ef1fa02444.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here

            string sMsg = null;
            string sLogPath = Dts.Variables["LogPath"].Value.ToString();
            string sSessionID = Dts.Variables["SessionID"].Value.ToString();
            //string sDataSource = Dts.Variables["_OLEDBConnString_DAL_SEC"].Value.ToString();
            //string sSourceFilePath = Dts.Variables["SourceFilePath"].Value.ToString();
            //string sSourceFileName = Dts.Variables["SourceFileName"].Value.ToString();
            //string sSourceConnection = Dts.Variables["SourceConnection"].Value.ToString();

            bool bfireAgain = true;


            //sMsg = string.Format("Package input parameters: SessionID={0}; LogPath={1}; Data Source={2};", sSessionID, sLogPath, sDataSource);
            //Dts.Events.FireInformation(1000, "Package Initialisation", sMsg, null, 0, ref bfireAgain);

            //sMsg = string.Format("Package input parameters: SourceFilePath={0}; SourceFileName={1}; SourceConnection={2};", sSourceFilePath, sSourceFileName, sSourceConnection);
            //Dts.Events.FireInformation(1000, "Package Initialisation", sMsg, null, 0, ref bfireAgain);
            if (!Directory.Exists(sLogPath))
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                sMsg = string.Format("Package Init: Log Path {0} does not exist", sLogPath);
                throw new Exception(sMsg);
            }

            //if (!Directory.Exists(sSourceFilePath))
            //{
            //    Dts.TaskResult = (int)ScriptResults.Failure;
            //    sMsg = string.Format("Package Init: Source File Path {0} does not exist", sSourceFilePath);
            //    throw new Exception(sMsg);
            //}
            //if (!File.Exists(sSourceConnection))
            //{
            //    Dts.TaskResult = (int)ScriptResults.Failure;
            //    sMsg = string.Format("Package Init: File {0} does not exist", sSourceConnection);
            //    throw new Exception(sMsg);
            //}

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="st_cdfda5736a4b4b1f847ba5fa0b4172b2.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_84e426a1e0734af192fb72ef1fa02444.csproj</RootNamespace>
    <AssemblyName>st_cdfda5736a4b4b1f847ba5fa0b4172b2</AssemblyName>
    <ProjectGuid>{9DEF5CB7-43F9-4697-B2BF-861187EC0526}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_cdfda5736a4b4b1f847ba5fa0b4172b2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_cdfda5736a4b4b1f847ba5fa0b4172b2</msb:DisplayName>
		<msb:ProjectId>{54FD0EAF-F15F-44F3-B624-996798F33655}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_cdfda5736a4b4b1f847ba5fa0b4172b2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_84e426a1e0734af192fb72ef1fa02444.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_84e426a1e0734af192fb72ef1fa02444.csproj")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_84e426a1e0734af192fb72ef1fa02444.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="st_cdfda5736a4b4b1f847ba5fa0b4172b2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADLWJ1gAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAPi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOguAABTAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
LwAAAAAAAEgAAAACAAUAACIAAOgMAAABAAAAAAAAAEghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgB2AAAAAgAAERQKAigWAAAKbxcAAApygQAAcG8YAAAKbxkAAApv
GgAACgsCKBYAAApvFwAACnKRAABwbxgAAApvGQAACm8aAAAKJgcoGwAACi0fAigWAAAKF28cAAAK
cqUAAHAHKB0AAAoKBnMeAAAKegIoFgAAChZvHAAACioeAigfAAAKKgAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOQDAAAjfgAAUAQAABgGAAAjU3RyaW5n
cwAAAABoCgAA/AAAACNVUwBkCwAAEAAAACNHVUlEAAAAdAsAAHQBAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+iUzABYAAAEAAAAgAAAABQAAAAYAAAAJAAAAAQAAAB8AAAACAAAADwAAAAIAAAAC
AAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAzwDIAAoA6wDWAA4ASwEiAQYA
ZwHIAAYAfQFsAQYArgGZAQYAZQJLAgYAkAJ+AgYApwJ+AgYAxAJ+AgYA4wJ+AgYA/AJ+AgYAFQN+
AgYAMAN+AgYASwN+AgYAZAN+AgYAnQN9AwYAvQN9AwYAEgT/AwYALwTIAAYANATIAAYAWAR+AgoA
hARuBAoAnQRuBAYAsgR9Aw4A1AQiAQ4A9gQiARIATwUvBRIAZwUvBQYAlgWMBQYAtgXIAAYAxAXI
AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAcgA8AAkAAwAFAAEAEAB7AIYADQAEAAgA
AwEAALEAAAARAAQACgARAI0BEwARALoBFwARAAQCOQAGBi0CRwBWgDUCSgBWgD0CSgBQIAAAAACD
GMoBGwABAFggAAAAAJMI0AEfAAEAkSAAAAAAkwjkASQAAQCYIAAAAACTCPABKQABAKAgAAAAAJYI
FAI9AAIAsyAAAAAAhhjKARsAAgCnIAAAAACRGM0EiQACALwgAAAAAIYAKAIbAAIAPiEAAAAAhhjK
ARsAAgAAAAEARQI5AMoBWABBAMoBWABJAMoBWABRAMoBWABZAMoBWABhAMoBWABpAMoBWABxAMoB
WAB5AMoBWACBAMoBWACJAMoBXQCRAMoBGwCZAMoBGwAJAMoBGwChAEYEYgChAGEEaQApAMoBbgC5
AMoBegDJAMoBGwARAMoBGwDRAMoBGwAZAAgFjQDZAFkFkgDhAHAFlwDpAHkFnQAJAIMFoQDxAKAF
pQDZAKcFXQD5AL0FqgABAcoBWAAZAMoBGwAIABQATgAIABgAUwApAJMAgAAuABsALQEuACMALQEu
AGMAUwEuAAsAtQAuABMA/QAuADMA/QAuACsALQEuADsAMwEuAEMALQEuAFsASgFDAGsAUwBJAJMA
gABhAJsAUwCDAKsAUwB1ALAAAgABAAMAAwAAAH0BLwAAAPwBNAAAACACQgACAAIAAwACAAMABQAB
AAQABQACAAUABwAEgAAAAQAAABEY2UwAAAAAAADbAwAABAAAAAAAAAAAAAAAAQC/AAAAAAAEAAAA
AAAAAAAAAAABAMgAAAAAAAwAAAAAAAAAAAAAAAoAAwEAAAAADAAAAAAAAAAAAAAACgAQBQAAAAAA
AAAAAQAAAM4FAAAFAAQAAAAAAAA8TW9kdWxlPgBzdF9jZGZkYTU3MzZhNGI0YjFmODQ3YmE1ZmEw
YjQxNzJiMi5kbGwAUmVzb3VyY2VzAFNUXzg0ZTQyNmExZTA3MzRhZjE5MmZiNzJlZjFmYTAyNDQ0
LmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfODRlNDI2YTFlMDczNGFm
MTkyZmI3MmVmMWZhMDI0NDQuY3Nwcm9qAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9i
amVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2Vz
AFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJl
SW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0
AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHN0X2NkZmRhNTczNmE0YjRiMWY4
NDdiYTVmYTBiNDE3MmIyAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkA
Z2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9y
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRf
RHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9W
YWx1ZQBUb1N0cmluZwBTeXN0ZW0uSU8ARGlyZWN0b3J5AEV4aXN0cwBzZXRfVGFza1Jlc3VsdABT
dHJpbmcARm9ybWF0AEV4Y2VwdGlvbgBTVF84NGU0MjZhMWUwNzM0YWYxOTJmYjcyZWYxZmEwMjQ0
NC5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAB/UwBUAF8AOAA0AGUANAAy
ADYAYQAxAGUAMAA3ADMANABhAGYAMQA5ADIAZgBiADcAMgBlAGYAMQBmAGEAMAAyADQANAA0AC4A
YwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAA9M
AG8AZwBQAGEAdABoAAATUwBlAHMAcwBpAG8AbgBJAEQAAFNQAGEAYwBrAGEAZwBlACAASQBuAGkA
dAA6ACAATABvAGcAIABQAGEAdABoACAAewAwAH0AIABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBz
AHQAAAAAADuPAT/HyMxJmVvWq6FJ5ksACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAA
EhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCAB
AQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQg
ABJxBSABEnUcAyAAHAMgAA4EAAECDgUAAg4OHAQHAg4ORwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNUXzg0
ZTQyNmExZTA3MzRhZjE5MmZiNzJlZjFmYTAyNDQ0LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDEzAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAQLwAA
AAAAAAAAAAAuLwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC8AAAAAAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAANADAAAAAAAAAAAAANADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDZTBEYAAABANlMERg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAMAwAAAQAwADAA
MAAwADAANABiADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AOAA0AGUANAAyADYAYQAxAGUAMAA3ADMANABhAGYAMQA5ADIAZgBiADcAMgBlAGYAMQBmAGEA
MAAyADQANAA0AC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA2ADEANgAxAC4AMQA5ADYANwAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAHMAdABfAGMAZABmAGQAYQA1ADcAMwA2AGEANABiADQAYgAxAGYAOAA0ADcAYgBh
ADUAZgBhADAAYgA0ADEANwAyAGIAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAzAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfAGMAZABmAGQAYQA1ADcAMwA2AGEA
NABiADQAYgAxAGYAOAA0ADcAYgBhADUAZgBhADAAYgA0ADEANwAyAGIAMgAuAGQAbABsAAAAeAAr
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA4ADQAZQA0ADIANgBhADEAZQAwADcA
MwA0AGEAZgAxADkAMgBmAGIANwAyAGUAZgAxAGYAYQAwADIANAA0ADQALgBjAHMAcAByAG8AagAA
AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANgAxAC4A
MQA5ADYANwAzAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA2ADEANgAxAC4AMQA5ADYANwAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABAPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Verification for Working Table"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{865BD4B9-403E-42E8-AF13-A417E2A448FC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Verification for Working Table">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Apply Criteria"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{E60E8E24-D340-4D73-BD65-AD2E64CDD374}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply Criteria"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="100"
              defaultBufferSize="40485760"
              version="1">
              <components>
                <component
                  refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  localeId="3081"
                  name="Apply Criteria"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public CriteriaResultBuffer CriteriaResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != CriteriaResultBuffer)
        {
            CriteriaResultBuffer.SetEndOfRowset();
            CriteriaResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"CriteriaResult"))
            {
                CriteriaResultBuffer = new CriteriaResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String OLEDBConnStringTaskProcessNP
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_OLEDBConnString_TaskProcess_NP"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;
using System.Data.OleDb;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringTaskProcessNP);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnabled)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            try
            {
                SqlCommand _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    CriteriaResultBuffer.AddRow();
                    CriteriaResultBuffer.SessionId = new Guid(dr["SessionId"].ToString());
                    CriteriaResultBuffer.CriteriaId = Convert.ToInt64(dr["CriteriaId"]);
                    CriteriaResultBuffer.VerifyColumn = dr["VerifyColumn"].ToString();
                    CriteriaResultBuffer.VerifyRow = dr["VerifyRow"].ToString();
                    CriteriaResultBuffer.VerifyType = dr["VerifyType"].ToString();
                    CriteriaResultBuffer.VerifyResult = dr["VerifyResult"].ToString();
                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply Criteria", sMsg, "", 0, ref bFireAgain);
            }
            catch (SqlException ex)
            {
                //MessageBox.Show(ex.Message);
                throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply Pool Maintenance EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[4]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int64 CriteriaID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaID_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class CriteriaResultBuffer: ScriptBuffer

{
    public CriteriaResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid SessionId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SessionId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 CriteriaId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CriteriaId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VerifyColumn
    {
        set
        {
            this[2] = value;
        }
    }
    public bool VerifyColumn_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VerifyRow
    {
        set
        {
            this[3] = value;
        }
    }
    public bool VerifyRow_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VerifyType
    {
        set
        {
            this[4] = value;
        }
    }
    public bool VerifyType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VerifyResult
    {
        set
        {
            this[5] = value;
        }
    }
    public bool VerifyResult_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{1EE838E7-3BD7-401B-AEF5-16B27569E41B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace>
    <AssemblyName>SC_8FBAA10D15374554B0EB966CA7B05086</AssemblyName>
    <ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_8FBAA10D15374554B0EB966CA7B05086.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD7ZJ1gAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAAXkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAhEAABTAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
RAAAAAAAAEgAAAACAAUAqCYAAGAdAAABAAAAAAAAAPAlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipSAnsOAAAKAnsPAAAKF5RvEgAACioiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EgAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEgAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvEwAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvFAAACioiAhsoEQAACioeAigVAAAKKh4C
KBYAAAoqKgIDBAUoDQAACio6AhYDjAgAAAEoFwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKejoC
FwOMGQAAASgXAAAKKloDLAgCFygYAAAKKnIBAABwcxkAAAp6JgIYAygXAAAKKloDLAgCGCgYAAAK
KnIBAABwcxkAAAp6JgIZAygXAAAKKloDLAgCGSgYAAAKKnIBAABwcxkAAAp6JgIaAygXAAAKKloD
LAgCGigYAAAKKnIBAABwcxkAAAp6JgIbAygXAAAKKloDLAgCGygYAAAKKnIBAABwcxkAAAp6HgIo
GgAACioeAigbAAAKKh4CKBYAAAoqfgIoHAAACgICcygAAAZ9AQAABAICcykAAAZ9AgAABCoAAzAE
AE8AAAAAAAAABHKeAABwGm8dAAAKLBUCBQIDKB4AAAoOBHMBAAAGbyYAAAYFbx8AAAosIwICewQA
AAQXWH0EAAAEAnsEAAAEFzMMAm8iAAAGAigjAAAGKgYqbgJ7AwAABCwSAnsDAAAEbx4AAAYCFH0D
AAAEKgAAABMwBQA9AAAAAQAAERYKKy4EBpQOBHKuAABwKCAAAAozGQIFBpoCBAaUKB4AAAoOBHMQ
AAAGfQMAAAQGF1gKBgMyzgJvJQAABioGKkorBwIDbycAAAYDbw4AAAYt8SoGKjoCKCEAAAoCA30F
AAAEKjoCKCEAAAoCA30GAAAEKpYCewYAAARvIgAACnLMAABwbyMAAAooJAAACm8lAAAKdBoAAAEq
ogIoJwAACgICewIAAARvKgAABnMoAAAKfQcAAAQCewcAAARvKQAACipmAigqAAAKAnsHAAAEbysA
AAoCFH0HAAAEKgAbMAcArgEAAAIAABEXCnIMAQBwCwNvCgAABjlrAQAAA28CAAAGFgNvAgAABm8s
AAAKKC0AAApvLgAACgwoLwAACghvMAAACm8xAAAKDQkCewcAAARzMgAAChMEEQQWbzMAAAoRBG80
AAAKEwUWEwY4vgAAAAJ7AwAABG8dAAAGAnsDAAAEEQVyDgEAcG81AAAKbzYAAApzNwAACm8RAAAG
AnsDAAAEEQVyIgEAcG81AAAKKDgAAApvEwAABgJ7AwAABBEFcjgBAHBvNQAACm82AAAKbxUAAAYC
ewMAAAQRBXJSAQBwbzUAAApvNgAACm8XAAAGAnsDAAAEEQVyZgEAcG81AAAKbzYAAApvGQAABgJ7
AwAABBEFcnwBAHBvNQAACm82AAAKbxsAAAYRBhdYEwYRBW85AAAKOjb///8RBW86AAAKFBMFcpYB
AHADbwgAAAZvNgAAChEGjCgAAAEoOwAACgsCKDwAAAog6AMAAHKqAQBwB3IMAQBwFhIAbz0AAAre
NBMHEQd6csgBAHADbwgAAAYoPgAACgsCKDwAAAog6AMAAHIaAgBwB3IMAQBwFhIAbz0AAAoqAABB
HAAAAAAAAEEAAAA4AQAAeQEAAAUAAAAqAAABBioeAiggAAAGKh4CKCEAAAoqAAATMAIALQAAAAMA
ABF+CAAABC0gck4CAHDQCAAAAihAAAAKb0EAAApzQgAACgoGgAgAAAR+CAAABCoafgkAAAQqHgKA
CQAABCoafgoAAAQqLnM1AAAGgAoAAAQqHgIoRQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAMCgAAI34AAHgKAACYDQAAI1N0cmluZ3MAAAAA
EBgAANACAAAjVVMA4BoAABAAAAAjR1VJRAAAAPAaAABwAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJ
AQAAAPolMwAWAAABAAAAMQAAAAkAAAAKAAAANgAAACAAAABFAAAADwAAAAMAAAAFAAAAHAAAAB0A
AAABAAAABwAAAAEAAAAAAAoAAQAAAAAABgAKAekABgAXAekACgA3ATABDgBTAT4BEgCMAekABgCb
AekAEgCvAekACgCeAzABFgBGBjAGCgCFBnQGCgC2BqEGCgCpB48HCgDUB8IHCgDrB8IHCgAICMIH
CgAnCMIHCgBACMIHCgBZCMIHCgB0CMIHCgCPCMIHCgCoCMIHCgDhCMEICgABCcEICgCCCTABCgCc
CTABCgCiCTABCgCpCTABGgA5ChEKGgBgChEKCwBwCgAAGgCgChEKBgDMCukAFgAGC/MKCgApCzAB
CgBRC0ULFgBrCzAGFgB2C/MKFgCTCzAGFgCvC/MKCgDSCzABHgAsDAMMFgBrDDAGCgCLDHgMCgCo
DDABCgCtDDABCgDRDMIHDgD9DOcMDgAWDecMCgArDcEIAAAAAAEAAAAAAAEAAQABABAAMgAAAAUA
AQABAAEAEAA/AAAABQABABAAAQAQAFQAAAAJAAEAIAABABAAYgAAAA0ABQAoAAEAEABuAAAADQAG
ACkAAQAQAHgAAAAQAAcAKwAAABAAgwCNAA0ACAAwAAABEADDAI0AEQAKADQABgBiAF0ABgBuAGEA
BgA/AGUAAQBNBWkAAQDWBYgAAQDWBYgAAQBUBpIAEQCVBpYAEQDCBpoAEQAGB7gAUCAAAAAAhhip
ARMAAQBbIAAAAACGCLoBHQAEAHUgAAAAAIYIygEiAAQAfiAAAAAAhgjhASYABACTIAAAAACGCPkB
IgAEAJwgAAAAAIYIGAImAAQAsSAAAAAAhggtAiIABAC6IAAAAACGCEkCJgAEAM8gAAAAAIYIWgIi
AAQA2CAAAAAAhghyAiIABADtIAAAAACGCIACIgAEAPYgAAAAAIYIlQIqAAQACyEAAAAAhgikAiIA
BAAUIQAAAACGALoCIgAEABwhAAAAAIYAwgIiAAQAJCEAAAAAhhipARMABAAvIQAAAACGCKMDPwAH
AD4hAAAAAIYIsQNFAAgAVSEAAAAAhgjGA0oACQBkIQAAAACGCNUDRQAKAHshAAAAAIYI6wNPAAsA
hSEAAAAAhgj8A0UADACcIQAAAACGCBQETwANAKYhAAAAAIYIIgRFAA4AvSEAAAAAhgg3BE8ADwDH
IQAAAACGCEYERQAQAN4hAAAAAIYIXARPABEA6CEAAAAAhghtBEUAEgD/IQAAAACGAIUEVAATAAci
AAAAAIYAjARUABMADyIAAAAAhgDCAiIAEwAXIgAAAACGGKkBVAATADgiAAAAAMYAXAVsABMAkyIA
AAAAxgFpBVQAFwCVIgAAAACBAHcFVAAXALQiAAAAAMYAiwV2ABcA/SIAAAAAxgGXBVQAGwD/IgAA
AADGAasFggAbABIjAAAAAMYBvwWCABwAFCMAAAAAhhipAYwAHQAjIwAAAACGGKkBjAAeADIjAAAA
AIYI5gUmAB8AWCMAAAAAxgBdBlQAHwCBIwAAAADGAGgGVAAfAJwjAAAAAMYAvwWCAB8AdCUAAAAA
xgCXBVQAIAB2JQAAAACGGKkBVAAgAH4lAAAAAIMYqQFUACAAiCUAAAAAkwjSBp4AIADBJQAAAACT
COYGowAgAMglAAAAAJMI8gaoACAA0CUAAAAAlggWB7wAIQDjJQAAAACGGKkBVAAhANclAAAAAJEY
Rg2vASEAAAABACoHAAACADEHAAADAEUHAAABACoHAAACADEHAAADAEUHAAABAE8HAAABAE8HAAAB
AE8HAAABAE8HAAABAE8HAAABAE8HAAABAE8HAAABAE8HAAABAE8HAAABAE8HAAABAE8HAAABAE8H
AAABAFUHAAACAF0HAAADACoHAAAEAEUHAAABAGcHAAACAG8HAAADAHkHAAAEAEUHAAABACoHAAAB
AIEHAAABAIUHAAABAIUHAAABAIEHAAABAE8HYQCpAU8AaQCpAU8AcQCpAU8AeQCpAU8AgQCpAU8A
iQCpAU8AkQCpAU8AmQCpAU8AoQCpAU8AqQCpAU8AsQCpAcYAuQCpAVQACQCpARMACQAqB8sACQAx
B88AKQBDCdMACQBMCdgAKQBTCd0AKQBdCdgAKQBoCeIACQC6AiIACQDCAiIACQBxCecACQB6CcYA
wQCpAU8ACQCFBFQACQCMBFQAEQCpAVQA0QC6Ce0AEQDBCfQAKQDSCSIAEQDiCfoAGQCpAVQAEQBK
CgUB4QBDCQoBEQCLChAB6QC4ChUBAQGpAVQAEQBdBlQASQCpAU8ACQETC1QAEQBoBlQACQEYC1QA
OQAeCyABEQExCyQBOQA5CykBGQFaCzABGQFTCTYB0QBmCyYAIQGpATwBKQGAC8YAIQGhC0MBOQFD
CUkBGQC8CyYAQQCpAU8AEQHFC04BOQHNCyIAOQEYC1QA0QDYC1MBEQBFDFoBSQFbDGAB0QDYC2sB
WQGpAVQAYQG/DIMBYQHaDIwBUQCpAZIBeQGpAZ8BiQGpAVQAIQCpAVQALgAbACsCLgBjAFECLgAL
ALMBLgATAPsBLgAjACsCLgArACsCLgAzAPsBLgA7ADECLgBDACsCLgBbAEgC4wAzARsBAwH7ARsB
QQEjAhsBSQMbAqYBaQMbAqYBAQFxAZoBAgABAAMADQAGABkACAAaAAkAHAAAAM4CLgAAANoCMwAA
AO0CNwAAAAEDMwAAABwDNwAAAC0DMwAAAEUDNwAAAFIDMwAAAGYDMwAAAHADMwAAAIEDOwAAAIwD
MwAAAJsEWAAAAKUEMwAAALYEOwAAAMEEMwAAANMENwAAAOAEMwAAAPQENwAAAP4EMwAAAA8FNwAA
ABoFMwAAACwFNwAAADkFMwAAAAcGNwAAAIUGrgAAAP4GswAAACIHwQACAAIAAwACAAMABQACAAQA
BwACAAUACQACAAYACwACAAcADQACAAgADwACAAkAEQACAAoAEwACAAsAFQACAAwAFwACAA0AGQAB
ABEAGwABABIAHQABABMAHwABABQAIQABABUAIwABABYAJQABABcAJwABABgAKQABABkAKwABABoA
LQABABsALwABABwAMQACACoAMwACADEANQACADIANwABADMANwACADQAOQAEgAAAAQAAABEYX04A
AAAAAAAfCQAADAAAAAAAAAAAAAAAAQDMAAAAAAAEAAAAAAAAAAAAAAAKACcBAAAAAAQAAAAAAAAA
AAAAAAoAMAEAAAAADAAAAAAAAAAAAAAAAQBrAQAAAAAEAAAAAAAAAAAAAAAKACQGAAAAAAwAAAAA
AAAAAAAAAAEA7gkAAAAADAAAAAAAAAAAAAAAAQDfCwAAAAAAAAAAAQAAAE0NAAAAAAAAADxNb2R1
bGU+AFNDXzhGQkFBMTBEMTUzNzQ1NTRCMEVCOTY2Q0E3QjA1MDg2LmRsbABJbnB1dDBCdWZmZXIA
Q3JpdGVyaWFSZXN1bHRCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0aW9ucwBWYXJpYWJsZXMA
U2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfNzc0NzgwMmQ3NTlkNGRiZGFlYThlNTA4YTkyYzBiZDMu
Y3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZmZXIAU2NyaXB0Q29tcG9u
ZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVC
dWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdldF9Dcml0ZXJpYVNRTABnZXRf
Q3JpdGVyaWFTUUxfSXNOdWxsAGdldF9Dcml0ZXJpYURlc2NyaXB0aW9uAGdldF9Dcml0ZXJpYURl
c2NyaXB0aW9uX0lzTnVsbABnZXRfQ3JpdGVyaWFUeXBlQ29kZQBnZXRfQ3JpdGVyaWFUeXBlQ29k
ZV9Jc051bGwAZ2V0X0NyaXRlcmlhTmFtZQBnZXRfQ3JpdGVyaWFOYW1lX0lzTnVsbABnZXRfSXNF
bmFibGVkAGdldF9Jc0VuYWJsZWRfSXNOdWxsAGdldF9Dcml0ZXJpYUlEAGdldF9Dcml0ZXJpYUlE
X0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AENyaXRlcmlhU1FMAENyaXRlcmlhU1FMX0lzTnVs
bABDcml0ZXJpYURlc2NyaXB0aW9uAENyaXRlcmlhRGVzY3JpcHRpb25fSXNOdWxsAENyaXRlcmlh
VHlwZUNvZGUAQ3JpdGVyaWFUeXBlQ29kZV9Jc051bGwAQ3JpdGVyaWFOYW1lAENyaXRlcmlhTmFt
ZV9Jc051bGwASXNFbmFibGVkAElzRW5hYmxlZF9Jc051bGwAQ3JpdGVyaWFJRABDcml0ZXJpYUlE
X0lzTnVsbABHdWlkAHNldF9TZXNzaW9uSWQAc2V0X1Nlc3Npb25JZF9Jc051bGwAc2V0X0NyaXRl
cmlhSWQAc2V0X0NyaXRlcmlhSWRfSXNOdWxsAHNldF9WZXJpZnlDb2x1bW4Ac2V0X1ZlcmlmeUNv
bHVtbl9Jc051bGwAc2V0X1ZlcmlmeVJvdwBzZXRfVmVyaWZ5Um93X0lzTnVsbABzZXRfVmVyaWZ5
VHlwZQBzZXRfVmVyaWZ5VHlwZV9Jc051bGwAc2V0X1ZlcmlmeVJlc3VsdABzZXRfVmVyaWZ5UmVz
dWx0X0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQAU2Vzc2lvbklkAFNlc3Npb25JZF9Jc051
bGwAQ3JpdGVyaWFJZABDcml0ZXJpYUlkX0lzTnVsbABWZXJpZnlDb2x1bW4AVmVyaWZ5Q29sdW1u
X0lzTnVsbABWZXJpZnlSb3cAVmVyaWZ5Um93X0lzTnVsbABWZXJpZnlUeXBlAFZlcmlmeVR5cGVf
SXNOdWxsAFZlcmlmeVJlc3VsdABWZXJpZnlSZXN1bHRfSXNOdWxsAElucHV0c0ZpbmlzaGVkAFBy
b2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQA
Q3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAUGFyZW50Q29tcG9uZW50AGdldF9PTEVEQkNvbm5TdHJpbmdUYXNrUHJvY2Vzc05QAE9M
RURCQ29ublN0cmluZ1Rhc2tQcm9jZXNzTlAAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNxbENvbm5lY3Rpb24AX1NxbENvbm4AUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZh
dWx0AEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElu
cHV0TmFtZQBPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzhGQkFB
MTBEMTUzNzQ1NTRCMEVCOTY2Q0E3QjA1MDg2AGdldF9JdGVtAElzTnVsbABHZXRTdHJpbmcAR2V0
Qm9vbGVhbgBHZXRJbnQ2NABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRp
b24ASW50NjQAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMA
Z2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGlt
ZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJs
ZXMxMDAAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25l
bnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEw
MABHZXRWYWx1ZVdpdGhDb250ZXh0AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBDbG9zZQBnZXRfTGVuZ3Ro
AENvbnZlcnQAVG9JbnQzMgBHZXRCbG9iRGF0YQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfVW5p
Y29kZQBUcmltAFNxbENvbW1hbmQARGJDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABTcWxEYXRh
UmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJEYXRhUmVhZGVyAFRvU3RyaW5nAFRvSW50NjQAUmVhZABJ
bnQzMgBGb3JtYXQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAA
Z2V0X0NvbXBvbmVudE1ldGFEYXRhAEZpcmVJbmZvcm1hdGlvbgBTcWxFeGNlcHRpb24AU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfNzc0NzgwMmQ3NTlkNGRiZGFl
YThlNTA4YTkyYzBiZDMuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAA
HUMAcgBpAHQAZQByAGkAYQBSAGUAcwB1AGwAdAAAP18ATwBMAEUARABCAEMAbwBuAG4AUwB0AHIA
aQBuAGcAXwBUAGEAcwBrAFAAcgBvAGMAZQBzAHMAXwBOAFAAAAEAE1MAZQBzAHMAaQBvAG4ASQBk
AAAVQwByAGkAdABlAHIAaQBhAEkAZAAAGVYAZQByAGkAZgB5AEMAbwBsAHUAbQBuAAATVgBlAHIA
aQBmAHkAUgBvAHcAABVWAGUAcgBpAGYAeQBUAHkAcABlAAAZVgBlAHIAaQBmAHkAUgBlAHMAdQBs
AHQAABN7ADAAfQAgADoAIAB7ADEAfQAAHUEAcABwAGwAeQAgAEMAcgBpAHQAZQByAGkAYQAAUUUA
QwAgAHsAMAB9ACAAaQBzACAAbgBvAHQAIABlAG4AYQBiAGwAZQBkACAAYQBuAGQAIABpAHMAIABu
AG8AdAAgAGEAcABwAGwAaQBlAGQAADNBAHAAcABsAHkAIABQAG8AbwBsACAATQBhAGkAbgB0AGUA
bgBhAG4AYwBlACAARQBDAAB/UwBDAF8ANwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABh
AGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAzAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAlm2KNsw1pECvUOlDyD5FwwAIiYRdzYCA
zJEIt3pcVhk04IkJIAMBEhUdCBIZBCAAEh0DIAACAyAADgMgAAoEKAASHQMoAAIDKAAOAygACgUg
AQERIQQgAQECBCABAQoEIAEBDgMgAAEEKAARIQMGEhQDBhIYAwYSDAIGCAkgBAEIDhIVEhkLIAQB
CB0IHRIVEhkFIAEBEggDBhIJBSABARIJAwYSJQMGEikDBhItBAAAEikEAAASLQUAAQESLQQIABIp
BAgAEi0DBhIkBAAAEiQECAASJAQgAQEIAwYSFQMGHQgEIAEcCAQgAQIIBCABDggEIAEKCAUgAgEI
HAYgAgIOEW0FIAEdCAgGAAIIEhkOAwcBCAQgABJxBSABEnUcBAAAEnkFIAEcEn0EAQAAAAMgAAkE
AAEICQYgAh0FCAgFAAASgI0FIAEOHQUGIAIBDhIlBSAAEoCZBCABHA4EAAEKHAYAAw4OHBwFIAAS
gKUKIAYBCA4ODggQAgUAAg4OHBEHCAIOHQUOEoCREoCZCBKAqQgAARKAsRGAtQUgABKAuQcgAgEO
EoC5BAcBEikGIAEBEYDBCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ183NzQ3ODAy
ZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxMgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzATBEAAAAAAAAAAAA
AE5EAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABARAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADQ
AwAAAAAAAAAAAADQAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAX04RGAAAAQBfThEYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
MAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAADAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcANwA0ADcA
OAAwADIAZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEAOQAyAGMAMABiAGQAMwAu
AGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NgAxADYAMQAuADIAMAAwADYAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AEMAXwA4AEYAQgBBAEEAMQAwAEQAMQA1ADMANwA0ADUANQA0AEIAMABFAEIAOQA2ADYAQwBBADcA
QgAwADUAMAA4ADYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMgAAAHgAKAABAE8AcgBpAGcAaQBuAGEA
bABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4AEYAQgBBAEEAMQAwAEQAMQA1ADMANwA0ADUANQA0
AEIAMABFAEIAOQA2ADYAQwBBADcAQgAwADUAMAA4ADYALgBkAGwAbAAAAHgAKwABAFAAcgBvAGQA
dQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABh
AGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAzAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYAMQAuADIAMAAwADYAMwAA
AAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYA
MQAuADIAMAAwADYAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAYDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_8fbaa10d15374554b0eb966ca7b05086</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_OLEDBConnString_TaskProcess_NP</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">d7ee230a4b2609584e4dbc041f9992ac</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0].Columns[CriteriaID]"
                          cachedDataType="i8"
                          cachedName="CriteriaID"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult]"
                      hasSideEffects="true"
                      name="CriteriaResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[SessionId]"
                          dataType="guid"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[SessionId]"
                          name="SessionId" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[CriteriaId]"
                          dataType="i8"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[CriteriaId]"
                          name="CriteriaId" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyColumn]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyColumn]"
                          name="VerifyColumn" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyRow]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyRow]"
                          name="VerifyRow" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyType]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyType]"
                          name="VerifyType" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyResult]"
                          dataType="wstr"
                          length="500"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyResult]"
                          name="VerifyResult" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Convert Criterias XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.IO;
using System.Collections.Generic;
//using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.Debug;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        bool bFireAgain = true;
        string sMsg = "";

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "CriteriaId", "Value", Row.CriteriaID.ToString());
            UpdateParameterAttribute(xmlDoc, "SessionId", "Value", Variables.SessionID.ToString());
            UpdateParameterAttribute(xmlDoc, "TrustId", "Value", Variables.TrustID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimReportDateId", "Value", Variables.DimReportingDateID.ToString());
            UpdateParameterAttribute(xmlDoc, "VerifySourceTable", "Value", string.Format("{0}.[{1}]",Variables.SourceSchema.ToString(),Variables.VerifySourceTable.ToString()));
            UpdateParameterAttribute(xmlDoc, "VerifyTargetTable", "Value", string.Format("{0}.[{1}]",Variables.TargetSchema.ToString(),Variables.VerifyTargetTable.ToString()));
            UpdateParameterAttribute(xmlDoc, "DBName", "Value", Variables.DBName.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimPoolId", "Value", Row.DimPoolID.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimSourceTrustID", "Value", Variables.DimSourceTrustID.ToString());
            //UpdateParameterAttribute(xmlDoc, "DimTargetTrustID", "Value", Variables.DimTargetTrustID.ToString());
            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            if (_DEBUG)
            {
                sMsg = string.Format
                    ("[Debug: {0} {1} {2} {3}: {4}]"
                        , Row.CriteriaID.ToString()
                        , Row.CriteriaName
                        , Row.ECPassNoCode
                        , Environment.NewLine
                        , sQuery
                    );
                ComponentMetaData.FireInformation(1000, "Criteria XML To Query", sMsg, "", 0, ref bFireAgain);
            }
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);

        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {

        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;

        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public static bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public static string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public static string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public static string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public static string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String CriteriaTableTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaTableTypeCode_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[5]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int64 CriteriaSetId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaSetId_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int64 CriteriaID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[7]);
        }
    }
    public bool CriteriaID_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean Debug
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["_Debug"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DBName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DBName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String SessionID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["SessionID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String SourceSchema
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["SourceSchema"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TargetSchema
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TargetSchema"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["TrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String VerifySourceTable
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["VerifySourceTable"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String VerifyTargetTable
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["VerifyTargetTable"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace>
    <AssemblyName>SC_00230587F29F4F8AB3D4D08937D71CA5</AssemblyName>
    <ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{2AC64D70-C3B2-46FD-AFA7-B63A6484AB1E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_00230587F29F4F8AB3D4D08937D71CA5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADhyLFgAAAAAAAAAAOAAAiELAQsAADYAAAAIAAAAAAAAvlQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhUAABTAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxDQAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
VAAAAAAAAEgAAAACAAUA8C4AAHglAAABAAAAAAAAADguAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASomAhYDKBEAAAoqIgIWKBIAAAoqWgMsCAIWKBMAAAoqcgEAAHBzFAAACnpmAnsOAAAKAnsPAAAK
F5RvEAAACnQHAAABKiICFygSAAAKKlICew4AAAoCew8AAAoYlG8VAAAKKiICGCgSAAAKKlICew4A
AAoCew8AAAoZlG8VAAAKKiICGSgSAAAKKlICew4AAAoCew8AAAoalG8VAAAKKiICGigSAAAKKlIC
ew4AAAoCew8AAAoblG8WAAAKKiICGygSAAAKKlICew4AAAoCew8AAAoclG8XAAAKKiICHCgSAAAK
KlICew4AAAoCew8AAAodlG8XAAAKKiICHSgSAAAKKh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJz
GgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcp4AAHAabxsAAAosFQIFAgMoHAAACg4EcwEAAAZvGAAA
BipKKwcCA28ZAAAGA28UAAAGLfEqBio6AigdAAAKAgN9AwAABCo6AigdAAAKAgN9BAAABCqWAnsE
AAAEbx4AAApyrgAAcG8fAAAKKCAAAApvIQAACqUfAAABKpYCewQAAARvHgAACnK8AABwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKcsoAAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApy8AAAcG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnIEAQBwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKch4BAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApyOAEAcG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnJIAQBwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKcmwBAHBvHwAACiggAAAKbyEAAAp0GQAAASpiAigj
AAAKAgJ7AgAABG8cAAAGfQYAAAQqHgIoJAAACioAAAAbMAcAUQIAAAEAABEXCnKQAQBwC3MlAAAK
DANvBgAABhYDbwYAAAZvJgAACignAAAKbygAAAoNcpIBAHAoKQAACglvKgAACm8rAAAKKCwAAAoT
BAlzLQAAChMFEQVvLgAAChEFFmpvLwAACggRBW8wAAAKCHLqAQBwcgACAHADbxIAAAYTChIKKDEA
AAooKQAABiYIcgwCAHByAAIAcAJ7AgAABG8fAAAGbzIAAAooKQAABiYIciACAHByAAIAcAJ7AgAA
BG8iAAAGbzIAAAooKQAABiYIcjACAHByAAIAcAJ7AgAABG8eAAAGbzIAAAooKQAABiYIckgBAHBy
AAIAcHJQAgBwAnsCAAAEbyAAAAZvMgAACgJ7AgAABG8jAAAGbzIAAAooMwAACigpAAAGJghybAEA
cHIAAgBwclACAHACewIAAARvIQAABm8yAAAKAnsCAAAEbyQAAAZvMgAACigzAAAKKCkAAAYmCHK8
AABwcgACAHACewIAAARvHQAABm8yAAAKKCkAAAYmCHJkAgBwcmoCAHAoLgAABhMGAnsGAAAELGly
egIAcBuNAwAAARMLEQsWA28SAAAGEwwSDCgxAAAKohELFwNvCgAABqIRCxgDbwgAAAaiEQsZKDQA
AAqiEQsaEQaiEQsoNQAACgsCKDYAAAog6AMAAHK2AgBwB3KQAQBwFhIAbzcAAAooKQAAChEGbzgA
AAoTBwNvAgAABm85AAAKA28CAAAGEQdvOgAACt4kEwhy4gIAcBEEKDQAAAoRCG87AAAKKDwAAAoT
CREJcz0AAAp6KgAAAEEcAAAAAAAARwAAAOUBAAAsAgAAJAAAACgAAAEbMAMAggAAAAIAABEUCgJv
PgAACgsHcvYCAHBvPwAACgwoQAAACnNBAAAKDQhvQgAAChMFKywRBW9DAAAKdAgAAAETBAkRBG9E
AAAKcjoDAHBvRQAACm9GAAAKEQRvRwAAChEFb0gAAAoty94VEQV1MgAAARMGEQYsBxEGb0kAAArc
CQMSAG9KAAAKJgYqAAABEAAAAgAoADlhABUAAAAAEzACAFMAAAADAAARFgoCAygoAAAGCwctAgYq
B29EAAAKBG9FAAAKLBYHb0QAAAoEb0UAAAoFb0sAAAoXCiseAgRvTAAACgwIBW9LAAAKB29EAAAK
CG9NAAAKJhcKBioAEzAEACAAAAAEAAARc04AAAoKBnJEAwBwAm8rAAAKA29PAAAKJgZvMgAACioT
MAMAHwAAAAQAABFzTgAACgoGclYDAHACbysAAApvUAAACiYGbzIAAAoqABswBADHAAAABQAAEXJi
AwBwCn5RAAAKc1IAAAoLAi0CBioCcoYDAHBvPwAACgwIOZYAAAAIb1MAAAoWPooAAAAHcrIDAHBv
VAAACiYIb0IAAAoTBSszEQVvQwAACnQIAAABDQdytgMAcAlvRAAACnIAAgBwb0UAAApvRgAACm8y
AAAKb1AAAAomEQVvSAAACi3E3hURBXUyAAABEwYRBiwHEQZvSQAACtwHB29VAAAKGFkYb1YAAApy
xgMAcG9UAAAKJgdvMgAACgreBRMEEQR6BioAARwAAAIASABAiAAVAAAAAAAAFgCqwAAFKAAAARsw
BQApAwAABgAAEXNOAAAKCgItBwZvMgAACioCcvYCAHBvPwAACgsHOfkCAAAHb0IAAAoTBTjJAgAA
EQVvQwAACnQIAAABDH5RAAAKDQhvRAAACnLKAwBwb0UAAApvRgAACm8yAAAKJRMGOfoBAAARBnLe
AwBwKFcAAAotJxEGcvADAHAoVwAACjqtAAAAEQZyAAQAcChXAAAKOjMBAAA4xQEAAHISBABwG40D
AAABEwcRBxYIb0QAAApyOgMAcG9FAAAKb0YAAApvMgAACqIRBxcIb0QAAApyygMAcG9FAAAKb0YA
AApvMgAACqIRBxgIb0QAAApyygMAcG9FAAAKb0YAAApvMgAACqIRBxkIb0QAAApyAAIAcG9FAAAK
b0YAAApvMgAACqIRBxoDohEHKDUAAAoNOMABAABycgQAcBuNAwAAARMIEQgWCG9EAAAKcjoDAHBv
RQAACm9GAAAKbzIAAAqiEQgXCG9EAAAKcsoDAHBvRQAACm9GAAAKbzIAAAqiEQgYCG9EAAAKcsoD
AHBvRQAACm9GAAAKbzIAAAqiEQgZCG9EAAAKcgACAHBvRQAACm9GAAAKbzIAAAqiEQgaA6IRCCg1
AAAKDTgpAQAAcnIEAHAbjQMAAAETCREJFghvRAAACnI6AwBwb0UAAApvRgAACm8yAAAKohEJFwhv
RAAACnLKAwBwb0UAAApvRgAACm8yAAAKohEJGAhvRAAACnLKAwBwb0UAAApvRgAACm8yAAAKohEJ
GQhvRAAACnIAAgBwb0UAAApvRgAACm8yAAAKohEJGgOiEQkoNQAACg04kgAAAHLcBABwG40DAAAB
EwoRChYIb0QAAApyOgMAcG9FAAAKb0YAAApvMgAACqIRChcIb0QAAApyygMAcG9FAAAKb0YAAApv
MgAACqIRChgIb0QAAApyygMAcG9FAAAKb0YAAApvMgAACqIRChkIb0QAAApyAAIAcG9FAAAKb0YA
AApvMgAACqIRChoDohEKKDUAAAoNBglvVAAACiYRBW9IAAAKOiv9///eFREFdTIAAAETCxELLAcR
C29JAAAK3N4FEwQRBHoGbzIAAAoqAAAAQTQAAAIAAAAqAAAA3AIAAAYDAAAVAAAAAAAAAAAAAAAQ
AAAADQMAAB0DAAAFAAAAKAAAARswAwA8AAAABwAAEXNOAAAKCgItBwZvMgAACioGAgMoLQAABm9U
AAAKJgYCcmoCAHAoLwAABm9UAAAKJt4DCwd6Bm8yAAAKKgEQAAAAABAAIjIAAygAAAEbMAMAZQEA
AAgAABF+UQAACgoCLQoDKFgAAAosAgYqAgNvWQAACgsHOTsBAAAHb1oAAAoKBnNSAAAKDAJyMgUA
cG8/AAAKDQksfglvQgAAChMJK1QRCW9DAAAKdAgAAAETBBEEb0QAAApyfAUAcG9FAAAKb0YAAApv
MgAACigrAAAGEwUIEQRvRAAACnI6AwBwb0UAAApvRgAACm8yAAAKEQVvWwAACiYRCW9IAAAKLaPe
FREJdTIAAAETChEKLAcRCm9JAAAK3BQNAnKOBQBwbz8AAAoNCTmFAAAACW9CAAAKEwsrWxELb0MA
AAp0CAAAARMGEQZvRAAACnJ8BQBwb0UAAApvRgAACm8yAAAKEQYoLAAABigqAAAGEwcIEQZvRAAA
CnI6AwBwb0UAAApvRgAACm8yAAAKEQdvWwAACiYRC29IAAAKLZzeFRELdTIAAAETDBEMLAcRDG9J
AAAK3AhvMgAACgreBRMIEQh6BioAAABBTAAAAgAAAEYAAABhAAAApwAAABUAAAAAAAAAAgAAANgA
AABoAAAAQAEAABUAAAAAAAAAAAAAABMAAABLAQAAXgEAAAUAAAAoAAABHgIoFgAABioeAigdAAAK
KhMwAgAtAAAACQAAEX4HAAAELSBy1AUAcNAHAAACKF0AAApvXgAACnNfAAAKCgaABwAABH4HAAAE
Khp+CAAABCoeAoAIAAAEKhp+CQAABCouczYAAAaACQAABCoeAihiAAAKKgAAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAwLAAAjfgAAeAsAAOQPAAAj
U3RyaW5ncwAAAABcGwAAVAYAACNVUwCwIQAAEAAAACNHVUlEAAAAwCEAALgDAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkBAAAA+iUzABYAAAEAAAA6AAAACAAAAAkAAAA3AAAAIAAAAGIAAAABAAAADwAA
AAkAAAAEAAAAHAAAAB8AAAABAAAAAQAAAAcAAAABAAAAAAAKAAEAAAAAAAYA9QDUAAYAAgHUAAoA
IgEbAQ4APgEpARIAdwHUAAYAhgHUABIAmgHUABYAxAW5BRYAzAW5BQoAogaRBgoA0wa+BgoAJwgN
CAoAUghACAoAaQhACAoAhghACAoApQhACAoAvghACAoA1whACAoA8ghACAoADQlACAoAJglACAoA
Xwk/CQoAfwk/CQoA4gkbAQoAGgobAQoAIQobARoAlQptChoAvAptCgsAzAoAABoA/AptCgoAKAsb
AQYAMAvUAAoAYgsbAQoAigt+CwoAtQurCwoAwgurCwoA4QsbAQoA8AsbAR4AVQwsDAoAtwwbAQoA
zQwbARYA4gy5BRYAAQ25BQoAGQ0bAQoAYg1HDQoAbw1HDQoAlg2DDRYAvA25BRYA4g25BQoAEQ4b
AQoAUg5+CwoA2A7FDgoA9Q4bAQoA+g4bAQoAHg9ACA4ASg80Dw4AYw80DwoAeA8/CQAAAAABAAAA
AAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAkAAQAWAAEAEABNAAAADQADABoAAQAQAFkAAAAN
AAQAGwABABAAYwAAAAwABQAlAAAAEABuAHgADQAHADEAAAEQAK4AeAARAAkANQAGAE0ASgAGAFkA
TgABAHwEZgABAHwEZgBRgJAFcAABAJsFeAARALIGrAARAN8GsAARACMHzgBQIAAAAACGGJQBEwAB
AFsgAAAAAIYIpQEdAAQAdSAAAAAAhgi1ASIABAB/IAAAAACGCMUBKAAFAIggAAAAAIYI3AEsAAUA
nyAAAAAAhgjzAR0ABgC5IAAAAACGCAUCKAAGAMIgAAAAAIYIHgIxAAYA1yAAAAAAhggvAigABgDg
IAAAAACGCEcCMQAGAPUgAAAAAIYIWAIoAAYA/iAAAAAAhghwAjEABgATIQAAAACGCIoCKAAGABwh
AAAAAIYIqwIoAAYAMSEAAAAAhgi5AigABgA6IQAAAACGCM4CNQAGAE8hAAAAAIYI4AIoAAYAWCEA
AAAAhgj5AjUABgBtIQAAAACGCAgDKAAGAHYhAAAAAIYAHgMoAAYAfiEAAAAAhgAmAygABgCGIQAA
AACGGJQBUgAGAKYhAAAAAMYARARWAAYAyyEAAAAAxgFRBGAACgDeIQAAAADGAWUEYAALAOAhAAAA
AIYYlAFqAAwA7yEAAAAAhhiUAWoADQD+IQAAAACGCIwEKAAOACQiAAAAAIYIlgQxAA4ASiIAAAAA
hgihBDEADgBwIgAAAACGCLgEMQAOAJYiAAAAAIYIxgQxAA4AvCIAAAAAhgjXBDEADgDiIgAAAACG
COgEMQAOAAgjAAAAAIYI9AQxAA4ALiMAAAAAhggKBTEADgBUIwAAAADGAKIFUgAOAG0jAAAAAMYA
rQVSAA4AeCMAAAAAxgBlBGAADgD0JQAAAACWANgFewAPAJQmAAAAAJYA6wWDABEA9CYAAAAAlgAE
BowAFQAgJwAAAACWAB0GkgAXAEwnAAAAAJYAKQaXABgAPCgAAAAAlgA/Bp0AGQCoKwAAAACWAFsG
pAAbAAAsAAAAAJYAeQadAB4AwC0AAAAAhhiUAVIAIADILQAAAACDGJQBUgAgANAtAAAAAJMI7wa0
ACAACS4AAAAAkwgDB7kAIAAQLgAAAACTCA8HvgAgABguAAAAAJYIMwfSACEAKy4AAAAAhhiUAVIA
IQAfLgAAAACRGJMP9QIhAAAAAQBHBwAAAgBOBwAAAwBiBwAAAQBsBwAAAQBsBwAAAQByBwAAAgB6
BwAAAwBHBwAABABiBwAAAQBHBwAAAQCEBwAAAQCIBwAAAQCIBwAAAQCEBwAAAQCSBwAAAgCZBwAA
AQCSBwAAAgCZBwAAAwCoBwAABAC3BwAAAQDHBwAAAgDRBwAAAQDHBwAAAQDcBwAAAQCSBwAAAgDl
BwAAAQCSBwAAAgDlBwAAAwD0BwAAAQCSBwAAAgADCAAAAQBsB2EAlAHcAGkAlAHcAHEAlAHcAHkA
lAHcAIEAlAHcAIkAlAHcAJEAlAHcAJkAlAHcAKEAlAHcAKkAlAHcALEAlAHhALkAlAFSAAkAlAET
AAkARwfmAAkATgfqACkAwQnuAAkAygnzAAkA0wn5AAkA2gnhAMEAlAHcACkA/An+ACkABgr5ACkA
EQoDAQkAHgMoAAkAJgMoABEAlAFSAMkAMgoIAREAOQoPARkAlAFSABEApgoVAdkAwQkaAREA5wog
AeEAFAslAQEBlAFSABEAogVSABEArQVSAEkAlAFSADkAVwswAQkBags0ATkAcgs5AREBkwtAAREB
/AlGAckAnwsxAMkApAtMARkBlAFSASEByQtSACEBzwtYAUkA3AtdASkB5wsxABkA5wsxAMkApAtk
ATEB/AtrAckApAtvAREAbgx2ATkBhAx8AREBlAyHATkAnQxSADkAqwxSAUEBwQwxAMkApAuNAUkB
lAHcAEkA7QytAUEADQ2zAWEBKA26AQwAlAHJAVkBog3UAXkBsA3aAUEA0w3eAYEB7w3kAUEA+g0x
AAwABA7rAXkBCA4oAJEBHQ5SAAwAJQ7zAUEAMQ7cAEkAOw7kAYEBSw4XApkBlAFSAJkBYA4pApkB
YA44AskAbQ5wAJkBlAHcAFkBcw5AApkBSw5EApkBVwtAApkBfQ5LAskAhA5oAskAkA6VAkEAng6a
AkEArw4xAJkBvQ6gAqEBlAFSAKkBDA/JAqkBJw/SAlEAlAHYAsEBlAHlAtEBlAFSACEAlAFSAA4A
FABzAC4AGwBxAy4AYwCXAy4ACwD5Ai4AEwBBAy4AIwBxAy4AKwBxAy4AMwBBAy4AOwB3Ay4AQwBx
Ay4AWwCOA8MAEwErAeMA4wIrASEBCwMrAUkDAwPsAmkDAwPsApUB/AEgAjICUwJuAowCqALgAgIA
AQAFABEABwAaAAgAHAAAADIDOQAAAD4DPgAAAFEDOQAAAF8DPgAAAHQDQgAAAIEDPgAAAJUDQgAA
AKIDPgAAALYDQgAAAMwDPgAAAOkDPgAAAPMDPgAAAAQERgAAABIEPgAAACcERgAAADIEPgAAACAF
PgAAACYFQgAAAC0FQgAAAEAFQgAAAEoFQgAAAFcFQgAAAGQFQgAAAGwFQgAAAH4FQgAAAKIGxAAA
ABsHyQAAAD8H1wACAAIAAwABAAMAAwABAAUABQACAAQABQACAAYABwACAAcACQACAAgACwACAAkA
DQACAAoADwACAAsAEQACAAwAEwACAA0AFQACAA4AFwACAA8AGQACABAAGwACABEAHQACABIAHwAC
ABMAIQACABwAIwACAB0AJQACAB4AJwACAB8AKQACACAAKwACACEALQACACIALwACACMAMQACACQA
MwACADIANQACADMANwABADQANwACADUAOQDAAQSAAAABAAAAFBicoAAAAAAAAJ0JAAAMAAAAAAAA
AAAAAAABALcAAAAAAAQAAAAAAAAAAAAAAAoAEgEAAAAABAAAAAAAAAAAAAAACgAbAQAAAAAMAAAA
AAAAAAAAAAABAFYBAAAAAAQAAAAAAAAAAAAAAAoAuQUAAAAADAAAAAAAAAAAAAAAAQBKCgAAAAAM
AAAAAAAAAAAAAAABAAgMAAAAAAAAAAABAAAAmg8AAAAAADxNb2R1bGU+AFNDXzAwMjMwNTg3RjI5
RjRGOEFCM0Q0RDA4OTM3RDcxQ0E1LmRsbABJbnB1dDBCdWZmZXIAVXNlckNvbXBvbmVudABDb25u
ZWN0aW9ucwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfZmQwYmFiNjcxZmY0NDYy
Njg0NGQzYmM2OWEyZDgyYmUuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRC
dWZmZXIAU2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZp
Z3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdl
dF9Dcml0ZXJpYVNRTABzZXRfQ3JpdGVyaWFTUUwAZ2V0X0NyaXRlcmlhU1FMX0lzTnVsbABzZXRf
Q3JpdGVyaWFTUUxfSXNOdWxsAGdldF9YTUxTcWxRdWVyeUVDAGdldF9YTUxTcWxRdWVyeUVDX0lz
TnVsbABnZXRfRUNQYXNzTm9Db2RlAGdldF9FQ1Bhc3NOb0NvZGVfSXNOdWxsAGdldF9Dcml0ZXJp
YU5hbWUAZ2V0X0NyaXRlcmlhTmFtZV9Jc051bGwAZ2V0X0NyaXRlcmlhVGFibGVUeXBlQ29kZQBn
ZXRfQ3JpdGVyaWFUYWJsZVR5cGVDb2RlX0lzTnVsbABnZXRfSXNFbmFibGVkAGdldF9Jc0VuYWJs
ZWRfSXNOdWxsAGdldF9Dcml0ZXJpYVNldElkAGdldF9Dcml0ZXJpYVNldElkX0lzTnVsbABnZXRf
Q3JpdGVyaWFJRABnZXRfQ3JpdGVyaWFJRF9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABDcml0
ZXJpYVNRTABDcml0ZXJpYVNRTF9Jc051bGwAWE1MU3FsUXVlcnlFQwBYTUxTcWxRdWVyeUVDX0lz
TnVsbABFQ1Bhc3NOb0NvZGUARUNQYXNzTm9Db2RlX0lzTnVsbABDcml0ZXJpYU5hbWUAQ3JpdGVy
aWFOYW1lX0lzTnVsbABDcml0ZXJpYVRhYmxlVHlwZUNvZGUAQ3JpdGVyaWFUYWJsZVR5cGVDb2Rl
X0lzTnVsbABJc0VuYWJsZWQASXNFbmFibGVkX0lzTnVsbABDcml0ZXJpYVNldElkAENyaXRlcmlh
U2V0SWRfSXNOdWxsAENyaXRlcmlhSUQAQ3JpdGVyaWFJRF9Jc051bGwAUHJvY2Vzc0lucHV0AElu
cHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQYXJlbnRDb21wb25lbnQA
Z2V0X0RlYnVnAGdldF9EQk5hbWUAZ2V0X0RpbVJlcG9ydGluZ0RhdGVJRABnZXRfU2Vzc2lvbklE
AGdldF9Tb3VyY2VTY2hlbWEAZ2V0X1RhcmdldFNjaGVtYQBnZXRfVHJ1c3RJRABnZXRfVmVyaWZ5
U291cmNlVGFibGUAZ2V0X1ZlcmlmeVRhcmdldFRhYmxlAERlYnVnAERCTmFtZQBEaW1SZXBvcnRp
bmdEYXRlSUQAU2Vzc2lvbklEAFNvdXJjZVNjaGVtYQBUYXJnZXRTY2hlbWEAVHJ1c3RJRABWZXJp
ZnlTb3VyY2VUYWJsZQBWZXJpZnlUYXJnZXRUYWJsZQBfRW5kT2ZMaW5lAF9ERUJVRwBQcmVFeGVj
dXRlAFBvc3RFeGVjdXRlAFN5c3RlbS5YbWwAWG1sTm9kZQBYbWxEb2N1bWVudABHZXRQYXJhbWV0
ZXJCeU5hbWUAVXBkYXRlUGFyYW1ldGVyQXR0cmlidXRlAEdldE9wZXJhdG9yV2l0aFBhcmFtZXRl
cgBHZXRPcGVyYXRvcgBTZWxlY3RlZEl0ZW1zVG9TdHJpbmcAR2V0VFNRTERlY2xhcmVIZWFkZXJG
cm9tWE1MAEdldFRTUUxFeGVjdXRhYmxlUXVlcnlGcm9tWE1MAEdldFRTUUxRdWVyeUJvZHlGcm9t
WE1MAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5h
Z2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9E
ZWZhdWx0AERlZmF1bHQAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAT3V0cHV0TWFwAHZhbHVl
AElucHV0SUQASW5wdXROYW1lAFJvdwBDb21wb25lbnQAWG1sRG9jAHNQYXJhbWV0ZXJOYW1lAHNB
dHRyaWJ1dGVOYW1lAHNBdHRyaWJ1dGVWYWx1ZQBzT3BlcmF0b3IAc1BhcmFtZXRlcgB4bWxQYXJh
bQBzTGluZURlbGltaXRlcgBzUXVlcnlOb2RlUGF0aABzTm9kZVBhdGgAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzAwMjMwNTg3RjI5
RjRGOEFCM0Q0RDA4OTM3RDcxQ0E1AGdldF9JdGVtAHNldF9JdGVtAElzTnVsbABTZXROdWxsAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AR2V0U3RyaW5nAEdldEJvb2xlYW4AR2V0SW50NjQAU3Ry
aW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMATWljcm9zb2Z0LlNx
bFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldy
YXBwZXIASURUU1ZhcmlhYmxlczEwMABnZXRfUmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxl
MTAwAFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNF
dmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRleHQAQm9vbGVhbgBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBnZXRfTGVuZ3RoAENvbnZlcnQAVG9JbnQzMgBH
ZXRCbG9iRGF0YQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfVW5pY29kZQBUcmltAEZvcm1hdABT
eXN0ZW0uSU8ATWVtb3J5U3RyZWFtAFN0cmVhbQBGbHVzaABzZXRfUG9zaXRpb24ATG9hZABJbnQ2
NABUb1N0cmluZwBFbnZpcm9ubWVudABnZXRfTmV3TGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRU
U1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElE
VFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEARmlyZUluZm9ybWF0
aW9uAEdldEJ5dGVzAFJlc2V0QmxvYkRhdGEAQWRkQmxvYkRhdGEARXhjZXB0aW9uAGdldF9NZXNz
YWdlAEFwcGxpY2F0aW9uRXhjZXB0aW9uAFhtbEVsZW1lbnQAZ2V0X0RvY3VtZW50RWxlbWVudABY
bWxOb2RlTGlzdABTZWxlY3ROb2RlcwBTdHJpbmdDb21wYXJlcgBnZXRfSW52YXJpYW50Q3VsdHVy
ZUlnbm9yZUNhc2UAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyAElFcXVh
bGl0eUNvbXBhcmVyYDEAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0
b3IAZ2V0X0N1cnJlbnQAWG1sQXR0cmlidXRlQ29sbGVjdGlvbgBnZXRfQXR0cmlidXRlcwBYbWxB
dHRyaWJ1dGUAZ2V0X0l0ZW1PZgBnZXRfVmFsdWUAQWRkAE1vdmVOZXh0AElEaXNwb3NhYmxlAERp
c3Bvc2UAVHJ5R2V0VmFsdWUAc2V0X1ZhbHVlAENyZWF0ZUF0dHJpYnV0ZQBBcHBlbmQAU3RyaW5n
QnVpbGRlcgBBcHBlbmRGb3JtYXQARW1wdHkAZ2V0X0NvdW50AFJlbW92ZQBvcF9FcXVhbGl0eQBJ
c051bGxPckVtcHR5AFNlbGVjdFNpbmdsZU5vZGUAZ2V0X0lubmVyVGV4dABSZXBsYWNlAFN5c3Rl
bS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDX2ZkMGJhYjY3MWZmNDQ2MjY4
NDRkM2JjNjlhMmQ4MmJlLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAA
DV8ARABlAGIAdQBnAAANRABCAE4AYQBtAGUAACVEAGkAbQBSAGUAcABvAHIAdABpAG4AZwBEAGEA
dABlAEkARAAAE1MAZQBzAHMAaQBvAG4ASQBEAAAZUwBvAHUAcgBjAGUAUwBjAGgAZQBtAGEAABlU
AGEAcgBnAGUAdABTAGMAaABlAG0AYQAAD1QAcgB1AHMAdABJAEQAACNWAGUAcgBpAGYAeQBTAG8A
dQByAGMAZQBUAGEAYgBsAGUAACNWAGUAcgBpAGYAeQBUAGEAcgBnAGUAdABUAGEAYgBsAGUAAAEA
VzwAPwB4AG0AbAAgAHYAZQByAHMAaQBvAG4APQAiADEALgAwACIAIABlAG4AYwBvAGQAaQBuAGcA
PQAiAHUAdABmAC0AMQA2ACIAIAA/AD4AewAwAH0AARVDAHIAaQB0AGUAcgBpAGEASQBkAAALVgBh
AGwAdQBlAAATUwBlAHMAcwBpAG8AbgBJAGQAAA9UAHIAdQBzAHQASQBkAAAfRABpAG0AUgBlAHAA
bwByAHQARABhAHQAZQBJAGQAABN7ADAAfQAuAFsAewAxAH0AXQAABQ0ACgAADy8ALwBRAHUAZQBy
AHkAADtbAEQAZQBiAHUAZwA6ACAAewAwAH0AIAB7ADEAfQAgAHsAMgB9ACAAewAzAH0AOgAgAHsA
NAB9AF0AACtDAHIAaQB0AGUAcgBpAGEAIABYAE0ATAAgAFQAbwAgAFEAdQBlAHIAeQAAE3sAMAB9
AHsAMQB9AHsAMgB9AABDLwAvAFAAYQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABlAD0AJwBTAHEA
bABQAGEAcgBhAG0AZQB0AGUAcgAnAF0AAQlOAGEAbQBlAAARIAB7ADAAfQAgAHsAMQB9AAALIAB7
ADAAfQAgAAAjKAAnAG4AbwBuAGUAJwApACAAQQBuAGQAIAAxAD0AMQAgAAErLgAvAC8AUwBlAGwA
ZQBjAHQAZQBkAEkAdABlAG0AcwAvAEkAdABlAG0AAAMoAAAPJwB7ADAAfQAnACwAIAABAykAABNT
AHEAbABEAGIAVAB5AHAAZQAAEUQAYQB0AGUAVABpAG0AZQAAD1YAYQByAEMAaABhAHIAABFOAFYA
YQByAEMAaABhAHIAAF9EAGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACAAPQAgAEMAbwBu
AHYAZQByAHQAKAB7ADIAfQAsACAAJwB7ADMAfQAnACwAIAAxADIAMAApACAAewA0AH0AAWlEAGUA
YwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACgAbQBhAHgAKQAgAD0AIABDAG8AbgB2AGUAcgB0
ACgAewAyAH0AKABtAGEAeAApACwAIAAnAHsAMwB9ACcAKQAgAHsANAB9AAFVRABlAGMAbABhAHIA
ZQAgAEAAewAwAH0AIAB7ADEAfQAgAD0AIABDAG8AbgB2AGUAcgB0ACgAewAyAH0ALAAgACcAewAz
AH0AJwApACAAewA0AH0AAUkvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAnAFIA
ZQBwAGwAYQBjAGUATwBwAGUAcgBhAHQAbwByACcAXQABEU8AcABlAHIAYQB0AG8AcgAARS8ALwBQ
AGEAcgBhAG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUgBlAHAAbABhAGMAZQBMAG8AbwBrAHUA
cAAnAF0AAX9TAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQAMwBi
AGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAA6ziHjqEu8Uasx0DYITbDpQAIiYRdzYCAzJEIt3pcVhk04IkJ
IAMBEhUdCBIZBCAAEh0FIAEBEh0DIAACBCABAQIDIAAOAyAACgQoABIdAygAAgMoAA4DKAAKAwYS
EAMGEhQDIAABCSAEAQgOEhUSGQUgAQESCAMGEgkFIAEBEgkCBg4EDQAKAAIGAgcAAhIhEiUOCAAE
AhIlDg4OBQACDg4OBAABDg4FAAEOEiEGAAIOEiUOBwADDhIlDg4DBhIpAwYSLQQAABIpBAAAEi0F
AAEBEi0ECAASKQQIABItAwYSIAQAABIgBAgAEiAEIAEBDgQgAQEIAwYSFQMGHQgEIAEcCAUgAgEI
HAQgAQIIBCABDggEIAEKCAYgAgIOEWkFIAEdCAgEIAASbQUgARJxHAQAABJ1BSABHBJ5BAEAAAAD
IAAJBAABCAkGIAIdBQgIBQAAEoCJBSABDh0FBQACDg4cBSABAR0FBCABAQoGIAEBEoCRBgADDg4c
HAMAAA4GAAIODh0cBSAAEoCdCiAGAQgODg4IEAIFIAEdBQ4HAAQODhwcHBcHDQIOEiUdBQ4SgI0O
HQUSgKEOCh0cCgUgABKAqQYgARKArQ4FAAASgLEIFRKAtQIOEiEKIAEBFRKAuQETAAUgABKAvQMg
ABwFIAASgMEGIAESgMUOByACARMAEwEIIAICEwAQEwEaBwcSIRKAqRKArRUSgLUCDhIhEiESgL0S
gMkIIAESgMUSgMUIBwMCEiESgMUIIAMSgM0OHBwFBwESgM0HIAISgM0OHAMgAAgGIAESgM0OByAC
EoDNCAgUBwcOEoDNEoCtEiESgKESgL0SgMkFAAICDg4dBwwSgM0SgK0SIQ4SgKESgL0OHRwdHB0c
HRwSgMkIBwISgM0SgKEEAAECDgUgARIhDgcgAhKAzQ4OIAcNDhIhEoDNEoCtEiEOEiEOEoChEoC9
EoDJEoC9EoDJCAABEoDVEYDZBSAAEoDdByACAQ4SgN0EBwESKQYgAQERgOUIAQACAAAAAAADAAAB
RwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAu
TkVUIEZyYW1ld29yayA0LwEAKlNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNz
cHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEyAAAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBAACQVAAAAAAAAAAAAACuVAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAoFQAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA0AMAAAAAAAAA
AAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAJyg
FBgAAAEAnKAUGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBDADAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0AGIAMAAAAIAAKwAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcA
MQBmAGYANAA0ADYAMgA2ADgANAA0AGQAMwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcABy
AG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA2ADQA
LgA0ADEAMQAxADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAAw
ADIAMwAwADUAOAA3AEYAMgA5AEYANABGADgAQQBCADMARAA0AEQAMAA4ADkAMwA3AEQANwAxAEMA
QQA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADIAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBDAF8AMAAwADIAMwAwADUAOAA3AEYAMgA5AEYANABGADgAQQBCADMARAA0
AEQAMAA4ADkAMwA3AEQANwAxAEMAQQA1AC4AZABsAGwAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAQwBfAGYAZAAwAGIAYQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAz
AGIAYwA2ADkAYQAyAGQAOAAyAGIAZQAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUA
YwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMQA2ADQALgA0ADEAMQAxADYAAAAAAEgADwAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMQA2ADQALgA0ADEA
MQAxADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAMA0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_00230587f29f4f8ab3d4d08937d71ca5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_Debug,User::DBName,User::DimReportingDateID,User::SessionID,User::SourceSchema,User::TargetSchema,User::TrustID,User::VerifySourceTable,User::VerifyTargetTable</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">3e7d77f42ca8eb458da82ee32e5fb0e0</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaTableTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTableTypeCode"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaSetId]"
                          cachedDataType="i8"
                          cachedName="CriteriaSetId"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetId]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0].Columns[CriteriaID]"
                          cachedDataType="i8"
                          cachedName="CriteriaID"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Verification for Working Table\Apply Criteria\Get Criterias"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Criterias"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Declare @CriteriaSetName nvarchar(100) = 'RBASecurityVerify'
select CriteriaID
	, CriteriaName
	, CriteriaDescription
	, C.CriteriaSetId
	, Verification.GetDictonaryCodeByCodeId('CriteriaSetType', C.CriteriaSetId) as CriteriaSetTypeCode
	, Verification.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode
	, IsEnable as IsEnabled
	, Verification.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, Verification.GetDictonaryCodeByCodeId('CriteriaTableType', CriteriaTableTypeId) as CriteriaTableTypeCode
	, SequenceNo
    , cast(null as nvarchar(max)) as CriteriaSQL
from Verification.Criteria C
Join Verification.CriteriaSet CS on CS.CriteriaSetId = C.CriteriaSetId
where  IsEnable = 1 And CriteriaSetTypeId = [Verification].GetDictionaryCodeID('CriteriaSetType',@CriteriaSetName)
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::_Query_GetCriteriasBySet</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0",{F4189E40-099C-44D4-8AD8-17B2325D378E};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaID]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].Columns[CriteriaID]"
                          name="CriteriaID"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTableTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          dataType="bool"
                          name="IsEnabled" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output].ExternalColumns[CriteriaID]"
                          dataType="i8"
                          name="CriteriaID" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaID]"
                          dataType="i8"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaID]"
                          name="CriteriaID" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          dataType="bool"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Verification].[VerificationResult]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SessionId]"
                          cachedDataType="guid"
                          cachedName="SessionId"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[SessionId]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CriteriaId]"
                          cachedDataType="i8"
                          cachedName="CriteriaId"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CriteriaId]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[CriteriaId]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VerifyColumn]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="VerifyColumn"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyColumn]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyColumn]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VerifyRow]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="VerifyRow"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyRow]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyRow]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VerifyType]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="VerifyType"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyType]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyType]" />
                        <inputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VerifyResult]"
                          cachedDataType="wstr"
                          cachedLength="500"
                          cachedName="VerifyResult"
                          externalMetadataColumnId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyResult]"
                          lineageId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult].Columns[VerifyResult]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                          dataType="guid"
                          name="SessionId" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CriteriaId]"
                          dataType="i8"
                          name="CriteriaId" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyColumn]"
                          dataType="wstr"
                          length="500"
                          name="VerifyColumn" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyRow]"
                          dataType="wstr"
                          length="500"
                          name="VerifyRow" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyType]"
                          dataType="wstr"
                          length="500"
                          name="VerifyType" />
                        <externalMetadataColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VerifyResult]"
                          dataType="wstr"
                          length="500"
                          name="VerifyResult" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Verification for Working Table\Apply Criteria.Paths[CriteriaResult]"
                  endId="Package\Verification for Working Table\Apply Criteria\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="CriteriaResult"
                  startId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Outputs[CriteriaResult]" />
                <path
                  refId="Package\Verification for Working Table\Apply Criteria.Paths[OLE DB Source Output]"
                  endId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\Verification for Working Table\Apply Criteria\Get Criterias.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Verification for Working Table\Apply Criteria.Paths[Output 0]"
                  endId="Package\Verification for Working Table\Apply Criteria\Apply Criteria.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Clean Result Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6CDC87B1-3BF5-4C15-84C6-42DD6FB97A6E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Clean Result Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
              SQLTask:SqlStatementSource="delete [Verification].[VerificationResult] where SessionID= ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SessionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1F0446EA-65DF-49BD-9461-728F684EAF6F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
              SQLTask:SqlStatementSource="Declare @SessionId uniqueidentifier = ?&#xA;Select [Verification].[GetVerifyResultAsMessage](@SessionId , 'max') As ActionMessage"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::_ActionMessageObj" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SessionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Get SourceTable"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{20107095-1A04-4110-9479-2C25F4496AFC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get SourceTable"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::V_GetSourceTableName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="sourceTable"
                SQLTask:DtsVariableName="User::VerifySourceTable" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Get Target Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4B639C78-717B-4872-B9D0-C6EA68D2D0AA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Target Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::V_GetTargetTableName"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="targetTable"
                SQLTask:DtsVariableName="User::VerifyTargetTable" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Replace Date  'NA'"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{1DB1F9A3-E642-4203-A894-07BEA3FAE684}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Replace Date  'NA'"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
              SQLTask:SqlStatementSource="Declare @SessionId nvarchar(100) = ?&#xA;Declare @DBName nvarchar(100) = 'DAL_SEC'&#xA;Declare @VerifyTargetTable nvarchar(100) = 'dbo.tblFactTrustTransactionABS'&#xA;Declare @VerifySourceTable nvarchar(100) = 'Working.tblFactTrustTransactionABS'&#xA;Declare @VerifyDataType nvarchar(100) = 'date' -- date, decimal, NA, NULL&#xA;Declare @ReportName nvarchar(100) = 'TransactionReport'&#xA;&#xA;EXECUTE [TaskProcess].[Verification].USP_Verify_UpdateWorkinTableDefaultValue&#xA;   @DBName&#xA;  ,@SessionId&#xA;  ,@VerifyTargetTable&#xA;  ,@VerifySourceTable&#xA;  ,@VerifyDataType&#xA;  ,@ReportName " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SessionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Replace Decimal  'NA'"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:Disabled="True"
          DTS:DTSID="{B2F2860D-7295-48EF-AF6A-0114DC864682}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Replace Decimal  'NA'"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{35B4F3F4-13A5-4FCB-85DA-246E18B76FDE}"
              SQLTask:SqlStatementSource="Declare @SessionId nvarchar(100) = ?&#xA;Declare @DBName nvarchar(100) = 'DAL_ABS'&#xA;Declare @VerifyTargetTable nvarchar(100) = 'Transactional.tblFactTrustTransactionABS'&#xA;Declare @VerifySourceTable nvarchar(100) = 'Working.tblFactTrustTransactionABS'&#xA;Declare @VerifyDataType nvarchar(100) = 'decimal' -- date, decimal, NA, NULL&#xA;Declare @ReportName nvarchar(100)  = 'TransactionReport'&#xA;&#xA;EXECUTE [TaskProcess].[Verification].USP_Verify_UpdateWorkinTableDefaultValue&#xA;   @DBName&#xA;  ,@SessionId&#xA;  ,@VerifyTargetTable&#xA;  ,@VerifySourceTable&#xA;  ,@VerifyDataType&#xA;  ,@ReportName" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::SessionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Verification for Working Table\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Update ActionMessage variable"
          DTS:DTSID="{193148CE-F323-4BE7-A6F3-F4E04F382A26}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1ea631f85a0e4c769572780c1c01895f"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::_ActionMessageObj"
              ReadWriteVariables="User::ActionMessage">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="st_1ea631f85a0e4c769572780c1c01895f.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_1ea631f85a0e4c769572780c1c01895f.csproj</RootNamespace>
    <AssemblyName>ST_1ea631f85a0e4c769572780c1c01895f.csproj</AssemblyName>
    <ProjectGuid>{23A4DECE-5A23-4ED4-9E41-08D4114B5FC8}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Settings.get_Default():ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Sett" +
    "ings")]

namespace ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;

namespace ST_1ea631f85a0e4c769572780c1c01895f.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            Dts.TaskResult = (int)ScriptResults.Success;
            
            DataTable dt = new DataTable();
            OleDbDataAdapter oleDa = new OleDbDataAdapter();
            oleDa.Fill(dt, Dts.Variables["User::_ActionMessageObj"].Value);

            if (!String.IsNullOrEmpty(dt.Rows[0][0].ToString()))
            {
                Dts.Variables["User::ActionMessage"].Value = dt.Rows[0][0].ToString();
                String sException = String.Format("[ExceptionMessageBegin:{0}:ExceptionMessageEnd]", Dts.Variables["User::ActionMessage"].Value.ToString());
                throw new ApplicationException(sException);
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>st_1ea631f85a0e4c769572780c1c01895f</msb:CodeName>
		<msb:DisplayName>st_1ea631f85a0e4c769572780c1c01895f</msb:DisplayName>
		<msb:ProjectId>{CB4A35B1-ABDD-4AF9-8F17-6DE7E112C52C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_1ea631f85a0e4c769572780c1c01895f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1ea631f85a0e4c769572780c1c01895f.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1ea631f85a0e4c769572780c1c01895f.csproj")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_1ea631f85a0e4c769572780c1c01895f.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP/hJ1gAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAfjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MAAAAAAAAEgAAAACAAUASCIAAOQNAAABAAAAAAAAAJAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBAC7AAAAAgAAEQIoFgAAChZvFwAACnMYAAAKCnMZAAAKCwcGAigW
AAAKbxoAAApygQAAcG8bAAAKbxwAAApvHQAACiYGbx4AAAoWbx8AAAoWbyAAAApvIQAACigiAAAK
LWICKBYAAApvGgAACnKxAABwbxsAAAoGbx4AAAoWbx8AAAoWbyAAAApvIQAACm8jAAAKctkAAHAC
KBYAAApvGgAACnKxAABwbxsAAApvHAAACm8hAAAKKCQAAAoMCHMlAAAKeioeAigmAAAKKgAAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAADQEAAAjfgAA
oAQAAGQGAAAjU3RyaW5ncwAAAAAECwAAPAEAACNVUwBADAAAEAAAACNHVUlEAAAAUAwAAJQBAAAj
QmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAjAAAABQAAAAYAAAAJAAAAAQAAACYA
AAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAKAAEAAAAAAAYA1gDP
AAoA8gDdAA4AUgEpAQYAbgHPAAYAhAFzAQYAtQGgAQYAbAJSAgYAlwKFAgYArgKFAgYAywKFAgYA
6gKFAgYAAwOFAgYAHAOFAgYANwOFAgYAUgOFAgYAawOFAgYApAOEAwYAxAOEAwYA9QPiAwYAEgTP
AAYAFwTPAAYAOwSFAgoAZwRRBAoAgARRBAYAlQSEAw4AtwQpAQ4A2QQpARIADgUCBRIAKgUYBRYA
egVaBRYAkgVaBRIAswUCBRIAzgUCBQYA3wXPAAYABQbPAAAAAAABAAAAAAABAAEAAAAQADkAQwAF
AAEAAQAAARAAeQBDAAkAAwAFAAEAEACCAI0ADQAEAAgAAwEAALgAAAARAAQACgARAJQBEwARAMEB
FwARAAsCOQAGBjQCRwBWgDwCSgBWgEQCSgBQIAAAAACDGNEBGwABAFggAAAAAJMI1wEfAAEAkSAA
AAAAkwjrASQAAQCYIAAAAACTCPcBKQABAKAgAAAAAJYIGwI9AAIAsyAAAAAAhhjRARsAAgCnIAAA
AACRGLAEiQACALwgAAAAAIYALwIbAAIAgyEAAAAAhhjRARsAAgAAAAEATAI5ANEBWABBANEBWABJ
ANEBWABRANEBWABZANEBWABhANEBWABpANEBWABxANEBWAB5ANEBWACBANEBWACJANEBXQCRANEB
GwCZANEBGwAJANEBGwChACkEYgChAEQEaQApANEBbgC5ANEBegDJANEBGwARANEBGwDRANEBGwAZ
AOsEjQDZAPMEXQDhANEBGwDpANEBGwDZAIQFkgDxAJsFlwD5AKQFnQDpAK4FoQDhAMUFqAABAZsF
rgAJAZsFtQAJANYFugARAeYFvgD5APQFwwARAf4FyAAZAdEBWAAZANEBGwAIABQATgAIABgAUwAp
AJMAgAAuABsATgEuACMATgEuAGMAdAEuAAsA1gAuABMAHgEuADMAHgEuACsATgEuADsAVAEuAEMA
TgEuAFsAawFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1AM4AAgABAAMAAwAAAIQBLwAAAAMCNAAA
ACcCQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAABEYv1IAAAAAAACNAAAABAAAAAAA
AAAAAAAAAQDGAAAAAAAEAAAAAAAAAAAAAAABAM8AAAAAAAwAAAAAAAAAAAAAAAoACgEAAAAABAAA
AAAAAAAAAAAAAQACBQAAAAAMAAAAAAAAAAAAAAAKADsFAAAAAAAAAAABAAAAGgYAAAUABAAAAAAA
ADxNb2R1bGU+AFNUXzFlYTYzMWY4NWEwZTRjNzY5NTcyNzgwYzFjMDE4OTVmLmNzcHJvai5kbGwA
UmVzb3VyY2VzAFNUXzFlYTYzMWY4NWEwZTRjNzY5NTcyNzgwYzFjMDE4OTVmLmNzcHJvai5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMWVhNjMxZjg1YTBlNGM3Njk1NzI3ODBjMWMw
MTg5NWYuY3Nwcm9qAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0u
Q29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2Vt
Ymx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RN
b2RlbABnZXRfRHRzAHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhAERhdGFUYWJsZQBTeXN0ZW0u
RGF0YS5PbGVEYgBPbGVEYkRhdGFBZGFwdGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERU
UwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVz
AFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBGaWxsAERhdGFSb3dDb2xsZWN0aW9uAGdldF9S
b3dzAERhdGFSb3cAVG9TdHJpbmcAU3RyaW5nAElzTnVsbE9yRW1wdHkAc2V0X1ZhbHVlAEZvcm1h
dABBcHBsaWNhdGlvbkV4Y2VwdGlvbgBTVF8xZWE2MzFmODVhMGU0Yzc2OTU3Mjc4MGMxYzAxODk1
Zi5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAB/UwBUAF8AMQBlAGEANgAz
ADEAZgA4ADUAYQAwAGUANABjADcANgA5ADUANwAyADcAOAAwAGMAMQBjADAAMQA4ADkANQBmAC4A
YwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAC9V
AHMAZQByADoAOgBfAEEAYwB0AGkAbwBuAE0AZQBzAHMAYQBnAGUATwBiAGoAACdVAHMAZQByADoA
OgBBAGMAdABpAG8AbgBNAGUAcwBzAGEAZwBlAABfWwBFAHgAYwBlAHAAdABpAG8AbgBNAGUAcwBz
AGEAZwBlAEIAZQBnAGkAbgA6AHsAMAB9ADoARQB4AGMAZQBwAHQAaQBvAG4ATQBlAHMAcwBhAGcA
ZQBFAG4AZABdAAAAAADbzdMK/vPlRLabHs39ZjTpAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAE
AQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAAB
BCAAEm0EIAASeQUgARJ9HAMgABwGIAIIEnEcBSAAEoCBBiABEoCFCAQgARwIAyAADgQAAQIOBCAB
ARwFAAIODhwHBwMScRJ1DkcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTVF8xZWE2MzFmODVhMGU0Yzc2OTU3
Mjc4MGMxYzAxODk1Zi5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMwAACAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQBUMAAAAAAAAAAAAABuMAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAYDAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAL9SERgAAAEAv1IRGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAw
ADAAMAA0AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAxAGUAYQA2ADMAMQBmADgANQBhADAAZQA0AGMANwA2ADkANQA3ADIANwA4ADAAYwAxAGMAMAAx
ADgAOQA1AGYALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADYAMQA2ADEALgAyADEAMQA4ADMAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABO
AGEAbQBlAAAAUwBUAF8AMQBlAGEANgAzADEAZgA4ADUAYQAwAGUANABjADcANgA5ADUANwAyADcA
OAAwAGMAMQBjADAAMQA4ADkANQBmAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABl
AGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAA
MQAzAAAAiAAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADEAZQBh
ADYAMwAxAGYAOAA1AGEAMABlADQAYwA3ADYAOQA1ADcAMgA3ADgAMABjADEAYwAwADEAOAA5ADUA
ZgAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMQBlAGEANgAzADEAZgA4ADUAYQAwAGUANABjADcANgA5ADUANwAyADcAOAAwAGMA
MQBjADAAMQA4ADkANQBmAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYAMQAuADIAMQAxADgAMwAAAAAASAAPAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYAMQAuADIAMQAxADgAMwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{1F7AC619-6A95-486A-A124-1B50D9513906}"
          DTS:From="Package\Verification for Working Table\Clean Result Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Verification for Working Table\Get SourceTable" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{8F3CF7E4-D01A-48F6-9DDC-C044558AA06F}"
          DTS:From="Package\Verification for Working Table\Apply Criteria"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Verification for Working Table\Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{305906B5-6748-47CF-B0DB-5F780890F011}"
          DTS:From="Package\Verification for Working Table\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Verification for Working Table\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{9183FF5D-0F1D-4E17-93F0-0C0AF4B76D85}"
          DTS:From="Package\Verification for Working Table\Replace Date  'NA'"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Verification for Working Table\Clean Result Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{A9203447-23D0-4AAC-BA67-F4D7FC5B3D71}"
          DTS:From="Package\Verification for Working Table\Replace Decimal  'NA'"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Verification for Working Table\Clean Result Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{A1BA1AAE-AA7F-4E08-BC46-4BE72B7A77DC}"
          DTS:From="Package\Verification for Working Table\Get SourceTable"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Verification for Working Table\Get Target Table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Verification for Working Table.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{0124B409-4FEC-4671-A2F2-D13117231E4F}"
          DTS:From="Package\Verification for Working Table\Get Target Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Verification for Working Table\Apply Criteria" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{279C8E02-555E-4949-8DEF-2D1554705562}"
      DTS:From="Package\Init Package"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Verification for Working Table" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="169.6,44"
          Id="Package\Init Package\Script Task"
          TopLeft="43.622641509434,19.7169811320754" />
        <ContainerLayout
          HeaderHeight="43.698113207547166"
          IsExpanded="True"
          PanelSize="243.2,118.4"
          Size="243.2,162.4"
          Id="Package\Init Package"
          TopLeft="70.2619058647934,5.5" />
        <NodeLayout
          Size="177.6,44"
          Id="Package\Verification for Working Table\Apply Criteria"
          TopLeft="92.3773584905661,178.584905660377" />
        <NodeLayout
          Size="177.6,44"
          Id="Package\Verification for Working Table\Clean Result Table"
          TopLeft="92.3773584905661,96.8490566037736" />
        <NodeLayout
          Size="177.6,44"
          Id="Package\Verification for Working Table\Execute SQL Task"
          TopLeft="92.3773584905661,260.320754716981" />
        <NodeLayout
          Size="156.8,41.6"
          Id="Package\Verification for Working Table\Get SourceTable"
          TopLeft="298.400005926405,148.470590182902" />
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\Verification for Working Table\Get Target Table"
          TopLeft="296.114291601765,223.717650061743" />
        <NodeLayout
          Size="124.8,44"
          Id="Package\Verification for Working Table\Replace Date  'NA'"
          TopLeft="63.5471698113208,17" />
        <NodeLayout
          Size="124.8,44"
          Id="Package\Verification for Working Table\Replace Decimal  'NA'"
          TopLeft="204.754716981132,14.7735849056604" />
        <NodeLayout
          Size="177.6,44"
          Id="Package\Verification for Working Table\Script Task"
          TopLeft="92.3773584905661,342.056603773585" />
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint]"
          TopLeft="269.977358490566,118.849056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.4226474358387,44.8215335791281"
              Start="0,0"
              End="20.9226474358387,44.8215335791281">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="12.4219740740402,0" />
                  <mssgle:CubicBezierSegment
                    Point1="12.4219740740402,0"
                    Point2="16.4219740740402,0"
                    Point3="16.4219740740402,4" />
                  <mssgle:LineSegment
                    End="16.4219740740402,40.8215335791281" />
                  <mssgle:CubicBezierSegment
                    Point1="16.4219740740402,40.8215335791281"
                    Point2="16.4219740740402,44.8215335791281"
                    Point3="20.4219740740402,44.8215335791281" />
                  <mssgle:LineSegment
                    End="20.9226474358387,44.8215335791281" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint 1]"
          TopLeft="160.452830188679,222.509433962264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.7547169811321,37.8113207547169"
              Start="0,0"
              End="20.7547169811321,30.3113207547169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.3773584905661" />
                  <mssgle:LineSegment
                    End="20.7547169811321,28.3773584905661" />
                  <mssgle:LineSegment
                    End="20.7547169811321,30.3113207547169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint 2]"
          TopLeft="160.452830188679,304.245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.7547169811321,37.8113207547169"
              Start="0,0"
              End="20.7547169811321,30.3113207547169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.3773584905661" />
                  <mssgle:LineSegment
                    End="20.7547169811321,28.3773584905661" />
                  <mssgle:LineSegment
                    End="20.7547169811321,30.3113207547169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint 3]"
          TopLeft="125.77358490566,60.9245283018869">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.6792452830189,35.9245283018868"
              Start="0,0"
              End="34.6792452830189,28.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.9622641509434" />
                  <mssgle:LineSegment
                    End="34.6792452830189,17.9622641509434" />
                  <mssgle:LineSegment
                    End="34.6792452830189,28.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint 4]"
          TopLeft="266.981132075472,58.6981132075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65.0188679245283,38.1509433962265"
              Start="0,0"
              End="-65.0188679245283,30.6509433962265">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0943396226415" />
                  <mssgle:LineSegment
                    End="-65.0188679245283,19.0943396226415" />
                  <mssgle:LineSegment
                    End="-65.0188679245283,30.6509433962265" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint 5]"
          TopLeft="376.057148764085,190.070590182902">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.647059878841"
              Start="0,0"
              End="0,26.147059878841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.147059878841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table.PrecedenceConstraints[Constraint 6]"
          TopLeft="296.114291601765,244.517650061743">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-26.136933111199,-43.9327444013658"
              Start="0,0"
              End="-18.636933111199,-43.9327444013658">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-9.06846655559951,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.06846655559951,0"
                    Point2="-13.0684665555995,0"
                    Point3="-13.0684665555995,-4" />
                  <mssgle:LineSegment
                    End="-13.0684665555995,-39.9327444013658" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.0684665555995,-39.9327444013658"
                    Point2="-13.0684665555995,-43.9327444013658"
                    Point3="-17.0684665555995,-43.9327444013658" />
                  <mssgle:LineSegment
                    End="-18.636933111199,-43.9327444013658" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="512,440.8"
          Size="512,484.8"
          Id="Package\Verification for Working Table"
          TopLeft="49.3418629517405,236.167535819342" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="191.861905864793,167.9">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="113.479957086947,68.267535819342"
              Start="0,0"
              End="113.479957086947,60.767535819342">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.133767909671" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.133767909671"
                    Point2="0,34.133767909671"
                    Point3="4,34.133767909671" />
                  <mssgle:LineSegment
                    End="109.479957086947,34.133767909671" />
                  <mssgle:CubicBezierSegment
                    Point1="109.479957086947,34.133767909671"
                    Point2="113.479957086947,34.133767909671"
                    Point3="113.479957086947,38.133767909671" />
                  <mssgle:LineSegment
                    End="113.479957086947,60.767535819342" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Verification for Working Table\Apply Criteria">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="225.6,44"
          Id="Package\Verification for Working Table\Apply Criteria\Convert Criterias XML to SQL"
          TopLeft="5.5,81.0849056603773" />
        <NodeLayout
          Size="225.6,44"
          Id="Package\Verification for Working Table\Apply Criteria\Get Criterias"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="225.6,44"
          Id="Package\Verification for Working Table\Apply Criteria\Apply Criteria"
          TopLeft="5.5,156.669811320755" />
        <NodeLayout
          Size="225.6,44"
          Id="Package\Verification for Working Table\Apply Criteria\OLE DB Destination"
          TopLeft="5.5,232.330188679245" />
        <EdgeLayout
          Id="Package\Verification for Working Table\Apply Criteria.Paths[Output 0]"
          TopLeft="118.292452830189,125.009433962264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.6603773584906"
              Start="0,0"
              End="0,24.1603773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.1603773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table\Apply Criteria.Paths[OLE DB Source Output]"
          TopLeft="118.292452830189,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.6603773584906"
              Start="0,0"
              End="0,24.1603773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.1603773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Verification for Working Table\Apply Criteria.Paths[CriteriaResult]"
          TopLeft="118.292452830189,200.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.7358490566037"
              Start="0,0"
              End="0,24.2358490566037">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.2358490566037" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Verification for Working Table\Apply Criteria\Get Criterias">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>