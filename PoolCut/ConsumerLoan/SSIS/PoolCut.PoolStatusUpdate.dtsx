<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/4/2012 2:09:02 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AU2104SDVDEV24"
  DTS:CreatorName="TSYDEV\tfs_L048058"
  DTS:DelayValidation="True"
  DTS:DTSID="{BF7FDC9E-98F8-4D63-912B-6F27943B92F2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="3081"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="PoolCutPoolStatusUpdate"
  DTS:PackageType="5"
  DTS:VersionBuild="352"
  DTS:VersionGUID="{D6C11B0A-62D4-4660-83D1-283063CA358F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LoanShearingPools]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{3B5CC7B4-07B7-4EAC-A4E1-1645527604F3}"
      DTS:ObjectName="LoanShearingPools">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="20"
              DTS:IndexPosition="1"
              DTS:ObjectName="PoolId"
              DTS:DTSID="{7047852E-0BAD-4E57-8829-FA9CA344261C}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_JobConnection]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{058D85DA-9EF7-476A-8036-AA7F96AE7CC1}"
      DTS:ObjectName="OLEDB_JobConnection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::_TargetSqlConnection] </DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DAL_SEC;Initial Catalog=Job_2_20160720_60218;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_PoolConfig]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{13B01A21-35F5-4403-8DE8-4426F285358A}"
      DTS:ObjectName="OLEDB_PoolConfig">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::OLEDBConnString_PoolConfig]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DAL_SEC;Initial Catalog=DAL_SEC_PoolConfig;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_SourcePool]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{14728A79-3FA5-4067-8A17-F5B38C063908}"
      DTS:ObjectName="OLEDB_SourcePool">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::OLEDBConnString_SourcePool]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DAL_SEC;Initial Catalog=SFM_DAL_ConsumerLoan;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_TargetPool]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{6C4BFC34-A4E5-434F-90F6-A0B59C41A1DB}"
      DTS:ObjectName="OLEDB_TargetPool">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::OLEDBConnString_TargetPool]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DAL_SEC;Initial Catalog=Job_2_20160720_60218;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PoolIDCache]"
      DTS:CreationName="CACHE"
      DTS:Description="this cache is used to store poolid and its status info"
      DTS:DTSID="{17EF3BF1-4C1F-4ABA-BD8E-4F50171CB35A}"
      DTS:ObjectName="PoolIDCache">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="20"
              DTS:IndexPosition="1"
              DTS:ObjectName="PoolId"
              DTS:DTSID="{662CE6CD-34E7-44BD-9F26-04AB35DC5897}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:ObjectName="PoolStatus"
              DTS:DTSID="{63CD4784-11A3-4ACA-85C2-B2AB5599D7E8}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PoolStatusCache]"
      DTS:CreationName="CACHE"
      DTS:Description="this cache is used to store poolid and its status info"
      DTS:DTSID="{C1FF525B-C4D2-48BE-8871-E0C922284096}"
      DTS:ObjectName="PoolStatusCache">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="20"
              DTS:IndexPosition="1"
              DTS:ObjectName="PoolId"
              DTS:DTSID="{830FF840-BA38-47B1-9C5F-DBDDBF4360A3}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:IndexPosition="2"
              DTS:ObjectName="PoolStatus"
              DTS:DTSID="{85C5F12B-01FB-4821-9830-414DE4E15207}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PoolStatusUpdate.log]"
      DTS:CreationName="FILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{57B333BE-E80C-4B9E-870C-F30483865E17}"
      DTS:ObjectName="PoolStatusUpdate.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogPath] + @[System::PackageName] + "_" +  (DT_WSTR, 4)DATEPART("yyyy", @[System::StartTime]) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mm", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("dd", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("hh", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mi", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("ss", @[System::StartTime]), 2)  +  ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="E:\TSSWCFServices\TaskProcessServices\ConsumerLoan\LogsPoolCutPoolStatusUpdate_20170321163903.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SharePointConnectionManager]"
      DTS:CreationName="SHAREPOINT"
      DTS:DelayValidation="True"
      DTS:DTSID="{17DC448A-432D-4E70-8F5B-7F189D72532A}"
      DTS:ObjectName="SharePointConnectionManager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"ServerHost="+ @[User::SharePointServer] +";ServerUser=;ServerTimeout=100;RetainSameConnection=True;Compression=False;ConnectionSharing=False;ProxyHost=;ProxyPort=0;ProxyUser=;"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="DeploymentType=Premise;ServerHost=https://poolcutsp;ServerUser=;ServerTimeout=100;RetainSameConnection=True;Compression=False;ConnectionSharing=False;ProxyHost=;ProxyPort=0;ProxyUser=;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="PoolStatusUpdate.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{4883D01D-E593-434F-A941-A81E0A678F42}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C719868-4224-4F6E-9392-444B55DB81AC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimOrganisationID">
      <DTS:VariableValue
        DTS:DataType="8">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A347A74D-F261-4D9A-AAC2-17372B9F62C0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\TSSWCFServices\TaskProcessServices\ConsumerLoan\Logs</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4133FA22-B70B-4980-BADA-3461B655334A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBConnString_PoolConfig">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=DAL_SEC_PoolConfig;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74BFA0FF-6F3D-4D4B-909B-EA1B4EB3F9A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBConnString_SourcePool">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=SFM_DAL_ConsumerLoan;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{18CF6BA6-2BCE-4890-8E55-345A6BBD0D26}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBConnString_TargetPool">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=Job_2_20160720_60218;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CD9333C-E925-4DF4-819D-4D81932D7540}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PoolStatus">
      <DTS:VariableValue
        DTS:DataType="8">OPEN</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D198B211-CABC-4928-A2E0-AAFFA238956B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SharePointServer">
      <DTS:VariableValue
        DTS:DataType="8">https://poolcutsp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B8E4AB6-87AE-4965-967B-E4332212F389}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourcePoolId">
      <DTS:VariableValue
        DTS:DataType="8">60218</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5310289-E272-46CB-A1AC-43D46BD628C8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TargetPoolId">
      <DTS:VariableValue
        DTS:DataType="8">60218</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{183BA1E0-E053-4ECB-869F-C269B7953F7B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_BasePoolDBName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2EE7D16-CE0B-48BA-A47D-C4327D8461C8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_IsSYNCRequired">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36166594-28B2-469C-B95A-F9C9CE1A20D0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_JobSQLConnections">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{455714E0-76A0-4B09-99CF-E855548A8326}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_PoolHeaderStatus_Current">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE7E31EF-41EA-404F-8BD6-47235F8162F2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_PoolStatus_Current">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AF5ACA9D-065F-43CA-BB98-28ABAA508B2E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_SourcePoolStatus">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{935CFD01-6921-42EE-BEA8-AEB7FBDE2508}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_TargetSqlConnection">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=Job_2_20160720_60218;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,13,OnInformation</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{4883D01D-E593-434F-A941-A81E0A678F42}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check Current Pool Status"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{CA283169-886C-4DFB-BB5A-25A5EA7C9DFA}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check Current Pool Status">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Check Current Pool Status\Get Current Pool Status"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D6F64382-938E-4687-83FD-07308FBF23A9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Current Pool Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6C4BFC34-A4E5-434F-90F6-A0B59C41A1DB}"
              SQLTask:SqlStatementSource="if exists(Select Status&#xA;from tblDimPool&#xA;where DimPoolID = ?)&#xA;Select Status&#xA;from tblDimPool&#xA;where DimPoolID = ?&#xA;else&#xA;   select '' as Status"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Status"
                SQLTask:DtsVariableName="User::_PoolStatus_Current" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::TargetPoolId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::TargetPoolId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check Current Pool Status\Get Current PoolHeader Status"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6CFB6DDE-E901-4F49-B6D2-46500E0CD5AC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Current PoolHeader Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{13B01A21-35F5-4403-8DE8-4426F285358A}"
              SQLTask:SqlStatementSource="select dbo.GetDictonaryCodeByCodeId('PoolStatus', ph.PoolStatusId) As Status,&#xA;          dbo.GetDictonaryCodeByCodeId('PoolStatus', sph.PoolStatusId) As SourcePoolStatus&#xA;from Config.PoolHeader ph&#xA;left outer join Config.PoolHeader sph on ph.ParentPoolId = sph.PoolId&#xA;where ph.PoolId = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Status"
                SQLTask:DtsVariableName="User::_PoolHeaderStatus_Current" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="SourcePoolStatus"
                SQLTask:DtsVariableName="User::_SourcePoolStatus" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::TargetPoolId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Check Current Pool Status\Set flag IsSYNCRequired"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{4E228168-10F5-43D5-8248-57F633354AAF}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set flag IsSYNCRequired"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3606766beb904cc0a2268c0bfc4aa530"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::_PoolHeaderStatus_Current,User::_PoolStatus_Current,User::_SourcePoolStatus"
              ReadWriteVariables="User::_IsSYNCRequired,User::_JobSQLConnections,User::PoolStatus">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3606766beb904cc0a2268c0bfc4aa530.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3606766beb904cc0a2268c0bfc4aa530.csproj")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties.Settings.get_Default():ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties.Sett" +
    "ings")]

namespace ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
//using System.Windows.Forms;


namespace ST_3606766beb904cc0a2268c0bfc4aa530.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            bool bFireAgain = false;
            string msg = "";
            string PoolHeaderStatus = Dts.Variables["_PoolHeaderStatus_Current"].Value.ToString();
            string PoolStatus = Dts.Variables["_PoolStatus_Current"].Value.ToString();
            string pvStatus = Dts.Variables["PoolStatus"].Value.ToString();
            string SourcePoolStatus = Dts.Variables["_SourcePoolStatus"].Value.ToString();
            bool IsSYNCRequired = true;

            msg = string.Format("SSIS PoolStatus = {0}; Pool Header Status = {1}; PoolStatus = {2}", pvStatus, PoolHeaderStatus, PoolStatus);
            Dts.Events.FireInformation(1000, "Set flag IsSYNCRequired", msg, "", 0, ref bFireAgain);

            
            if (string.IsNullOrEmpty(pvStatus))
            {
                if (PoolHeaderStatus.ToUpper() == "OPEN" && PoolStatus.ToUpper() == "OPEN" &&
                    SourcePoolStatus.ToUpper() != "RESERVE" && SourcePoolStatus.ToUpper() != "PUBLISH" && SourcePoolStatus.ToUpper() != "SALE")
                {
                    IsSYNCRequired = false;
                    //Dts.Variables["PoolStatus"].Value = "OPEN";
                }
                else
                {
                    Dts.Variables["_IsSYNCRequired"].Value = true;
                    /*
                    if (string.IsNullOrEmpty(PoolStatus))
                    {
                        Dts.Variables["PoolStatus"].Value = PoolHeaderStatus;
                    }
                    else
                    {
                        Dts.Variables["PoolStatus"].Value = PoolStatus;
                    }
                     */
                }
            }
            Dts.Variables["_IsSYNCRequired"].Value = IsSYNCRequired;

            msg = string.Format("PoolStatus = {0}", Dts.Variables["PoolStatus"].Value.ToString());
            Dts.Events.FireInformation(1000, "Set flag IsSYNCRequired", msg, "", 0, ref bFireAgain);
            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_3606766beb904cc0a2268c0bfc4aa530</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_3606766beb904cc0a2268c0bfc4aa530</msb:DisplayName>
		<msb:ProjectId>{F03A3BD9-81A7-4464-9240-F6ED8750D361}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_3606766beb904cc0a2268c0bfc4aa530.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="st_3606766beb904cc0a2268c0bfc4aa530.csproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_3606766beb904cc0a2268c0bfc4aa530.csproj</RootNamespace>
    <AssemblyName>ST_3606766beb904cc0a2268c0bfc4aa530.csproj</AssemblyName>
    <ProjectGuid>{CDE4F77F-8283-42A2-BC14-F61C90DBF62E}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3606766beb904cc0a2268c0bfc4aa530.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_3606766beb904cc0a2268c0bfc4aa530.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOgqTFYAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAATjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
MgAAAAAAAEgAAAACAAUAUCMAAKwOAAABAAAAAAAAAJgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBwDIAQAAAgAAERYKcoEAAHALAigWAAAKbxcAAApygwAAcG8YAAAK
bxkAAApvGgAACgwCKBYAAApvFwAACnK3AABwbxgAAApvGQAACm8aAAAKDQIoFgAACm8XAAAKct8A
AHBvGAAACm8ZAAAKbxoAAAoTBAIoFgAACm8XAAAKcvUAAHBvGAAACm8ZAAAKbxoAAAoTBRcTBnIZ
AQBwEQQICSgbAAAKCwIoFgAACm8cAAAKIOgDAAByngEAcAdygQAAcBYSAG8dAAAKEQQoHgAACjmC
AAAACG8fAAAKcs4BAHAoIAAACixQCW8fAAAKcs4BAHAoIAAACiw+EQVvHwAACnLYAQBwKCEAAAos
KxEFbx8AAApy6AEAcCghAAAKLBgRBW8fAAAKcvgBAHAoIQAACiwFFhMGKyACKBYAAApvFwAACnIC
AgBwbxgAAAoXjCAAAAFvIgAACgIoFgAACm8XAAAKcgICAHBvGAAAChEGjCAAAAFvIgAACnIiAgBw
AigWAAAKbxcAAApy3wAAcG8YAAAKbxkAAApvGgAACigjAAAKCwIoFgAACm8cAAAKIOgDAAByngEA
cAdygQAAcBYSAG8dAAAKAigWAAAKFm8kAAAKKh4CKCUAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAgEAAAjfgAAdAQAAEgGAAAjU3RyaW5ncwAAAAC8
CgAARAIAACNVUwAADQAAEAAAACNHVUlEAAAAEA0AAJwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkD
AAAA+iUzABYAAAEAAAAgAAAABQAAAAYAAAAJAAAAAQAAACUAAAACAAAADwAAAAIAAAACAAAAAwAA
AAQAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYA1gDPAAoA8gDdAA4AUgEpAQYAbgHPAAYA
hAFzAQYAtQGgAQYAbAJSAgYAlwKFAgYArgKFAgYAywKFAgYA6gKFAgYAAwOFAgYAHAOFAgYANwOF
AgYAUgOFAgYAawOFAgYApAOEAwYAxAOEAwYA9QPiAwYAEgTPAAYAFwTPAAYAOwSFAgoAZwRRBAoA
gARRBAYAlQSEAw4AtwQpAQ4A2QQpARIAMgUSBRIASgUSBQYAbwXPAA4AfQUpAQYA3AXPAAAAAAAB
AAAAAAABAAEAAAAQADkAQwAFAAEAAQAAARAAeQBDAAkAAwAFAAEAEACCAI0ADQAEAAgAAwEAALgA
AAARAAQACgARAJQBEwARAMEBFwARAAsCOQAGBjQCRwBWgDwCSgBWgEQCSgBQIAAAAACDGNEBGwAB
AFggAAAAAJMI1wEfAAEAkSAAAAAAkwjrASQAAQCYIAAAAACTCPcBKQABAKAgAAAAAJYIGwI9AAIA
syAAAAAAhhjRARsAAgCnIAAAAACRGLAEiQACALwgAAAAAIYALwIbAAIAkCIAAAAAhhjRARsAAgAA
AAEATAI5ANEBWABBANEBWABJANEBWABRANEBWABZANEBWABhANEBWABpANEBWABxANEBWAB5ANEB
WACBANEBWACJANEBXQCRANEBGwCZANEBGwAJANEBGwChACkEYgChAEQEaQApANEBbgC5ANEBegDJ
ANEBGwARANEBGwDRANEBGwAZAOsEjQDZADwFkgDhAFMFlwDpAFwFnQAJAGYFoQDxAHYFpQDZAJEF
rQD5AJwFsgDxAKwFvQDxALoFoQDxAMIFwgDxAM4FwgDpAOQFyADxAHYFzQDZAO4FXQAZANEBGwAI
ABQATgAIABgAUwApAJMAgAAuABsAVQEuACMAVQEuAGMAewEuAAsA3QAuABMAJQEuADMAJQEuACsA
VQEuADsAWwEuAEMAVQEuAFsAcgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1ANMAAgABAAMAAwAA
AIQBLwAAAAMCNAAAACcCQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAAAQAAAKgW9G0AAAAA
AACNAAAABAAAAAAAAAAAAAAAAQDGAAAAAAAEAAAAAAAAAAAAAAABAM8AAAAAAAwAAAAAAAAAAAAA
AAoACgEAAAAADAAAAAAAAAAAAAAACgDzBAAAAAAAAAAAAQAAAP0FAAAFAAQAAAAAAAA8TW9kdWxl
PgBTVF8zNjA2NzY2YmViOTA0Y2MwYTIyNjhjMGJmYzRhYTUzMC5jc3Byb2ouZGxsAFJlc291cmNl
cwBTVF8zNjA2NzY2YmViOTA0Y2MwYTIyNjhjMGJmYzRhYTUzMC5jc3Byb2ouUHJvcGVydGllcwBT
ZXR0aW5ncwBTY3JpcHRNYWluAFNUXzM2MDY3NjZiZWI5MDRjYzBhMjI2OGMwYmZjNGFhNTMwLmNz
cHJvagBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVy
ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2Vz
cwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1
cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5
AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3Rv
cgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAVG9TdHJpbmcAU3RyaW5nAEZvcm1hdABFdmVudHNPYmplY3RXcmFwcGVyAGdldF9FdmVu
dHMARmlyZUluZm9ybWF0aW9uAElzTnVsbE9yRW1wdHkAVG9VcHBlcgBvcF9FcXVhbGl0eQBvcF9J
bmVxdWFsaXR5AEJvb2xlYW4Ac2V0X1ZhbHVlAHNldF9UYXNrUmVzdWx0AFNUXzM2MDY3NjZiZWI5
MDRjYzBhMjI2OGMwYmZjNGFhNTMwLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMAAAB/UwBUAF8AMwA2ADAANgA3ADYANgBiAGUAYgA5ADAANABjAGMAMABhADIAMgA2ADgAYwAw
AGIAZgBjADQAYQBhADUAMwAwAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAEAM18AUABvAG8AbABIAGUAYQBkAGUAcgBTAHQAYQB0AHUAcwBf
AEMAdQByAHIAZQBuAHQAACdfAFAAbwBvAGwAUwB0AGEAdAB1AHMAXwBDAHUAcgByAGUAbgB0AAAV
UABvAG8AbABTAHQAYQB0AHUAcwAAI18AUwBvAHUAcgBjAGUAUABvAG8AbABTAHQAYQB0AHUAcwAA
gINTAFMASQBTACAAUABvAG8AbABTAHQAYQB0AHUAcwAgAD0AIAB7ADAAfQA7ACAAUABvAG8AbAAg
AEgAZQBhAGQAZQByACAAUwB0AGEAdAB1AHMAIAA9ACAAewAxAH0AOwAgAFAAbwBvAGwAUwB0AGEA
dAB1AHMAIAA9ACAAewAyAH0AAC9TAGUAdAAgAGYAbABhAGcAIABJAHMAUwBZAE4AQwBSAGUAcQB1
AGkAcgBlAGQAAAlPAFAARQBOAAAPUgBFAFMARQBSAFYARQAAD1AAVQBCAEwASQBTAEgAAAlTAEEA
TABFAAAfXwBJAHMAUwBZAE4AQwBSAGUAcQB1AGkAcgBlAGQAACFQAG8AbwBsAFMAdABhAHQAdQBz
ACAAPQAgAHsAMAB9AAAy3ozuNnkDS4pny1BPGWfAAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAE
AQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAAB
BCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBwAEDg4cHBwEIAASfQogBgEIDg4OCBACBAABAg4FAAIC
Dg4EIAEBHAUAAg4OHAkHBwIODg4ODgJHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQO
FEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU1RfMzYwNjc2NmJlYjkw
NGNjMGEyMjY4YzBiZmM0YWE1MzAuY3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAACQyAAAAAAAAAAAAAD4y
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADwAwAAAAAAAAAAAADwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA9G2oFgAAAQD0bagWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEUAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAALAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADMANgAwADYANwA2ADYAYgBlAGIAOQAwADQAYwBjADAAYQAyADIANgA4AGMAMABiAGYAYwA0AGEA
YQA1ADMAMAAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAA
ADEALgAwAC4ANQA4ADAAMAAuADIAOAAxADQAOAAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4A
YQBtAGUAAABTAFQAXwAzADYAMAA2ADcANgA2AGIAZQBiADkAMAA0AGMAYwAwAGEAMgAyADYAOABj
ADAAYgBmAGMANABhAGEANQAzADAALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAx
ADMAAACIAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMwA2ADAA
NgA3ADYANgBiAGUAYgA5ADAANABjAGMAMABhADIAMgA2ADgAYwAwAGIAZgBjADQAYQBhADUAMwAw
AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwAzADYAMAA2ADcANgA2AGIAZQBiADkAMAA0AGMAYwAwAGEAMgAyADYAOABjADAAYgBm
AGMANABhAGEANQAzADAALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMAAwAC4AMgA4ADEANAA4AAAAAABIAA8AAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMAAwAC4AMgA4ADEANAA4AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAUDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check Current Pool Status.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A661FD79-BA0C-4DAD-A1A9-DEF3EAAF2E3B}"
          DTS:From="Package\Check Current Pool Status\Get Current PoolHeader Status"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Check Current Pool Status\Set flag IsSYNCRequired" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Check Current Pool Status.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B34C7FB0-3C2D-466F-8749-9BDF06800EB8}"
          DTS:From="Package\Check Current Pool Status\Get Current Pool Status"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Check Current Pool Status\Set flag IsSYNCRequired" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Current Job SQL Connection"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{56E92972-0CF5-451F-933E-262ABDDBC0C8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Current Job SQL Connection"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Get Current Job SQL Connection\Get SQL Connections"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get SQL Connections"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select TargetSqlConnection, PoolDBName
from config.PoolHeader
where PoolId = ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0",{C5310289-E272-46CB-A1AC-43D46BD628C8};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Current Job SQL Connection\Get SQL Connections.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OLEDB_PoolConfig]"
                  connectionManagerRefId="Package.ConnectionManagers[OLEDB_PoolConfig]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].Columns[TargetSqlConnection]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[TargetSqlConnection]"
                      length="200"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].Columns[PoolDBName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[PoolDBName]"
                      length="200"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].Columns[PoolDBName]"
                      name="PoolDBName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[TargetSqlConnection]"
                      dataType="wstr"
                      length="200"
                      name="TargetSqlConnection" />
                    <externalMetadataColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[PoolDBName]"
                      dataType="wstr"
                      length="200"
                      name="PoolDBName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[TargetSqlConnection]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection" />
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[PoolDBName]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[PoolDBName]"
                      name="PoolDBName" />
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Current Job SQL Connection\SQL Connections"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset."
              name="SQL Connections">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::_JobSQLConnections</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Current Job SQL Connection\SQL Connections.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Current Job SQL Connection\SQL Connections.Inputs[Recordset Destination Input].Columns[TargetSqlConnection]"
                      cachedDataType="wstr"
                      cachedLength="1000"
                      cachedName="TargetSqlConnection"
                      lineageId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0].Columns[TargetSqlConnection]" />
                    <inputColumn
                      refId="Package\Get Current Job SQL Connection\SQL Connections.Inputs[Recordset Destination Input].Columns[PoolDBName]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="PoolDBName"
                      lineageId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0].Columns[PoolDBName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get Current Job SQL Connection\Tranform Connection String"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="Tranform Connection String"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string _conn;
    private string _sDataSource;
    private string _sInitialCatalog;
    private string[] _aDataSource;
    private string[] _aInitialCatalog;
    private char[] _Semicol = { ';' };
    private char[] _Equal = { '=' };
    private string[] _valuepare;
    private bool bFireAgain = false;
    private bool bExclude = false;
    private string _sMsg;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */

    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        //Server=DAL_SEC;Database=Job_2_20120731_37;Trusted_Connection=True;
        //Data Source=DAL_SEC;Initial Catalog=DAL_SEC_PoolConfig;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;

        if (Row.TargetSqlConnection_IsNull || string.IsNullOrEmpty(Row.TargetSqlConnection))
            return;
        
        _conn = Row.TargetSqlConnection;
        _sDataSource = "";
        _sInitialCatalog = "";

        _valuepare = _conn.Split(_Semicol);
        if (_valuepare.Length > 0)
        {

            _aDataSource = _valuepare[0].Split(_Equal);
            _aInitialCatalog = _valuepare[1].Split(_Equal);

            if (_aDataSource.Length == 2 && _aInitialCatalog.Length == 2)
            {
                _sDataSource = _aDataSource[1];
                _sInitialCatalog = _aInitialCatalog[1];

                _sMsg = string.Format("ConnectionString = {0}, PoolDBName = {1}", _sDataSource, _sInitialCatalog);
                ComponentMetaData.FireInformation(100, "TRansform Connection String", _sMsg, null, 0, ref bFireAgain);

            }
        }
        Row.TargetSqlConnection = string.Format("Data Source={0};Initial Catalog={1};Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;", _sDataSource, _sInitialCatalog);
        try
        {
            ConnectionManagerOleDb cm = new ConnectionManagerOleDb();
            cm.ConnectionString = Row.TargetSqlConnection;
            var conn = cm.AcquireConnection(null);
            cm.ReleaseConnection(conn);
            bExclude = false;
            _sMsg = string.Format("ConnectionString = {0}, PoolDBName = {1}", Row.TargetSqlConnection, Row.PoolDBName);
            //ComponentMetaData.FireInformation(100, "TRansform Connection String", _sMsg, null, 0, ref bFireAgain);
        }
        catch (Exception ex)
        {
            bExclude = true;
            ComponentMetaData.FireInformation(100, "TRansform Connection String", ex.Message, null, 0, ref bFireAgain);
        }

        if (!bExclude)
        {
            Output0Buffer.AddRow();
            Output0Buffer.TargetSqlConnection = Row.TargetSqlConnection;
            Output0Buffer.PoolDBName = Row.PoolDBName;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TargetSqlConnection
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool TargetSqlConnection_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PoolDBName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool PoolDBName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TargetSqlConnection
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TargetSqlConnection_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PoolDBName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool PoolDBName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_b8506716d11c4f8abedaa381cf21592d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_b8506716d11c4f8abedaa381cf21592d.csproj</RootNamespace>
    <AssemblyName>SC_554A645B7B124AD1995ED6BB624BD250</AssemblyName>
    <ProjectGuid>{BF2D84B3-5A43-41F2-8D43-F56328CC035E}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b8506716d11c4f8abedaa381cf21592d.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b8506716d11c4f8abedaa381cf21592d.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_b8506716d11c4f8abedaa381cf21592d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_b8506716d11c4f8abedaa381cf21592d</msb:DisplayName>
		<msb:ProjectId>{2BEF1B63-3C69-4A32-8253-C5A38F3CBC98}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_b8506716d11c4f8abedaa381cf21592d.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Settings.get_Default():SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Sett" +
    "ings")]

namespace SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_554A645B7B124AD1995ED6BB624BD250.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOkqTFYAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAA/jwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKg8AABTAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
PAAAAAAAAEgAAAACAAUAmCUAABAXAAABAAAAAAAAAOAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqJgIW
AygRAAAKKiICFigSAAAKKloDLAgCFigTAAAKKnIBAABwcxQAAAp6UgJ7DgAACgJ7DwAACheUbxAA
AAoqIgIXKBIAAAoqHgIoFQAACioeAigWAAAKKioCAwQFKA0AAAoqJgIWAygRAAAKKloDLAgCFigT
AAAKKnIBAABwcxQAAAp6JgIXAygRAAAKKloDLAgCFygTAAAKKnIBAABwcxQAAAp6HgIoFwAACioe
AigYAAAKKh4CKBYAAAoqfgIoGQAACgICcxoAAAZ9AQAABAICcxsAAAZ9AgAABCoAAAADMAQATwAA
AAAAAAAEcp4AAHAabxoAAAosFQIFAgMoGwAACg4EcwEAAAZvGAAABgVvHAAACiwjAgJ7BAAABBdY
fQQAAAQCewQAAAQXMwwCbxQAAAYCKBUAAAYqBipuAnsDAAAELBICewMAAARvEAAABgIUfQMAAAQq
AAAAEzAFAD0AAAABAAARFgorLgQGlA4Ecq4AAHAoHQAACjMZAgUGmgIEBpQoGwAACg4EcwoAAAZ9
AwAABAYXWAoGAzLOAm8XAAAGKgYqSisHAgNvGQAABgNvCAAABi3xKgYqOgIoHgAACgIDfQUAAAQq
OgIoHgAACgIDfQYAAAQqHgIoIAAACioeAighAAAKKgAAGzAHAL8BAAACAAARA28EAAAGLQ0DbwIA
AAYoIgAACiwBKgIDbwIAAAZ9BwAABAJywAAAcH0IAAAEAnLAAABwfQkAAAQCAnsHAAAEAnsMAAAE
byMAAAp9DgAABAJ7DgAABI5pFj6gAAAAAgJ7DgAABBaaAnsNAAAEbyMAAAp9CgAABAICew4AAAQX
mgJ7DQAABG8jAAAKfQsAAAQCewoAAASOaRgzYwJ7CwAABI5pGDNYAgJ7CgAABBeafQgAAAQCAnsL
AAAEF5p9CQAABAJywgAAcAJ7CAAABAJ7CQAABCgkAAAKfREAAAQCKCUAAAofZHIUAQBwAnsRAAAE
FBYCfA8AAARvJgAACgNyTAEAcAJ7CAAABAJ7CQAABCgkAAAKbwMAAAZzJwAACgoGA28CAAAGbygA
AAoGFG8pAAAKCwYHbyoAAAoCFn0QAAAEAnLCAABwA28CAAAGA28GAAAGKCQAAAp9EQAABN4qDAIX
fRAAAAQCKCUAAAofZHIUAQBwCG8rAAAKFBYCfA8AAARvJgAACt4AAnsQAAAELS0CewMAAARvDwAA
BgJ7AwAABANvAgAABm8LAAAGAnsDAAAEA28GAAAGbw0AAAYqAAEQAAAAABkBRl8BKhwAAAETMAQA
LQAAAAMAABECF40eAAABCgYWHzudBn0MAAAEAheNHgAAAQsHFh89nQd9DQAABAIoEgAABioeAige
AAAKKgAAABMwAgAtAAAABAAAEX4SAAAELSByHQIAcNAIAAACKC0AAApvLgAACnMvAAAKCgaAEgAA
BH4SAAAEKhp+EwAABCoeAoATAAAEKhp+FAAABCoucyUAAAaAFAAABCoeAigyAAAKKgC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAcAACN+AAAgCAAALAoA
ACNTdHJpbmdzAAAAAEwSAACgAgAAI1VTAOwUAAAQAAAAI0dVSUQAAAD8FAAAFAIAACNCbG9iAAAA
AAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAACUAAAAJAAAAFAAAACYAAAAaAAAAMgAAAA8AAAAE
AAAABAAAAAsAAAAOAAAAAQAAAAYAAAABAAAAAAAKAAEAAAAAAAYAAwHiAAYAEAHiAAoAMAEpAQ4A
TAE3ARIAhQHiAAYAlAHiAAoADgT9AwoAPwQqBAoAMgUYBQoAXQVLBQoAdAVLBQoAkQVLBQoAsAVL
BQoAyQVLBQoA4gVLBQoA/QVLBQoAGAZLBQoAMQZLBQoAagZKBgoAigZKBgoA7gYpAQoACAcpAQoA
DwcpAQYAVAfiABYA4we6BxoAbQhFCBoAiQhFCAoA2wgpARoA8QhFCAoACAkpAQoAIAkNCQoAPQkp
AQoAQgkpAQoAZglLBQ4Akgl8CQ4Aqwl8CQoAwAlKBgAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEA
AQABABAAPwAAAAUAAQAKAAEAEABNAAAACQABABIAAQAQAFsAAAANAAUAGgABABAAZwAAAA0ABgAb
AAEAEABxAAAAEAAHABwAAAAQAHwAhgANABIAIAAAARAAvACGABEAFAAkAAYAWwA7AAYAZwA/AAYA
PwBDAAEA1gJHAAEAXwNmAAEAXwNmAAEAbwNwAAEAdQNwAAEAggNwAAEAkwNzAAEAoANzAAEAsQN3
AAEAugN3AAEAwQNzAAEAzAN7AAEA1wN7AAEA4ANwABEAHgR+ABEASwSCABEAjwSgAFAgAAAAAIYY
ogETAAEAWyAAAAAAhgioAR0ABABwIAAAAACGCMABIQAEAHogAAAAAIYI2AEmAAUAgyAAAAAAhgj3
ASoABQCaIAAAAACGCBYCHQAGAK8gAAAAAIYIJQImAAYAuCAAAAAAhgA7AiYABgDAIAAAAACGAEMC
JgAGAMggAAAAAIYYogETAAYA0yAAAAAAhgjAASEACQDdIAAAAACGCPcBKgAKAPQgAAAAAIYImwIh
AAsA/iAAAAAAhgiqAioADAAVIQAAAACGAMACNwANAB0hAAAAAIYAxwI3AA0AJSEAAAAAhgBDAiYA
DQAtIQAAAACGGKIBNwANAFAhAAAAAMYA5QJKAA0AqyEAAAAAxgHyAjcAEQCtIQAAAACBAAADNwAR
AMwhAAAAAMYAFANUABEAFSIAAAAAxgEgAzcAFQAXIgAAAADGATQDYAAVACoiAAAAAMYBSANgABYA
LCIAAAAAhhiiAWoAFwA7IgAAAACGGKIBagAYAEoiAAAAAMYA5gM3ABkAUiIAAAAAxgDxAzcAGQBc
IgAAAADGAEgDYAAZADgkAAAAAIYYogE3ABoAcSQAAAAAgxiiATcAGgB8JAAAAACTCFsEhgAaALUk
AAAAAJMIbwSLABoAvCQAAAAAkwh7BJAAGgDEJAAAAACWCJ8EpAAbANckAAAAAIYYogE3ABsAyyQA
AAAAkRjbCVABGwAAAAEAswQAAAIAugQAAAMAzgQAAAEA2AQAAAEA2AQAAAEAswQAAAIAugQAAAMA
zgQAAAEA2AQAAAEA2AQAAAEA2AQAAAEA2AQAAAEA3gQAAAIA5gQAAAMAswQAAAQAzgQAAAEA8AQA
AAIA+AQAAAMAAgUAAAQAzgQAAAEAswQAAAEACgUAAAEADgUAAAEADgUAAAEACgUAAAEA2ARJAKIB
IQBRAKIBIQBZAKIBIQBhAKIBIQBpAKIBIQBxAKIBIQB5AKIBIQCBAKIBIQCJAKIBIQCRAKIBIQCZ
AKIBrgChAKIBNwAJAKIBEwAJALMEswAJALoEtwApAMwGuwAJANYGwAAJAN8GxgAJAOYGrgCpAKIB
IQAJADsCJgAJAEMCJgAJAMACNwAJAMcCNwARAKIBNwCxACAHywARACcH0gApADgHJgARAEgH2AAZ
AKIBNwDBAKIBNwARAOYDNwARAPEDNwCxAHsH6ACxAIkH7QCxAI8H9AARAPwH+wDJABIIAAHRAKIB
NwDZAKIIIQDZALcICwHZAMkIEAHhAOUIHQD5AKIBNwABAVQJJAEBAW8JLQE5AKIBMwEZAaIBQAEp
AaIBNwAhAKIBNwAuABsAzAEuAGMA8gEuAAsAVAEuABMAnAEuACMAzAEuACsAzAEuADMAnAEuADsA
0gEuAEMAzAEuAFsA6QHjAPsA4wADAWMB4wApAYMBRwFJAYMBRwGBAosB4wDfABUBHQE7AQIAAQAD
AAUACAAJAAkACwAAAE8CLwAAAGMCMwAAAH4CLwAAAIkCMwAAAE8CLwAAAGMCMwAAAH4CLwAAAIkC
MwAAAA4ElgAAAIcEmwAAAKsEqQACAAIAAwABAAMAAwACAAQABQABAAUABQACAAYABwACAAcACQAB
AAsACwABAAwADQABAA0ADwABAA4AEQACACEAEwACACIAFQABACMAFQACACQAFwAEgAAAAQAAAKgW
9G0AAAAAAACoBgAADAAAAAAAAAAAAAAAAQDFAAAAAAAEAAAAAAAAAAAAAAAKACABAAAAAAQAAAAA
AAAAAAAAAAoAKQEAAAAADAAAAAAAAAAAAAAAAQBkAQAAAAAMAAAAAAAAAAAAAAABAJYHAAAAAAwA
AAAAAAAAAAAAAAEAIggAAAAAAAAAAAEAAADiCQAAAAAAAAA8TW9kdWxlPgBTQ181NTRBNjQ1QjdC
MTI0QUQxOTk1RUQ2QkI2MjRCRDI1MC5kbGwASW5wdXQwQnVmZmVyAE91dHB1dDBCdWZmZXIAVXNl
ckNvbXBvbmVudABDb25uZWN0aW9ucwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0Nf
Yjg1MDY3MTZkMTFjNGY4YWJlZGFhMzgxY2YyMTU5MmQuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGlu
Z3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBTY3JpcHRCdWZmZXIAU2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmpl
Y3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0
LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3Rv
cgBnZXRfVGFyZ2V0U3FsQ29ubmVjdGlvbgBzZXRfVGFyZ2V0U3FsQ29ubmVjdGlvbgBnZXRfVGFy
Z2V0U3FsQ29ubmVjdGlvbl9Jc051bGwAc2V0X1RhcmdldFNxbENvbm5lY3Rpb25fSXNOdWxsAGdl
dF9Qb29sREJOYW1lAGdldF9Qb29sREJOYW1lX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AFRh
cmdldFNxbENvbm5lY3Rpb24AVGFyZ2V0U3FsQ29ubmVjdGlvbl9Jc051bGwAUG9vbERCTmFtZQBQ
b29sREJOYW1lX0lzTnVsbABzZXRfUG9vbERCTmFtZQBzZXRfUG9vbERCTmFtZV9Jc051bGwAQWRk
Um93AFNldEVuZE9mUm93c2V0AElucHV0c0ZpbmlzaGVkAFByb2Nlc3NJbnB1dABGaW5pc2hPdXRw
dXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50
AF9jb25uAF9zRGF0YVNvdXJjZQBfc0luaXRpYWxDYXRhbG9nAF9hRGF0YVNvdXJjZQBfYUluaXRp
YWxDYXRhbG9nAF9TZW1pY29sAF9FcXVhbABfdmFsdWVwYXJlAGJGaXJlQWdhaW4AYkV4Y2x1ZGUA
X3NNc2cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBCdWZmZXJDb2x1
bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFtZQBPdXRwdXRzAE91dHB1
dElEcwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFz
c2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzU1NEE2NDVCN0IxMjRBRDE5OTVFRDZCQjYy
NEJEMjUwAEdldFN0cmluZwBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVz
AGdldF9FbmRPZlJvd3NldABHZXRPdXRwdXRJRABTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBJc051bGxPckVtcHR5AFNwbGl0AEZvcm1hdABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVy
AElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEARmlyZUluZm9y
bWF0aW9uAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZS5XcmFwcGVyAENvbm5lY3Rpb25NYW5hZ2VyT2xlRGJDbGFzcwBJRFRT
Q29ubmVjdGlvbk1hbmFnZXIxMDAAc2V0X0Nvbm5lY3Rpb25TdHJpbmcAQWNxdWlyZUNvbm5lY3Rp
b24AUmVsZWFzZUNvbm5lY3Rpb24ARXhjZXB0aW9uAGdldF9NZXNzYWdlAENvbm5lY3Rpb25NYW5h
Z2VyT2xlRGIAQ2hhcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdl
dF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
Q19iODUwNjcxNmQxMWM0ZjhhYmVkYWEzODFjZjIxNTkyZC5jc3Byb2ouUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4A
bgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABh
ACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQA
LgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADAAAAEAUUMAbwBuAG4AZQBjAHQAaQBv
AG4AUwB0AHIAaQBuAGcAIAA9ACAAewAwAH0ALAAgAFAAbwBvAGwARABCAE4AYQBtAGUAIAA9ACAA
ewAxAH0AADdUAFIAYQBuAHMAZgBvAHIAbQAgAEMAbwBuAG4AZQBjAHQAaQBvAG4AIABTAHQAcgBp
AG4AZwAAgM9EAGEAdABhACAAUwBvAHUAcgBjAGUAPQB7ADAAfQA7AEkAbgBpAHQAaQBhAGwAIABD
AGEAdABhAGwAbwBnAD0AewAxAH0AOwBQAHIAbwB2AGkAZABlAHIAPQBTAFEATABOAEMATABJADEA
MAAuADEAOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AUwBTAFAASQA7
AEEAdQB0AG8AIABUAHIAYQBuAHMAbABhAHQAZQA9AEYAYQBsAHMAZQA7AAB/UwBDAF8AYgA4ADUA
MAA2ADcAMQA2AGQAMQAxAGMANABmADgAYQBiAGUAZABhAGEAMwA4ADEAYwBmADIAMQA1ADkAMgBk
AC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAACpUolSpXtBMg/eAfC2CQ+4ACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgSGQMgAA4EIAEB
DgMgAAIEIAEBAgMoAA4DKAACAyAAAQMGEhQDBhIYAwYSDAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIV
EhkFIAEBEggDBhIJBSABARIJAgYOAwYdDgMGHQMCBgIDBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEE
CAASHQQIABIhAwYSJAQAABIkBAgAEiQEIAEBCAMGEhUDBh0IBCABDggFIAIBCBwEIAECCAYgAgIO
EV0FIAEdCAgGAAIIEhkOAwcBCAQBAAAABAABAg4GIAEdDh0DBgADDg4cHAQgABJlCiAGAQgODg4I
EAIEIAEcHAQgAQEcBwcDEnUcEnEGBwIdAx0DCAABEoCBEYCFBSAAEoCJByACAQ4SgIkEBwESHQYg
AQERgJEIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNDX2I4NTA2NzE2ZDExYzRmOGFi
ZWRhYTM4MWNmMjE1OTJkLmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEyAAAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAA0DwAAAAAAAAAAAAA7jwAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOA8AAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAPRtqBYAAAEA9G2oFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBiADgA
NQAwADYANwAxADYAZAAxADEAYwA0AGYAOABhAGIAZQBkAGEAYQAzADgAMQBjAGYAMgAxADUAOQAy
AGQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAOAAwADAALgAyADgAMQA0ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8ANQA1ADQAQQA2ADQANQBCADcAQgAxADIANABBAEQAMQA5ADkANQBFAEQANgBCAEIA
NgAyADQAQgBEADIANQAwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADIAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQA1ADQAQQA2ADQANQBCADcAQgAxADIANABB
AEQAMQA5ADkANQBFAEQANgBCAEIANgAyADQAQgBEADIANQAwAC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGIAOAA1ADAANgA3ADEANgBkADEAMQBjADQAZgA4
AGEAYgBlAGQAYQBhADMAOAAxAGMAZgAyADEANQA5ADIAZAAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAwADAALgAyADgAMQA0
ADgAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
OAAwADAALgAyADgAMQA0ADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_554a645b7b124ad1995ed6bb624bd250</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">3cfc77107a64e8ad9c4762b9c0127f03</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Current Job SQL Connection\Tranform Connection String.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Current Job SQL Connection\Tranform Connection String.Inputs[Input 0].Columns[TargetSqlConnection]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="TargetSqlConnection"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Get Current Job SQL Connection\Tranform Connection String.Inputs[Input 0].Columns[PoolDBName]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="PoolDBName"
                      lineageId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output].Columns[PoolDBName]"
                      name="PoolDBName" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0].Columns[TargetSqlConnection]"
                      dataType="wstr"
                      length="1000"
                      lineageId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection" />
                    <outputColumn
                      refId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0].Columns[PoolDBName]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0].Columns[PoolDBName]"
                      name="PoolDBName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Current Job SQL Connection.Paths[OLE DB Source Output]"
              endId="Package\Get Current Job SQL Connection\Tranform Connection String.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Get Current Job SQL Connection\Get SQL Connections.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get Current Job SQL Connection.Paths[Output 0]"
              endId="Package\Get Current Job SQL Connection\SQL Connections.Inputs[Recordset Destination Input]"
              name="Output 0"
              startId="Package\Get Current Job SQL Connection\Tranform Connection String.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Jobs SQL Connections"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{57ED637E-BDE0-46DC-867E-453DE4BA4E4E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Jobs SQL Connections"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Get Jobs SQL Connections\Get SQL Connections"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get SQL Connections"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select TargetSqlConnection, PoolDBName
from config.PoolHeader
where PoolId &gt; 8 and ((PoolId = ? and ?= 'REMOVED') or (ParentPoolId = 0 and ? not in ( 'REMOVED', 'ARCHIVED')))</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"Parameter0",{C5310289-E272-46CB-A1AC-43D46BD628C8};"Parameter1",{3CD9333C-E925-4DF4-819D-4D81932D7540};"Parameter2",{3CD9333C-E925-4DF4-819D-4D81932D7540};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Jobs SQL Connections\Get SQL Connections.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[OLEDB_PoolConfig]"
                  connectionManagerRefId="Package.ConnectionManagers[OLEDB_PoolConfig]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].Columns[TargetSqlConnection]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[TargetSqlConnection]"
                      length="200"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].Columns[PoolDBName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[PoolDBName]"
                      length="200"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].Columns[PoolDBName]"
                      name="PoolDBName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[TargetSqlConnection]"
                      dataType="wstr"
                      length="200"
                      name="TargetSqlConnection" />
                    <externalMetadataColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].ExternalColumns[PoolDBName]"
                      dataType="wstr"
                      length="200"
                      name="PoolDBName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[TargetSqlConnection]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection" />
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[PoolDBName]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[PoolDBName]"
                      name="PoolDBName" />
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Jobs SQL Connections\SQL Connections"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset."
              name="SQL Connections">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::_JobSQLConnections</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Jobs SQL Connections\SQL Connections.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Jobs SQL Connections\SQL Connections.Inputs[Recordset Destination Input].Columns[TargetSqlConnection]"
                      cachedDataType="wstr"
                      cachedLength="1000"
                      cachedName="TargetSqlConnection"
                      lineageId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0].Columns[TargetSqlConnection]" />
                    <inputColumn
                      refId="Package\Get Jobs SQL Connections\SQL Connections.Inputs[Recordset Destination Input].Columns[PoolDBName]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="PoolDBName"
                      lineageId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0].Columns[PoolDBName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get Jobs SQL Connections\Tranform Connection String"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="Tranform Connection String"
              version="9">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string _conn;
    private string _sDataSource;
    private string _sInitialCatalog;
    private string[] _aDataSource;
    private string[] _aInitialCatalog;
    private char[] _Semicol = { ';' };
    private char[] _Equal = { '=' };
    private string[] _valuepare;
    private bool bFireAgain = false;
    private bool bExclude = false;
    private string _sMsg;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */

    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        //Server=DAL_SEC;Database=Job_2_20120731_37;Trusted_Connection=True;
        //Data Source=DAL_SEC;Initial Catalog=DAL_SEC_PoolConfig;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;

        if (Row.TargetSqlConnection_IsNull || string.IsNullOrEmpty(Row.TargetSqlConnection))
            return;
        
        _conn = Row.TargetSqlConnection;
        _sDataSource = "";
        _sInitialCatalog = "";

        _valuepare = _conn.Split(_Semicol);
        if (_valuepare.Length > 0)
        {

            _aDataSource = _valuepare[0].Split(_Equal);
            _aInitialCatalog = _valuepare[1].Split(_Equal);

            if (_aDataSource.Length == 2 && _aInitialCatalog.Length == 2)
            {
                _sDataSource = _aDataSource[1];
                _sInitialCatalog = _aInitialCatalog[1];

                _sMsg = string.Format("ConnectionString = {0}, PoolDBName = {1}", _sDataSource, _sInitialCatalog);
                ComponentMetaData.FireInformation(100, "TRansform Connection String", _sMsg, null, 0, ref bFireAgain);

            }
        }
        Row.TargetSqlConnection = string.Format("Data Source={0};Initial Catalog={1};Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;", _sDataSource, _sInitialCatalog);
        try
        {
            ConnectionManagerOleDb cm = new ConnectionManagerOleDb();
            cm.ConnectionString = Row.TargetSqlConnection;
            var conn = cm.AcquireConnection(null);
            cm.ReleaseConnection(conn);
            bExclude = false;
            _sMsg = string.Format("ConnectionString = {0}, PoolDBName = {1}", Row.TargetSqlConnection, Row.PoolDBName);
            //ComponentMetaData.FireInformation(100, "TRansform Connection String", _sMsg, null, 0, ref bFireAgain);
        }
        catch (Exception ex)
        {
            bExclude = true;
            ComponentMetaData.FireInformation(100, "TRansform Connection String", ex.Message, null, 0, ref bFireAgain);
        }

        if (!bExclude)
        {
            Output0Buffer.AddRow();
            Output0Buffer.TargetSqlConnection = Row.TargetSqlConnection;
            Output0Buffer.PoolDBName = Row.PoolDBName;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TargetSqlConnection
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool TargetSqlConnection_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PoolDBName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool PoolDBName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TargetSqlConnection
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TargetSqlConnection_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PoolDBName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool PoolDBName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_b8506716d11c4f8abedaa381cf21592d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_b8506716d11c4f8abedaa381cf21592d.csproj</RootNamespace>
    <AssemblyName>SC_1B78953822B7425BB0699B4A33A31014</AssemblyName>
    <ProjectGuid>{BF2D84B3-5A43-41F2-8D43-F56328CC035E}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b8506716d11c4f8abedaa381cf21592d.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b8506716d11c4f8abedaa381cf21592d.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_b8506716d11c4f8abedaa381cf21592d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_b8506716d11c4f8abedaa381cf21592d</msb:DisplayName>
		<msb:ProjectId>{78537029-D102-4E2A-B472-45F29CA9D37D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_b8506716d11c4f8abedaa381cf21592d.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Settings.get_Default():SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Sett" +
    "ings")]

namespace SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b8506716d11c4f8abedaa381cf21592d.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_1B78953822B7425BB0699B4A33A31014.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOgqTFYAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAA/jwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKg8AABTAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAABB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADg
PAAAAAAAAEgAAAACAAUAmCUAABAXAAABAAAAAAAAAOAkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqJgIW
AygRAAAKKiICFigSAAAKKloDLAgCFigTAAAKKnIBAABwcxQAAAp6UgJ7DgAACgJ7DwAACheUbxAA
AAoqIgIXKBIAAAoqHgIoFQAACioeAigWAAAKKioCAwQFKA0AAAoqJgIWAygRAAAKKloDLAgCFigT
AAAKKnIBAABwcxQAAAp6JgIXAygRAAAKKloDLAgCFygTAAAKKnIBAABwcxQAAAp6HgIoFwAACioe
AigYAAAKKh4CKBYAAAoqfgIoGQAACgICcxoAAAZ9AQAABAICcxsAAAZ9AgAABCoAAAADMAQATwAA
AAAAAAAEcp4AAHAabxoAAAosFQIFAgMoGwAACg4EcwEAAAZvGAAABgVvHAAACiwjAgJ7BAAABBdY
fQQAAAQCewQAAAQXMwwCbxQAAAYCKBUAAAYqBipuAnsDAAAELBICewMAAARvEAAABgIUfQMAAAQq
AAAAEzAFAD0AAAABAAARFgorLgQGlA4Ecq4AAHAoHQAACjMZAgUGmgIEBpQoGwAACg4EcwoAAAZ9
AwAABAYXWAoGAzLOAm8XAAAGKgYqSisHAgNvGQAABgNvCAAABi3xKgYqOgIoHgAACgIDfQUAAAQq
OgIoHgAACgIDfQYAAAQqHgIoIAAACioeAighAAAKKgAAGzAHAL8BAAACAAARA28EAAAGLQ0DbwIA
AAYoIgAACiwBKgIDbwIAAAZ9BwAABAJywAAAcH0IAAAEAnLAAABwfQkAAAQCAnsHAAAEAnsMAAAE
byMAAAp9DgAABAJ7DgAABI5pFj6gAAAAAgJ7DgAABBaaAnsNAAAEbyMAAAp9CgAABAICew4AAAQX
mgJ7DQAABG8jAAAKfQsAAAQCewoAAASOaRgzYwJ7CwAABI5pGDNYAgJ7CgAABBeafQgAAAQCAnsL
AAAEF5p9CQAABAJywgAAcAJ7CAAABAJ7CQAABCgkAAAKfREAAAQCKCUAAAofZHIUAQBwAnsRAAAE
FBYCfA8AAARvJgAACgNyTAEAcAJ7CAAABAJ7CQAABCgkAAAKbwMAAAZzJwAACgoGA28CAAAGbygA
AAoGFG8pAAAKCwYHbyoAAAoCFn0QAAAEAnLCAABwA28CAAAGA28GAAAGKCQAAAp9EQAABN4qDAIX
fRAAAAQCKCUAAAofZHIUAQBwCG8rAAAKFBYCfA8AAARvJgAACt4AAnsQAAAELS0CewMAAARvDwAA
BgJ7AwAABANvAgAABm8LAAAGAnsDAAAEA28GAAAGbw0AAAYqAAEQAAAAABkBRl8BKhwAAAETMAQA
LQAAAAMAABECF40eAAABCgYWHzudBn0MAAAEAheNHgAAAQsHFh89nQd9DQAABAIoEgAABioeAige
AAAKKgAAABMwAgAtAAAABAAAEX4SAAAELSByHQIAcNAIAAACKC0AAApvLgAACnMvAAAKCgaAEgAA
BH4SAAAEKhp+EwAABCoeAoATAAAEKhp+FAAABCoucyUAAAaAFAAABCoeAigyAAAKKgC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAcAACN+AAAgCAAALAoA
ACNTdHJpbmdzAAAAAEwSAACgAgAAI1VTAOwUAAAQAAAAI0dVSUQAAAD8FAAAFAIAACNCbG9iAAAA
AAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAACUAAAAJAAAAFAAAACYAAAAaAAAAMgAAAA8AAAAE
AAAABAAAAAsAAAAOAAAAAQAAAAYAAAABAAAAAAAKAAEAAAAAAAYAAwHiAAYAEAHiAAoAMAEpAQ4A
TAE3ARIAhQHiAAYAlAHiAAoADgT9AwoAPwQqBAoAMgUYBQoAXQVLBQoAdAVLBQoAkQVLBQoAsAVL
BQoAyQVLBQoA4gVLBQoA/QVLBQoAGAZLBQoAMQZLBQoAagZKBgoAigZKBgoA7gYpAQoACAcpAQoA
DwcpAQYAVAfiABYA4we6BxoAbQhFCBoAiQhFCAoA2wgpARoA8QhFCAoACAkpAQoAIAkNCQoAPQkp
AQoAQgkpAQoAZglLBQ4Akgl8CQ4Aqwl8CQoAwAlKBgAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEA
AQABABAAPwAAAAUAAQAKAAEAEABNAAAACQABABIAAQAQAFsAAAANAAUAGgABABAAZwAAAA0ABgAb
AAEAEABxAAAAEAAHABwAAAAQAHwAhgANABIAIAAAARAAvACGABEAFAAkAAYAWwA7AAYAZwA/AAYA
PwBDAAEA1gJHAAEAXwNmAAEAXwNmAAEAbwNwAAEAdQNwAAEAggNwAAEAkwNzAAEAoANzAAEAsQN3
AAEAugN3AAEAwQNzAAEAzAN7AAEA1wN7AAEA4ANwABEAHgR+ABEASwSCABEAjwSgAFAgAAAAAIYY
ogETAAEAWyAAAAAAhgioAR0ABABwIAAAAACGCMABIQAEAHogAAAAAIYI2AEmAAUAgyAAAAAAhgj3
ASoABQCaIAAAAACGCBYCHQAGAK8gAAAAAIYIJQImAAYAuCAAAAAAhgA7AiYABgDAIAAAAACGAEMC
JgAGAMggAAAAAIYYogETAAYA0yAAAAAAhgjAASEACQDdIAAAAACGCPcBKgAKAPQgAAAAAIYImwIh
AAsA/iAAAAAAhgiqAioADAAVIQAAAACGAMACNwANAB0hAAAAAIYAxwI3AA0AJSEAAAAAhgBDAiYA
DQAtIQAAAACGGKIBNwANAFAhAAAAAMYA5QJKAA0AqyEAAAAAxgHyAjcAEQCtIQAAAACBAAADNwAR
AMwhAAAAAMYAFANUABEAFSIAAAAAxgEgAzcAFQAXIgAAAADGATQDYAAVACoiAAAAAMYBSANgABYA
LCIAAAAAhhiiAWoAFwA7IgAAAACGGKIBagAYAEoiAAAAAMYA5gM3ABkAUiIAAAAAxgDxAzcAGQBc
IgAAAADGAEgDYAAZADgkAAAAAIYYogE3ABoAcSQAAAAAgxiiATcAGgB8JAAAAACTCFsEhgAaALUk
AAAAAJMIbwSLABoAvCQAAAAAkwh7BJAAGgDEJAAAAACWCJ8EpAAbANckAAAAAIYYogE3ABsAyyQA
AAAAkRjbCVABGwAAAAEAswQAAAIAugQAAAMAzgQAAAEA2AQAAAEA2AQAAAEAswQAAAIAugQAAAMA
zgQAAAEA2AQAAAEA2AQAAAEA2AQAAAEA2AQAAAEA3gQAAAIA5gQAAAMAswQAAAQAzgQAAAEA8AQA
AAIA+AQAAAMAAgUAAAQAzgQAAAEAswQAAAEACgUAAAEADgUAAAEADgUAAAEACgUAAAEA2ARJAKIB
IQBRAKIBIQBZAKIBIQBhAKIBIQBpAKIBIQBxAKIBIQB5AKIBIQCBAKIBIQCJAKIBIQCRAKIBIQCZ
AKIBrgChAKIBNwAJAKIBEwAJALMEswAJALoEtwApAMwGuwAJANYGwAAJAN8GxgAJAOYGrgCpAKIB
IQAJADsCJgAJAEMCJgAJAMACNwAJAMcCNwARAKIBNwCxACAHywARACcH0gApADgHJgARAEgH2AAZ
AKIBNwDBAKIBNwARAOYDNwARAPEDNwCxAHsH6ACxAIkH7QCxAI8H9AARAPwH+wDJABIIAAHRAKIB
NwDZAKIIIQDZALcICwHZAMkIEAHhAOUIHQD5AKIBNwABAVQJJAEBAW8JLQE5AKIBMwEZAaIBQAEp
AaIBNwAhAKIBNwAuABsAzAEuAGMA8gEuAAsAVAEuABMAnAEuACMAzAEuACsAzAEuADMAnAEuADsA
0gEuAEMAzAEuAFsA6QHjAPsA4wADAWMB4wApAYMBRwFJAYMBRwGBAosB4wDfABUBHQE7AQIAAQAD
AAUACAAJAAkACwAAAE8CLwAAAGMCMwAAAH4CLwAAAIkCMwAAAE8CLwAAAGMCMwAAAH4CLwAAAIkC
MwAAAA4ElgAAAIcEmwAAAKsEqQACAAIAAwABAAMAAwACAAQABQABAAUABQACAAYABwACAAcACQAB
AAsACwABAAwADQABAA0ADwABAA4AEQACACEAEwACACIAFQABACMAFQACACQAFwAEgAAAAQAAAKgW
9G0AAAAAAACoBgAADAAAAAAAAAAAAAAAAQDFAAAAAAAEAAAAAAAAAAAAAAAKACABAAAAAAQAAAAA
AAAAAAAAAAoAKQEAAAAADAAAAAAAAAAAAAAAAQBkAQAAAAAMAAAAAAAAAAAAAAABAJYHAAAAAAwA
AAAAAAAAAAAAAAEAIggAAAAAAAAAAAEAAADiCQAAAAAAAAA8TW9kdWxlPgBTQ18xQjc4OTUzODIy
Qjc0MjVCQjA2OTlCNEEzM0EzMTAxNC5kbGwASW5wdXQwQnVmZmVyAE91dHB1dDBCdWZmZXIAVXNl
ckNvbXBvbmVudABDb25uZWN0aW9ucwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0Nf
Yjg1MDY3MTZkMTFjNGY4YWJlZGFhMzgxY2YyMTU5MmQuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGlu
Z3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBTY3JpcHRCdWZmZXIAU2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmpl
Y3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0
LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3Rv
cgBnZXRfVGFyZ2V0U3FsQ29ubmVjdGlvbgBzZXRfVGFyZ2V0U3FsQ29ubmVjdGlvbgBnZXRfVGFy
Z2V0U3FsQ29ubmVjdGlvbl9Jc051bGwAc2V0X1RhcmdldFNxbENvbm5lY3Rpb25fSXNOdWxsAGdl
dF9Qb29sREJOYW1lAGdldF9Qb29sREJOYW1lX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AFRh
cmdldFNxbENvbm5lY3Rpb24AVGFyZ2V0U3FsQ29ubmVjdGlvbl9Jc051bGwAUG9vbERCTmFtZQBQ
b29sREJOYW1lX0lzTnVsbABzZXRfUG9vbERCTmFtZQBzZXRfUG9vbERCTmFtZV9Jc051bGwAQWRk
Um93AFNldEVuZE9mUm93c2V0AElucHV0c0ZpbmlzaGVkAFByb2Nlc3NJbnB1dABGaW5pc2hPdXRw
dXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50
AF9jb25uAF9zRGF0YVNvdXJjZQBfc0luaXRpYWxDYXRhbG9nAF9hRGF0YVNvdXJjZQBfYUluaXRp
YWxDYXRhbG9nAF9TZW1pY29sAF9FcXVhbABfdmFsdWVwYXJlAGJGaXJlQWdhaW4AYkV4Y2x1ZGUA
X3NNc2cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBCdWZmZXJDb2x1
bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFtZQBPdXRwdXRzAE91dHB1
dElEcwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFz
c2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzFCNzg5NTM4MjJCNzQyNUJCMDY5OUI0QTMz
QTMxMDE0AEdldFN0cmluZwBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVz
AGdldF9FbmRPZlJvd3NldABHZXRPdXRwdXRJRABTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBJc051bGxPckVtcHR5AFNwbGl0AEZvcm1hdABNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVy
AElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEARmlyZUluZm9y
bWF0aW9uAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZS5XcmFwcGVyAENvbm5lY3Rpb25NYW5hZ2VyT2xlRGJDbGFzcwBJRFRT
Q29ubmVjdGlvbk1hbmFnZXIxMDAAc2V0X0Nvbm5lY3Rpb25TdHJpbmcAQWNxdWlyZUNvbm5lY3Rp
b24AUmVsZWFzZUNvbm5lY3Rpb24ARXhjZXB0aW9uAGdldF9NZXNzYWdlAENvbm5lY3Rpb25NYW5h
Z2VyT2xlRGIAQ2hhcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdl
dF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
Q19iODUwNjcxNmQxMWM0ZjhhYmVkYWEzODFjZjIxNTkyZC5jc3Byb2ouUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4A
bgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABh
ACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQA
LgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADAAAAEAUUMAbwBuAG4AZQBjAHQAaQBv
AG4AUwB0AHIAaQBuAGcAIAA9ACAAewAwAH0ALAAgAFAAbwBvAGwARABCAE4AYQBtAGUAIAA9ACAA
ewAxAH0AADdUAFIAYQBuAHMAZgBvAHIAbQAgAEMAbwBuAG4AZQBjAHQAaQBvAG4AIABTAHQAcgBp
AG4AZwAAgM9EAGEAdABhACAAUwBvAHUAcgBjAGUAPQB7ADAAfQA7AEkAbgBpAHQAaQBhAGwAIABD
AGEAdABhAGwAbwBnAD0AewAxAH0AOwBQAHIAbwB2AGkAZABlAHIAPQBTAFEATABOAEMATABJADEA
MAAuADEAOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AUwBTAFAASQA7
AEEAdQB0AG8AIABUAHIAYQBuAHMAbABhAHQAZQA9AEYAYQBsAHMAZQA7AAB/UwBDAF8AYgA4ADUA
MAA2ADcAMQA2AGQAMQAxAGMANABmADgAYQBiAGUAZABhAGEAMwA4ADEAYwBmADIAMQA1ADkAMgBk
AC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAAG/YfjjzCU1NgbB8mRdeRp8ACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgSGQMgAA4EIAEB
DgMgAAIEIAEBAgMoAA4DKAACAyAAAQMGEhQDBhIYAwYSDAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIV
EhkFIAEBEggDBhIJBSABARIJAgYOAwYdDgMGHQMCBgIDBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEE
CAASHQQIABIhAwYSJAQAABIkBAgAEiQEIAEBCAMGEhUDBh0IBCABDggFIAIBCBwEIAECCAYgAgIO
EV0FIAEdCAgGAAIIEhkOAwcBCAQBAAAABAABAg4GIAEdDh0DBgADDg4cHAQgABJlCiAGAQgODg4I
EAIEIAEcHAQgAQEcBwcDEnUcEnEGBwIdAx0DCAABEoCBEYCFBSAAEoCJByACAQ4SgIkEBwESHQYg
AQERgJEIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNDX2I4NTA2NzE2ZDExYzRmOGFi
ZWRhYTM4MWNmMjE1OTJkLmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEyAAAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAA0DwAAAAAAAAAAAAA7jwAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOA8AAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAPRtqBYAAAEA9G2oFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBiADgA
NQAwADYANwAxADYAZAAxADEAYwA0AGYAOABhAGIAZQBkAGEAYQAzADgAMQBjAGYAMgAxADUAOQAy
AGQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAOAAwADAALgAyADgAMQA0ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8AMQBCADcAOAA5ADUAMwA4ADIAMgBCADcANAAyADUAQgBCADAANgA5ADkAQgA0AEEA
MwAzAEEAMwAxADAAMQA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADIAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMQBCADcAOAA5ADUAMwA4ADIAMgBCADcANAAy
ADUAQgBCADAANgA5ADkAQgA0AEEAMwAzAEEAMwAxADAAMQA0AC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGIAOAA1ADAANgA3ADEANgBkADEAMQBjADQAZgA4
AGEAYgBlAGQAYQBhADMAOAAxAGMAZgAyADEANQA5ADIAZAAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAwADAALgAyADgAMQA0
ADgAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
OAAwADAALgAyADgAMQA0ADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAAA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_1b78953822b7425bb0699b4a33a31014</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">3cfc77107a64e8ad9c4762b9c0127f03</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Jobs SQL Connections\Tranform Connection String.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Jobs SQL Connections\Tranform Connection String.Inputs[Input 0].Columns[TargetSqlConnection]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="TargetSqlConnection"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Get Jobs SQL Connections\Tranform Connection String.Inputs[Input 0].Columns[PoolDBName]"
                      cachedDataType="wstr"
                      cachedLength="200"
                      cachedName="PoolDBName"
                      lineageId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output].Columns[PoolDBName]"
                      name="PoolDBName" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0].Columns[TargetSqlConnection]"
                      dataType="wstr"
                      length="1000"
                      lineageId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0].Columns[TargetSqlConnection]"
                      name="TargetSqlConnection" />
                    <outputColumn
                      refId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0].Columns[PoolDBName]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0].Columns[PoolDBName]"
                      name="PoolDBName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Jobs SQL Connections.Paths[OLE DB Source Output]"
              endId="Package\Get Jobs SQL Connections\Tranform Connection String.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Get Jobs SQL Connections\Get SQL Connections.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get Jobs SQL Connections.Paths[Output 0]"
              endId="Package\Get Jobs SQL Connections\SQL Connections.Inputs[Recordset Destination Input]"
              name="Output 0"
              startId="Package\Get Jobs SQL Connections\Tranform Connection String.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Package Initialization"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{15FFC45E-CC9E-43A6-AF7F-F9452E604442}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Package Initialization"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{4883D01D-E593-434F-A941-A81E0A678F42}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a4b9aad7b5414238b9eb4a34b9941b86"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::LogPath,User::OLEDBConnString_PoolConfig,User::OLEDBConnString_TargetPool,User::PoolStatus,User::TargetPoolId">
          <ProjectItem
            Name="st_a4b9aad7b5414238b9eb4a34b9941b86.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj</RootNamespace>
    <AssemblyName>ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj</AssemblyName>
    <ProjectGuid>{3AB0A305-8C42-47D1-B9CF-5C49E0ACFF77}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties.Settings.get_Default():ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties.Sett" +
    "ings")]

namespace ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
//using System.Windows.Forms;
using System.IO;

namespace ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            string sMsg = null;
            string sLogPath = Dts.Variables["LogPath"].Value.ToString();
            bool bfireAgain = false;

            if (!Directory.Exists(sLogPath))
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                sMsg = string.Format("Package Init: Log Path {0} does not exist", sLogPath);
                throw new Exception(sMsg);
            }
            sMsg = string.Format("Package input parameters: {0}; {1}; {2}; {3}", Dts.Variables["TargetPoolId"].Value.ToString(), Dts.Variables["PoolStatus"].Value, Dts.Variables["OLEDBConnString_PoolConfig"].Value, Dts.Variables["OLEDBConnString_TargetPool"].Value);
            Dts.Events.FireInformation(1000, "Package Initialisation", sMsg, null, 0, ref bfireAgain);

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_a4b9aad7b5414238b9eb4a34b9941b86</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_a4b9aad7b5414238b9eb4a34b9941b86</msb:DisplayName>
		<msb:ProjectId>{9DD40AF9-7B1C-45E7-97EB-EF92E9A5AFF5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_a4b9aad7b5414238b9eb4a34b9941b86.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a4b9aad7b5414238b9eb4a34b9941b86.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOgqTFYAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAHjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANAwAABLAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MQAAAAAAAEgAAAACAAUAkCIAAEAOAAABAAAAAAAAANghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBwADAQAAAgAAERQKAigWAAAKbxcAAApygQAAcG8YAAAKbxkAAApv
GgAACgsWDAcoGwAACi0fAigWAAAKF28cAAAKcpEAAHAHKB0AAAoKBnMeAAAKenLlAABwGo0BAAAB
DQkWAigWAAAKbxcAAApyPwEAcG8YAAAKbxkAAApvGgAACqIJFwIoFgAACm8XAAAKclkBAHBvGAAA
Cm8ZAAAKogkYAigWAAAKbxcAAApybwEAcG8YAAAKbxkAAAqiCRkCKBYAAApvFwAACnKlAQBwbxgA
AApvGQAACqIJKB8AAAoKAigWAAAKbyAAAAog6AMAAHLbAQBwBhQWEgJvIQAACgIoFgAAChZvHAAA
CioeAigiAAAKKgAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAAPwDAAAjfgAAaAQAACwGAAAjU3RyaW5ncwAAAACUCgAADAIAACNVUwCgDAAAEAAAACNH
VUlEAAAAsAwAAJABAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUzABYAAAEAAAAhAAAABQAA
AAYAAAAJAAAAAQAAACIAAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAA
AAAKAAEAAAAAAAYA1gDPAAoA8gDdAA4AUgEpAQYAbgHPAAYAhAFzAQYAtQGgAQYAbAJSAgYAlwKF
AgYArgKFAgYAywKFAgYA6gKFAgYAAwOFAgYAHAOFAgYANwOFAgYAUgOFAgYAawOFAgYApAOEAwYA
xAOEAwYA9QPiAwYAEgTPAAYAFwTPAAYAOwSFAgoAZwRRBAoAgARRBAYAlQSEAw4AtwQpAQ4A2QQp
ARIAMgUSBRIASgUSBQYAeQVvBQYAmQXPAAYApwXPAA4AsQUpAQAAAAABAAAAAAABAAEAAAAQADkA
QwAFAAEAAQAAARAAeQBDAAkAAwAFAAEAEACCAI0ADQAEAAgAAwEAALgAAAARAAQACgARAJQBEwAR
AMEBFwARAAsCOQAGBjQCRwBWgDwCSgBWgEQCSgBQIAAAAACDGNEBGwABAFggAAAAAJMI1wEfAAEA
kSAAAAAAkwjrASQAAQCYIAAAAACTCPcBKQABAKAgAAAAAJYIGwI9AAIAsyAAAAAAhhjRARsAAgCn
IAAAAACRGLAEiQACALwgAAAAAIYALwIbAAIAyyEAAAAAhhjRARsAAgAAAAEATAI5ANEBWABBANEB
WABJANEBWABRANEBWABZANEBWABhANEBWABpANEBWABxANEBWAB5ANEBWACBANEBWACJANEBXQCR
ANEBGwCZANEBGwAJANEBGwChACkEYgChAEQEaQApANEBbgC5ANEBegDJANEBGwARANEBGwDRANEB
GwAZAOsEjQDZADwFkgDhAFMFlwDpAFwFnQAJAGYFoQDxAIMFpQDZAIoFXQD5AKAFqgABAdEBWAD5
AKAFsADZAMUFtwAJAdAFvQAZANEBGwAIABQATgAIABgAUwApAJMAgAAuABsASAEuACMASAEuAGMA
bgEuAAsA0AAuABMAGAEuADMAGAEuACsASAEuADsATgEuAEMASAEuAFsAZQFDAGsAUwBJAJMAgABh
AJsAUwCDAKsAUwB1AMgAAgABAAMAAwAAAIQBLwAAAAMCNAAAACcCQgACAAIAAwACAAMABQABAAQA
BQACAAUABwAEgAAAAQAAAKgW9G0AAAAAAACNAAAABAAAAAAAAAAAAAAAAQDGAAAAAAAEAAAAAAAA
AAAAAAABAM8AAAAAAAwAAAAAAAAAAAAAAAoACgEAAAAADAAAAAAAAAAAAAAACgDzBAAAAAAAAAAA
AQAAAOAFAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF9hNGI5YWFkN2I1NDE0MjM4YjllYjRhMzRiOTk0
MWI4Ni5jc3Byb2ouZGxsAFJlc291cmNlcwBTVF9hNGI5YWFkN2I1NDE0MjM4YjllYjRhMzRiOTk0
MWI4Ni5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2E0YjlhYWQ3YjU0
MTQyMzhiOWViNGEzNGI5OTQxYjg2LmNzcHJvagBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3Rl
bQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291
cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3Vs
dHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3Rp
Y3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxl
cwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLklPAERpcmVjdG9y
eQBFeGlzdHMAc2V0X1Rhc2tSZXN1bHQAU3RyaW5nAEZvcm1hdABFeGNlcHRpb24ARXZlbnRzT2Jq
ZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEZpcmVJbmZvcm1hdGlvbgBTVF9hNGI5YWFkN2I1NDE0MjM4
YjllYjRhMzRiOTk0MWI4Ni5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAA
AH9TAFQAXwBhADQAYgA5AGEAYQBkADcAYgA1ADQAMQA0ADIAMwA4AGIAOQBlAGIANABhADMANABi
ADkAOQA0ADEAYgA4ADYALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAD0wAbwBnAFAAYQB0AGgAAFNQAGEAYwBrAGEAZwBlACAASQBuAGkAdAA6
ACAATABvAGcAIABQAGEAdABoACAAewAwAH0AIABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQA
AFlQAGEAYwBrAGEAZwBlACAAaQBuAHAAdQB0ACAAcABhAHIAYQBtAGUAdABlAHIAcwA6ACAAewAw
AH0AOwAgAHsAMQB9ADsAIAB7ADIAfQA7ACAAewAzAH0AABlUAGEAcgBnAGUAdABQAG8AbwBsAEkA
ZAAAFVAAbwBvAGwAUwB0AGEAdAB1AHMAADVPAEwARQBEAEIAQwBvAG4AbgBTAHQAcgBpAG4AZwBf
AFAAbwBvAGwAQwBvAG4AZgBpAGcAADVPAEwARQBEAEIAQwBvAG4AbgBTAHQAcgBpAG4AZwBfAFQA
YQByAGcAZQB0AFAAbwBvAGwAAC1QAGEAYwBrAGEAZwBlACAASQBuAGkAdABpAGEAbABpAHMAYQB0
AGkAbwBuAAAAAACsCYvptjeIS4oaeJBvOrbVAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAA
AQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAA
AAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAA
Em0EIAAScQUgARJ1HAMgABwDIAAOBAABAg4FAAIODhwGAAIODh0cBSAAEoCFCiAGAQgODg4IEAIH
BwQODgIdHEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTVF9hNGI5YWFkN2I1NDE0MjM4YjllYjRhMzRiOTk0
MWI4Ni5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAAPgwAAAAAAAAAAAAAA4xAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAPRtqBYAAAEA9G2oFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAw
ADAAMAA0AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBhADQAYgA5AGEAYQBkADcAYgA1ADQAMQA0ADIAMwA4AGIAOQBlAGIANABhADMANABiADkAOQA0
ADEAYgA4ADYALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADUAOAAwADAALgAyADgAMQA0ADgAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABO
AGEAbQBlAAAAUwBUAF8AYQA0AGIAOQBhAGEAZAA3AGIANQA0ADEANAAyADMAOABiADkAZQBiADQA
YQAzADQAYgA5ADkANAAxAGIAOAA2AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABl
AGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAA
MQAyAAAAiAAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGEANABi
ADkAYQBhAGQANwBiADUANAAxADQAMgAzADgAYgA5AGUAYgA0AGEAMwA0AGIAOQA5ADQAMQBiADgA
NgAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYQA0AGIAOQBhAGEAZAA3AGIANQA0ADEANAAyADMAOABiADkAZQBiADQAYQAzADQA
YgA5ADkANAAxAGIAOAA2AC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADAAMAAuADIAOAAxADQAOAAAAAAASAAPAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADAAMAAuADIAOAAxADQAOAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pool Status Cache"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F7AC6B5B-2B3D-4307-87FA-7D26EA86FDCA}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pool Status Cache"
      DTS:TransactionOption="0">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Pool Status Cache\Prepare Pool Status Cache"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6FC9E831-4111-4CFF-BF21-03916468AD46}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Prepare Pool Status Cache"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID"
                  componentClassID="Microsoft.Cache"
                  contactInfo="Cache Transform;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Inserts rows into a cache."
                  name="Cache Indexed PoolID"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[PoolIDCache]"
                      connectionManagerRefId="Package.ConnectionManagers[PoolIDCache]"
                      description="The connection used to access the cache."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Inputs[Cache Input]"
                      hasSideEffects="true"
                      name="Cache Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Inputs[Cache Input].Columns[PoolId]"
                          cachedDataType="i8"
                          cachedName="PoolId"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolId]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">PoolId</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Inputs[Cache Input].Columns[PoolStatus]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="PoolStatus"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolStatus]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">PoolStatus</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Outputs[Cache Output]"
                      name="Cache Output"
                      synchronousInputId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Inputs[Cache Input]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status"
                  componentClassID="Microsoft.Cache"
                  contactInfo="Cache Transform;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Inserts rows into a cache."
                  name="Cache Indexed PoolID and Status"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[PoolStatusCache]"
                      connectionManagerRefId="Package.ConnectionManagers[PoolStatusCache]"
                      description="The connection used to access the cache."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Inputs[Cache Input]"
                      hasSideEffects="true"
                      name="Cache Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Inputs[Cache Input].Columns[PoolId]"
                          cachedDataType="i8"
                          cachedName="PoolId"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolId]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">PoolId</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Inputs[Cache Input].Columns[PoolStatus]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="PoolStatus"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolStatus]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">PoolStatus</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Outputs[Cache Output]"
                      name="Cache Output"
                      synchronousInputId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Inputs[Cache Input]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Pool ID And Status"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select PoolId,
case when PoolStatusId IS NOT NULL then ISNULL(dbo.GetDictonaryCodeByCodeId('PoolStatus', PoolStatusId),'OPEN')
else 'OPEN' end as PoolStatus
from config.PoolHeader nolock
where PoolId &gt; 7</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_PoolConfig]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_PoolConfig]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].ExternalColumns[PoolId]"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolId]"
                          name="PoolId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].ExternalColumns[PoolStatus]"
                          length="200"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].Columns[PoolStatus]"
                          name="PoolStatus"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].ExternalColumns[PoolId]"
                          dataType="i8"
                          name="PoolId" />
                        <externalMetadataColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output].ExternalColumns[PoolStatus]"
                          dataType="wstr"
                          length="200"
                          name="PoolStatus" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[PoolId]"
                          dataType="i8"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[PoolId]"
                          name="PoolId" />
                        <outputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[PoolStatus]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[PoolStatus]"
                          name="PoolStatus" />
                        <outputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Pool Status Cache\Prepare Pool Status Cache.Paths[Cache Output]"
                  endId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID.Inputs[Cache Input]"
                  name="Cache Output"
                  startId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Outputs[Cache Output]" />
                <path
                  refId="Package\Pool Status Cache\Prepare Pool Status Cache.Paths[OLE DB Source Output]"
                  endId="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status.Inputs[Cache Input]"
                  name="OLE DB Source Output"
                  startId="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SYNC with SharePoint"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{2CD4C2C6-C048-4FE8-9292-CF169AAB1634}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SYNC with SharePoint"
      DTS:TransactionOption="0">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SYNC with SharePoint\update pool status in sharepoint"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="update pool status in sharepoint"
          DTS:Disabled="True"
          DTS:DTSID="{1D878030-A8EC-49B2-A94D-152AC1F23133}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="update pool status in sharepoint"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Looks up values in a reference dataset by using exact matching."
                  name="Check pool status"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from () [refTable]
where [refTable].[PoolStatus] = ? and [refTable].[PoolId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="PoolId" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PoolStatus" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[Status]};#{Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output].Columns[ConvertedPoolID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[PoolStatusCache]"
                      connectionManagerRefId="Package.ConnectionManagers[PoolStatusCache]"
                      description="Connection manager used to access lookup data."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input].Columns[Status]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Status"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[Status]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">PoolStatus</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input].Columns[ConvertedPoolID]"
                          cachedDataType="i8"
                          cachedName="ConvertedPoolID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output].Columns[ConvertedPoolID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">PoolId</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  localeId="3081"
                  name="Convert Pool id Type"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Inputs[Data Conversion Input].Columns[PoolID]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="PoolID"
                          cachedSortKeyPosition="2"
                          description="PoolID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[PoolID]"
                          name="PoolID" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output].Columns[ConvertedPoolID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output].Columns[ConvertedPoolID]"
                          name="ConvertedPoolID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[PoolID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Looks up values in a reference dataset by using exact matching."
                  name="Get changed pool status"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from () [refTable]
where [refTable].[PoolId] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="PoolId" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PoolStatus" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output].Columns[ConvertedPoolID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[PoolIDCache]"
                      connectionManagerRefId="Package.ConnectionManagers[PoolIDCache]"
                      description="Connection manager used to access lookup data."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Inputs[Lookup Input].Columns[ConvertedPoolID]"
                          cachedDataType="i8"
                          cachedName="ConvertedPoolID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output].Columns[ConvertedPoolID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">PoolId</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Match Output].Columns[PoolStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="200"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Match Output].Columns[PoolStatus]"
                          name="PoolStatus"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">PoolStatus</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Extracts data from SharePoint.;CozyRoc LLC; SSIS+; © 2006-2011 CozyRoc LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                  description="Extracts data from SharePoint."
                  localeId="3081"
                  name="Get sharepoint pool folder list"
                  usesDispositions="true"
                  validateExternalMetadata="False">
                  <properties>
                    <property
                      dataType="System.Null"
                      name="ComponentObject"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      name="DtsComponentDesigner"
                      typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.SharePointSourceDesigner, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies query batch size."
                      name="BatchSize">1000</property>
                    <property
                      dataType="System.String"
                      description="Specifies SharePoint list."
                      expressionType="Notify"
                      name="InputList"
                      typeConverter="CozyRoc.SqlServer.SSIS.TableEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">PoolCut Center</property>
                    <property
                      dataType="System.String"
                      description="Specifies SharePoint CAML statement."
                      expressionType="Notify"
                      name="InputQuery"
                      UITypeEditor="CozyRoc.SqlServer.SSIS.CamlEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">&lt;Query&gt;
  &lt;Where&gt;
    &lt;Neq&gt;
      &lt;FieldRef Name="PoolID" /&gt;
      &lt;Value Type="Text"&gt;0&lt;/Value&gt;
    &lt;/Neq&gt;
  &lt;/Where&gt;
&lt;/Query&gt;</property>
                    <property
                      dataType="System.String"
                      description="Specifies list view name."
                      name="InputView"
                      typeConverter="CozyRoc.SqlServer.SSIS.SharePointViewsEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">All Documents</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies items within folders are included in the result."
                      name="IsRecursive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies to include folders in the result."
                      name="InсludeFolders">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies to include hidden fields in the result."
                      name="InсludeHidden">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">CozyRoc.SqlServer.SSIS.SharePointSource, CozyRoc.SSISPlus.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Connections[SHAREPOINT]"
                      connectionManagerID="Package.ConnectionManagers[SharePointConnectionManager]"
                      connectionManagerRefId="Package.ConnectionManagers[SharePointConnectionManager]"
                      description="SharePoint Connection Manager"
                      name="SHAREPOINT" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output]"
                      name="SharePoint Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolID]"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[PoolID]"
                          name="PoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[Status]"
                          dataType="wstr"
                          description="Status"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolStatus]"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[Status]"
                          name="Status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[ID]"
                          dataType="i4"
                          description="ID"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[ID]"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[ID]"
                          name="ID"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[FileLeafRef]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="FileLeafRef" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          description="Title"
                          length="4000"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          length="4000"
                          name="PoolID" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolOrganization]"
                          dataType="wstr"
                          description="Org"
                          length="4000"
                          name="PoolOrganization" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolName]"
                          dataType="wstr"
                          description="PoolName"
                          length="4000"
                          name="PoolName" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolDescription]"
                          dataType="wstr"
                          description="Description"
                          length="4000"
                          name="PoolDescription" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolCutPageURL]"
                          dataType="wstr"
                          description="PoolCut"
                          length="4000"
                          name="PoolCutPageURL" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolHierarchy]"
                          dataType="wstr"
                          description="Hierarchy"
                          length="4000"
                          name="PoolHierarchy" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[OverlapPool]"
                          dataType="bool"
                          description="Child Overlap"
                          name="OverlapPool" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolStatus]"
                          dataType="wstr"
                          description="Status"
                          length="4000"
                          name="PoolStatus" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolLoanType]"
                          dataType="wstr"
                          description="LoanType"
                          length="4000"
                          name="PoolLoanType" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolLoanValue]"
                          dataType="wstr"
                          description="LoanValue"
                          length="4000"
                          name="PoolLoanValue" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolLoanCount]"
                          dataType="wstr"
                          description="LoanCount"
                          length="4000"
                          name="PoolLoanCount" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolTargetTrust]"
                          dataType="wstr"
                          description="TargetTrust"
                          length="4000"
                          name="PoolTargetTrust" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolGroup]"
                          dataType="wstr"
                          description="Group"
                          length="4000"
                          name="PoolGroup" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolGroupParent]"
                          dataType="wstr"
                          description="GroupParent"
                          length="4000"
                          name="PoolGroupParent" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolSource]"
                          dataType="wstr"
                          description="PoolSource"
                          length="4000"
                          name="PoolSource" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[BasePoolAsOfDate]"
                          dataType="wstr"
                          description="BasePool As Of Date"
                          length="4000"
                          name="BasePoolAsOfDate" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[RefreshAsOfDate]"
                          dataType="wstr"
                          description="Refresh As Of Date"
                          length="4000"
                          name="RefreshAsOfDate" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[UpdateLoanBalanceOfDate]"
                          dataType="wstr"
                          description="UpdateLoanBalance As Of Date"
                          length="4000"
                          name="UpdateLoanBalanceOfDate" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolHierarchyName]"
                          dataType="wstr"
                          description="PoolName"
                          length="4000"
                          name="PoolHierarchyName" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolReport]"
                          dataType="wstr"
                          description="Report"
                          length="4000"
                          name="PoolReport" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolIdentification]"
                          dataType="wstr"
                          description="PoolIdentification"
                          length="4000"
                          name="PoolIdentification" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolUpdateType]"
                          dataType="wstr"
                          description="UpdateType"
                          length="4000"
                          name="PoolUpdateType" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolUpdateBy]"
                          dataType="wstr"
                          description="UpdatedBy"
                          length="4000"
                          name="PoolUpdateBy" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[OrderBySequence]"
                          dataType="wstr"
                          description="OrderBySequence"
                          length="4000"
                          name="OrderBySequence" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[PoolJobDescription]"
                          dataType="wstr"
                          description="Job Description"
                          length="4000"
                          name="PoolJobDescription" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[ID]"
                          dataType="i4"
                          description="ID"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[ContentType]"
                          dataType="wstr"
                          description="Content Type"
                          length="4000"
                          name="ContentType" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[Created]"
                          dataType="dbTimeStamp"
                          description="Created"
                          name="Created" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[Author]"
                          dataType="wstr"
                          description="Created By"
                          length="4000"
                          name="Author" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[Modified]"
                          dataType="dbTimeStamp"
                          description="Modified"
                          name="Modified" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[Editor]"
                          dataType="wstr"
                          description="Modified By"
                          length="4000"
                          name="Editor" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[_CopySource]"
                          dataType="wstr"
                          description="Copy Source"
                          length="4000"
                          name="_CopySource" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[CheckoutUser]"
                          dataType="wstr"
                          description="Checked Out To"
                          length="4000"
                          name="CheckoutUser" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[_CheckinComment]"
                          dataType="wstr"
                          description="Check In Comment"
                          length="4000"
                          name="_CheckinComment" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[LinkFilenameNoMenu]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="LinkFilenameNoMenu" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[LinkFilename]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="LinkFilename" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[DocIcon]"
                          dataType="wstr"
                          description="Type"
                          length="4000"
                          name="DocIcon" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[FileSizeDisplay]"
                          dataType="wstr"
                          description="File Size"
                          length="4000"
                          name="FileSizeDisplay" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[ItemChildCount]"
                          dataType="wstr"
                          description="Item Child Count"
                          length="4000"
                          name="ItemChildCount" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[FolderChildCount]"
                          dataType="wstr"
                          description="Folder Child Count"
                          length="4000"
                          name="FolderChildCount" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[Edit]"
                          dataType="wstr"
                          description="Edit"
                          length="4000"
                          name="Edit" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[_UIVersionString]"
                          dataType="wstr"
                          description="Version"
                          length="4000"
                          name="_UIVersionString" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[ParentVersionString]"
                          dataType="wstr"
                          description="Source Version (Converted Document)"
                          length="4000"
                          name="ParentVersionString" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].ExternalColumns[ParentLeafName]"
                          dataType="wstr"
                          description="Source Name (Converted Document)"
                          length="4000"
                          name="ParentLeafName" />
                      </externalMetadataColumns>
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Extracts data from SharePoint.;CozyRoc LLC; SSIS+; © 2006-2011 CozyRoc LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                  description="Extracts data from SharePoint."
                  localeId="3081"
                  name="Get sharepoint pool list"
                  usesDispositions="true"
                  validateExternalMetadata="False">
                  <properties>
                    <property
                      dataType="System.Null"
                      name="ComponentObject"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      name="DtsComponentDesigner"
                      typeConverter="NOTBROWSABLE">CozyRoc.SqlServer.SSIS.SharePointSourceDesigner, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies query batch size."
                      name="BatchSize">1000</property>
                    <property
                      dataType="System.String"
                      description="Specifies SharePoint list."
                      expressionType="Notify"
                      name="InputList"
                      typeConverter="CozyRoc.SqlServer.SSIS.TableEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">PoolCut Center</property>
                    <property
                      dataType="System.String"
                      description="Specifies SharePoint CAML statement."
                      expressionType="Notify"
                      name="InputQuery"
                      UITypeEditor="CozyRoc.SqlServer.SSIS.CamlEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">&lt;Query&gt;
  &lt;Where&gt;
    &lt;Neq&gt;
      &lt;FieldRef Name="PoolID" /&gt;
      &lt;Value Type="Text"&gt;0&lt;/Value&gt;
    &lt;/Neq&gt;
  &lt;/Where&gt;
&lt;/Query&gt;</property>
                    <property
                      dataType="System.String"
                      description="Specifies list view name."
                      name="InputView"
                      typeConverter="CozyRoc.SqlServer.SSIS.SharePointViewsEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">PoolCutInformation</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies items within folders are included in the result."
                      name="IsRecursive">true</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies to include folders in the result."
                      name="InсludeFolders">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies to include hidden fields in the result."
                      name="InсludeHidden">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">CozyRoc.SqlServer.SSIS.SharePointSource, CozyRoc.SSISPlus.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Connections[SHAREPOINT]"
                      connectionManagerID="Package.ConnectionManagers[SharePointConnectionManager]"
                      connectionManagerRefId="Package.ConnectionManagers[SharePointConnectionManager]"
                      description="SharePoint Connection Manager"
                      name="SHAREPOINT" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output]"
                      name="SharePoint Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolID]"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[PoolID]"
                          name="PoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[Status]"
                          dataType="wstr"
                          description="Status"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolStatus]"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[Status]"
                          name="Status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[ID]"
                          dataType="i4"
                          description="ID"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[ID]"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[ID]"
                          name="ID"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[FileLeafRef]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="FileLeafRef" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          description="Title"
                          length="4000"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          length="4000"
                          name="PoolID" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolOrganization]"
                          dataType="wstr"
                          description="Org"
                          length="4000"
                          name="PoolOrganization" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolName]"
                          dataType="wstr"
                          description="PoolName"
                          length="4000"
                          name="PoolName" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolDescription]"
                          dataType="wstr"
                          description="Description"
                          length="4000"
                          name="PoolDescription" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolCutPageURL]"
                          dataType="wstr"
                          description="PoolCut"
                          length="4000"
                          name="PoolCutPageURL" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolHierarchy]"
                          dataType="wstr"
                          description="Hierarchy"
                          length="4000"
                          name="PoolHierarchy" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[OverlapPool]"
                          dataType="bool"
                          description="Child Overlap"
                          name="OverlapPool" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolStatus]"
                          dataType="wstr"
                          description="Status"
                          length="4000"
                          name="PoolStatus" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolLoanType]"
                          dataType="wstr"
                          description="LoanType"
                          length="4000"
                          name="PoolLoanType" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolLoanValue]"
                          dataType="wstr"
                          description="LoanValue"
                          length="4000"
                          name="PoolLoanValue" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolLoanCount]"
                          dataType="wstr"
                          description="LoanCount"
                          length="4000"
                          name="PoolLoanCount" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolTargetTrust]"
                          dataType="wstr"
                          description="TargetTrust"
                          length="4000"
                          name="PoolTargetTrust" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolGroup]"
                          dataType="wstr"
                          description="Group"
                          length="4000"
                          name="PoolGroup" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolGroupParent]"
                          dataType="wstr"
                          description="GroupParent"
                          length="4000"
                          name="PoolGroupParent" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolSource]"
                          dataType="wstr"
                          description="PoolSource"
                          length="4000"
                          name="PoolSource" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[BasePoolAsOfDate]"
                          dataType="wstr"
                          description="BasePool As Of Date"
                          length="4000"
                          name="BasePoolAsOfDate" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[RefreshAsOfDate]"
                          dataType="wstr"
                          description="Refresh As Of Date"
                          length="4000"
                          name="RefreshAsOfDate" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[UpdateLoanBalanceOfDate]"
                          dataType="wstr"
                          description="UpdateLoanBalance As Of Date"
                          length="4000"
                          name="UpdateLoanBalanceOfDate" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolHierarchyName]"
                          dataType="wstr"
                          description="PoolName"
                          length="4000"
                          name="PoolHierarchyName" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolReport]"
                          dataType="wstr"
                          description="Report"
                          length="4000"
                          name="PoolReport" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolIdentification]"
                          dataType="wstr"
                          description="PoolIdentification"
                          length="4000"
                          name="PoolIdentification" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolUpdateType]"
                          dataType="wstr"
                          description="UpdateType"
                          length="4000"
                          name="PoolUpdateType" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolUpdateBy]"
                          dataType="wstr"
                          description="UpdatedBy"
                          length="4000"
                          name="PoolUpdateBy" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[OrderBySequence]"
                          dataType="wstr"
                          description="OrderBySequence"
                          length="4000"
                          name="OrderBySequence" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[PoolJobDescription]"
                          dataType="wstr"
                          description="Job Description"
                          length="4000"
                          name="PoolJobDescription" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[ID]"
                          dataType="i4"
                          description="ID"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[ContentType]"
                          dataType="wstr"
                          description="Content Type"
                          length="4000"
                          name="ContentType" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[Created]"
                          dataType="dbTimeStamp"
                          description="Created"
                          name="Created" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[Author]"
                          dataType="wstr"
                          description="Created By"
                          length="4000"
                          name="Author" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[Modified]"
                          dataType="dbTimeStamp"
                          description="Modified"
                          name="Modified" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[Editor]"
                          dataType="wstr"
                          description="Modified By"
                          length="4000"
                          name="Editor" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[_CopySource]"
                          dataType="wstr"
                          description="Copy Source"
                          length="4000"
                          name="_CopySource" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[CheckoutUser]"
                          dataType="wstr"
                          description="Checked Out To"
                          length="4000"
                          name="CheckoutUser" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[_CheckinComment]"
                          dataType="wstr"
                          description="Check In Comment"
                          length="4000"
                          name="_CheckinComment" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[LinkFilenameNoMenu]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="LinkFilenameNoMenu" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[LinkFilename]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="LinkFilename" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[DocIcon]"
                          dataType="wstr"
                          description="Type"
                          length="4000"
                          name="DocIcon" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[FileSizeDisplay]"
                          dataType="wstr"
                          description="File Size"
                          length="4000"
                          name="FileSizeDisplay" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[ItemChildCount]"
                          dataType="wstr"
                          description="Item Child Count"
                          length="4000"
                          name="ItemChildCount" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[FolderChildCount]"
                          dataType="wstr"
                          description="Folder Child Count"
                          length="4000"
                          name="FolderChildCount" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[Edit]"
                          dataType="wstr"
                          description="Edit"
                          length="4000"
                          name="Edit" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[_UIVersionString]"
                          dataType="wstr"
                          description="Version"
                          length="4000"
                          name="_UIVersionString" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[ParentVersionString]"
                          dataType="wstr"
                          description="Source Version (Converted Document)"
                          length="4000"
                          name="ParentVersionString" />
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].ExternalColumns[ParentLeafName]"
                          dataType="wstr"
                          description="Source Name (Converted Document)"
                          length="4000"
                          name="ParentLeafName" />
                      </externalMetadataColumns>
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools"
                  componentClassID="Microsoft.Sort"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts data."
                  name="Gurantee no dupliate sharepoint pools"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">true</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Inputs[Sort Input].Columns[PoolID]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="PoolID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[PoolID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Inputs[Sort Input].Columns[Status]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Status"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[Status]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Inputs[Sort Input].Columns[ID]"
                          cachedDataType="i4"
                          cachedName="ID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[ID]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[PoolID]"
                          name="PoolID"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[PoolID]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[Status]"
                          dataType="wstr"
                          description="Status"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[Status]"
                          name="Status">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[Status]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[ID]"
                          dataType="i4"
                          description="ID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[ID]"
                          name="ID"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Log Info for no matching pools"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Log Info for no matching pools"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_52c93386bb5043e9a0d7057cf5347b8d.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_52c93386bb5043e9a0d7057cf5347b8d.csproj</RootNamespace>
    <AssemblyName>SC_52c93386bb5043e9a0d7057cf5347b8d.csproj</AssemblyName>
    <ProjectGuid>{E665566B-7AEF-462E-926C-A721416CE8CA}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool fireAgain = true;
        ComponentMetaData.FireInformation(1000, "Pool Status update", string.Format("Can't find matching record in database for pool {0}", Row.PoolID),"",0,ref fireAgain);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PoolID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool PoolID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_52c93386bb5043e9a0d7057cf5347b8d.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_52c93386bb5043e9a0d7057cf5347b8d.csproj")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_52c93386bb5043e9a0d7057cf5347b8d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_52c93386bb5043e9a0d7057cf5347b8d</msb:DisplayName>
		<msb:ProjectId>{43F32AA8-2750-4E0A-A86B-C18BE3746E0B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_52c93386bb5043e9a0d7057cf5347b8d.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties.Settings.get_Default():SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties.Sett" +
    "ings")]

namespace SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_52c93386bb5043e9a0d7057cf5347b8d.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOkqTFYAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADAyAABLAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUAgCIAALAPAAABAAAAAAAAAMghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqHgIoEgAACioeAigTAAAKKn4CKBQAAAoCAnMKAAAGfQEAAAQCAnMLAAAGfQIAAAQqkgRy
AQAAcBpvFQAACiwVAgUCAygWAAAKDgRzAQAABm8IAAAGKkorBwIDbwkAAAYDbwQAAAYt8SoGKjoC
KBcAAAoCA30DAAAEKjoCKBcAAAoCA30EAAAEKh4CKBkAAAoqHgIoGgAACioAAAATMAcAMAAAAAEA
ABEXCgIoGwAACiDoAwAAchEAAHByNwAAcANvAgAABigcAAAKcp8AAHAWEgBvHQAACioeAigGAAAG
Kh4CKBcAAAoqEzACAC0AAAACAAARfgUAAAQtIHKhAABw0AcAAAIoHwAACm8gAAAKcyEAAAoKBoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKi5zFQAABoAHAAAEKh4CKCQAAAoqAAAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAQAUAACN+AACs
BQAAHAcAACNTdHJpbmdzAAAAAMgMAAAkAQAAI1VTAOwNAAAQAAAAI0dVSUQAAAD8DQAAtAEAACNC
bG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAAB8AAAAIAAAABwAAABYAAAANAAAAJAAA
AA8AAAACAAAAAwAAAAUAAAAGAAAAAQAAAAUAAAABAAAAAAAKAAEAAAAAAAYA/ADbAAYACQHbAAoA
KQEiAQ4ARQEwARIAfgHbAAYAjQHbAAoAVwJGAgoAiAJzAgoAYQNHAwoAjAN6AwoAowN6AwoAwAN6
AwoA3wN6AwoA+AN6AwoAEQR6AwoALAR6AwoARwR6AwoAYAR6AwoAmQR5BAoAuQR5BAoAEwUiAQoA
GgUiAQYAQwXbABYAtwWOBQoAEAb9BQoALQYiAQoAMgYiAQoAVgZ6Aw4AggZsBg4AmwZsBgoAsAZ5
BAAAAAABAAAAAAABAAEAAQAQADkAAAAFAAEAAQABABAARgAAAAkAAQAGAAEAEABUAAAADQADAAoA
AQAQAGAAAAANAAQACwABABAAagAAAAwABQAMAAAAEAB1AH8ADQAFABAAAAEQALUAfwARAAcAFAAG
AFQALQAGAGAAMQABAB8CSQABAB8CSQARAGcCUwARAJQCVwARANgCdQBQIAAAAACGGJsBEwABAFsg
AAAAAIYIoQEdAAQAcCAAAAAAhgisASEABAB5IAAAAACGAL4BIQAEAIEgAAAAAIYAxgEhAAQAiSAA
AAAAhhibATUABACpIAAAAADGAOcBOQAEAM4gAAAAAMYB9AFDAAgA4SAAAAAAxgEIAkMACQDjIAAA
AACGGJsBTQAKAPIgAAAAAIYYmwFNAAsAASEAAAAAxgAvAjUADAAJIQAAAADGADoCNQAMABQhAAAA
AMYACAJDAAwAUCEAAAAAhhibATUADQBYIQAAAACDGJsBNQANAGAhAAAAAJMIpAJbAA0AmSEAAAAA
kwi4AmAADQCgIQAAAACTCMQCZQANAKghAAAAAJYI6AJ5AA4AuyEAAAAAhhibATUADgCvIQAAAACR
GMsG8gAOAAAAAQD8AgAAAgADAwAAAwAXAwAAAQAhAwAAAgApAwAAAwD8AgAABAAXAwAAAQD8AgAA
AQAzAwAAAQA3AwAAAQA3AwAAAQAzAwAAAQBBA0kAmwGDAFEAmwGDAFkAmwGDAGEAmwGDAGkAmwGD
AHEAmwGDAHkAmwGDAIEAmwGDAIkAmwGDAJEAmwGDAJkAmwGIAKEAmwE1AAkAmwETAAkA/AKNAAkA
AwORACkAAgWVAAkADAWaAAkAvgEhAAkAxgEhABEAmwE1AKkAKwWfABEAMgWmABkAmwE1ALkAmwE1
ABEALwI1ABEAOgI1ABEA0AWxAKkA5gW2AMEA7QW8AMkAmwE1ANEARAbLANEAXwbSADkAmwHXAOkA
mwHjAPkAmwE1ACEAmwE1AC4AGwBuAS4AYwCUAS4AIwBuAS4AKwBuAS4AWwCLAS4AEwA+AS4AMwA+
AS4AQwBuAS4ACwD2AC4AOwB0AWkAEwHpAIkAEwHpAMMAwwCsAOEAGwGsAOMA8wCsAMcA3gACAAEA
BwADAAgABQAAANIBJQAAANkBKQAAAFcCawAAANACcAAAAPQCfgACAAIAAwACAAMABQACABEABwAC
ABIACQABABMACQACABQACwAEgAAAAQAAAKgW9G0AAAAAAADXBAAADAAAAAAAAAAAAAAAAQC+AAAA
AAAEAAAAAAAAAAAAAAAKABkBAAAAAAQAAAAAAAAAAAAAAAoAIgEAAAAADAAAAAAAAAAAAAAAAQBd
AQAAAAAMAAAAAAAAAAAAAAABAGoFAAAAAAAAAAABAAAA0gYAAAAAADxNb2R1bGU+AFNDXzUyYzkz
Mzg2YmI1MDQzZTlhMGQ3MDU3Y2Y1MzQ3YjhkLmNzcHJvai5kbGwASW5wdXQwQnVmZmVyAFVzZXJD
b21wb25lbnQAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFNjcmlwdE1haW4AUmVzb3VyY2VzAFNDXzUy
YzkzMzg2YmI1MDQzZTlhMGQ3MDU3Y2Y1MzQ3YjhkLmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdz
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAU2NyaXB0QnVmZmVyAFNjcmlwdENvbXBvbmVudABtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0
AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVNYXAALmN0b3IA
Z2V0X1Bvb2xJRABnZXRfUG9vbElEX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AFBvb2xJRABQ
b29sSURfSXNOdWxsAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAASW5wdXRJRABJbnB1dE5h
bWUAUm93AENvbXBvbmVudAB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNTJjOTMzODZiYjUwNDNlOWEwZDcwNTdjZjUzNDdi
OGQuY3Nwcm9qAEdldFN0cmluZwBJc051bGwAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxz
AEdldENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVu
dE1ldGFEYXRhAEZvcm1hdABGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkRpYWdub3N0aWNzAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQAuY2N0b3IAU0NfNTJjOTMzODZiYjUwNDNlOWEwZDcwNTdjZjUzNDdiOGQuY3Nw
cm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAD0kAbgBwAHUAdAAgADAAACVQAG8A
bwBsACAAUwB0AGEAdAB1AHMAIAB1AHAAZABhAHQAZQAAZ0MAYQBuACcAdAAgAGYAaQBuAGQAIABt
AGEAdABjAGgAaQBuAGcAIAByAGUAYwBvAHIAZAAgAGkAbgAgAGQAYQB0AGEAYgBhAHMAZQAgAGYA
bwByACAAcABvAG8AbAAgAHsAMAB9AAEBAH9TAEMAXwA1ADIAYwA5ADMAMwA4ADYAYgBiADUAMAA0
ADMAZQA5AGEAMABkADcAMAA1ADcAYwBmADUAMwA0ADcAYgA4AGQALgBjAHMAcAByAG8AagAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA3tOzN62b/kWXE+3qou4e
bQAIiYRdzYCAzJEIt3pcVhk04IkJIAMBEhUdCBIZAyAADgMgAAIDKAAOAygAAgMGEhADBhIUAyAA
AQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJAwYSHQMGEiEEAAASHQQAABIhBQABARIhBAgAEh0E
CAASIQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBCABDggEIAECCAYgAgIOEVkFIAEd
CAgEAQAAAAQgABJhBQACDg4cCiAGAQgODg4IEAIDBwECBgABEmkRbQQgABJxBiACAQ4ScQQHARId
BSABARF5CAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ181MmM5MzM4NmJiNTA0M2U5
YTBkNzA1N2NmNTM0N2I4ZC5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMwAACAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQBYMgAAAAAAAAAAAABuMgAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAYDIAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADwAwAAAAAAAAAAAADwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA9G2oFgAAAQD0bagWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEUAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAALAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
ADUAMgBjADkAMwAzADgANgBiAGIANQAwADQAMwBlADkAYQAwAGQANwAwADUANwBjAGYANQAzADQA
NwBiADgAZAAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAA
ADEALgAwAC4ANQA4ADAAMAAuADIAOAAxADQAOAAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4A
YQBtAGUAAABTAEMAXwA1ADIAYwA5ADMAMwA4ADYAYgBiADUAMAA0ADMAZQA5AGEAMABkADcAMAA1
ADcAYwBmADUAMwA0ADcAYgA4AGQALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAx
ADMAAACIAC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANQAyAGMA
OQAzADMAOAA2AGIAYgA1ADAANAAzAGUAOQBhADAAZAA3ADAANQA3AGMAZgA1ADMANAA3AGIAOABk
AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAEMAXwA1ADIAYwA5ADMAMwA4ADYAYgBiADUAMAA0ADMAZQA5AGEAMABkADcAMAA1ADcAYwBm
ADUAMwA0ADcAYgA4AGQALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMAAwAC4AMgA4ADEANAA4AAAAAABIAA8AAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMAAwAC4AMgA4ADEANAA4AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_52c93386bb5043e9a0d7057cf5347b8d</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">812eb442680a26e84f49ab9ff7ff07e2</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Log Info for no matching pools.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Log Info for no matching pools.Inputs[Input 0].Columns[PoolID]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="PoolID"
                          cachedSortKeyPosition="2"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[PoolID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Populates SharePoint destination list.;CozyRoc LLC; SSIS+; © 2006-2011 CozyRoc LLC; All Rights Reserved; http://www.cozyroc.com/;0"
                  description="Populates SharePoint destination list."
                  name="SharePoint Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Null"
                      description="Populates SharePoint destination list."
                      name="ComponentObject"
                      typeConverter="NOTBROWSABLE" />
                    <property
                      dataType="System.String"
                      description="Destination list to load."
                      expressionType="Notify"
                      name="DestinationList"
                      typeConverter="CozyRoc.SqlServer.SSIS.TableEditor, CozyRoc.SSISPlus.UI.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">PoolCut Center</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the number of rows to be sent as a batch to the service."
                      name="BatchSize">200</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies destination action type."
                      name="Action"
                      typeConverter="CozyRoc.SqlServer.SSIS.SharePointDestination+ActionTypes, CozyRoc.SSISPlus.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea">1</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">CozyRoc.SqlServer.SSIS.SharePointDestination, CozyRoc.SSISPlus.2014, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Connections[SHAREPOINT]"
                      connectionManagerID="Package.ConnectionManagers[SharePointConnectionManager]"
                      connectionManagerRefId="Package.ConnectionManagers[SharePointConnectionManager]"
                      description="SharePoint Connection"
                      name="SHAREPOINT" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="SharePoint Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].Columns[ID]"
                          cachedDataType="i4"
                          cachedName="ID"
                          cachedSortKeyPosition="1"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[ID]"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output].Columns[ID]" />
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].Columns[PoolStatus]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="PoolStatus"
                          externalMetadataColumnId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Status]"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Match Output].Columns[PoolStatus]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Name]"
                          dataType="wstr"
                          description="Name"
                          length="4000"
                          name="Name">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">FileLeafRef</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">File</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Title]"
                          dataType="wstr"
                          description="Title"
                          length="4000"
                          name="Title">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">Title</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          length="4000"
                          name="PoolID">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolID</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Org]"
                          dataType="wstr"
                          description="Org"
                          length="4000"
                          name="Org">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolOrganization</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[PoolName (PoolName)]"
                          dataType="wstr"
                          description="PoolName"
                          length="4000"
                          name="PoolName (PoolName)">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolName</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          description="Description"
                          length="4000"
                          name="Description">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolDescription</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[PoolCut]"
                          dataType="wstr"
                          description="PoolCut"
                          length="4000"
                          name="PoolCut">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolCutPageURL</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">URL</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Hierarchy]"
                          dataType="wstr"
                          description="Hierarchy"
                          length="4000"
                          name="Hierarchy">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolHierarchy</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Child Overlap]"
                          dataType="bool"
                          description="Child Overlap"
                          name="Child Overlap">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">OverlapPool</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Boolean</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Status]"
                          dataType="wstr"
                          description="Status"
                          length="4000"
                          name="Status">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolStatus</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[LoanType]"
                          dataType="wstr"
                          description="LoanType"
                          length="4000"
                          name="LoanType">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolLoanType</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[LoanValue]"
                          dataType="wstr"
                          description="LoanValue"
                          length="4000"
                          name="LoanValue">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolLoanValue</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[LoanCount]"
                          dataType="wstr"
                          description="LoanCount"
                          length="4000"
                          name="LoanCount">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolLoanCount</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[TargetTrust]"
                          dataType="wstr"
                          description="TargetTrust"
                          length="4000"
                          name="TargetTrust">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolTargetTrust</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Group]"
                          dataType="wstr"
                          description="Group"
                          length="4000"
                          name="Group">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolGroup</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[GroupParent]"
                          dataType="wstr"
                          description="GroupParent"
                          length="4000"
                          name="GroupParent">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolGroupParent</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[PoolSource]"
                          dataType="wstr"
                          description="PoolSource"
                          length="4000"
                          name="PoolSource">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolSource</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[BasePool As Of Date]"
                          dataType="wstr"
                          description="BasePool As Of Date"
                          length="4000"
                          name="BasePool As Of Date">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">BasePoolAsOfDate</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Refresh As Of Date]"
                          dataType="wstr"
                          description="Refresh As Of Date"
                          length="4000"
                          name="Refresh As Of Date">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">RefreshAsOfDate</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[UpdateLoanBalance As Of Date]"
                          dataType="wstr"
                          description="UpdateLoanBalance As Of Date"
                          length="4000"
                          name="UpdateLoanBalance As Of Date">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">UpdateLoanBalanceOfDate</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[PoolName (PoolHierarchyName)]"
                          dataType="wstr"
                          description="PoolName"
                          length="4000"
                          name="PoolName (PoolHierarchyName)">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolHierarchyName</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Report]"
                          dataType="wstr"
                          description="Report"
                          length="4000"
                          name="Report">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolReport</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">URL</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[PoolIdentification]"
                          dataType="wstr"
                          description="PoolIdentification"
                          length="4000"
                          name="PoolIdentification">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolIdentification</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[UpdateType]"
                          dataType="wstr"
                          description="UpdateType"
                          length="4000"
                          name="UpdateType">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolUpdateType</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[UpdatedBy]"
                          dataType="wstr"
                          description="UpdatedBy"
                          length="4000"
                          name="UpdatedBy">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolUpdateBy</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[OrderBySequence]"
                          dataType="wstr"
                          description="OrderBySequence"
                          length="4000"
                          name="OrderBySequence">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">OrderBySequence</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Job Description]"
                          dataType="wstr"
                          description="Job Description"
                          length="4000"
                          name="Job Description">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">PoolJobDescription</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Text</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[ID]"
                          dataType="i4"
                          description="ID"
                          name="ID">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">ID</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Counter</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input].ExternalColumns[Content Type]"
                          dataType="wstr"
                          description="Content Type"
                          length="4000"
                          name="Content Type">
                          <properties>
                            <property
                              dataType="System.String"
                              name="ID">ContentType</property>
                            <property
                              dataType="System.String"
                              name="AttributeType">Computed</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="SharePoint Destination Error Output"
                      synchronousInputId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output].Columns[ErrorDescription]"
                          dataType="wstr"
                          length="1024"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Outputs[SharePoint Destination Error Output].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Merges multiple datasets."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 1].Columns[PoolID]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="PoolID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[PoolID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[PoolID]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 1].Columns[Status]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Status"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[Status]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[Status]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 1].Columns[ID]"
                          cachedDataType="i4"
                          cachedName="ID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output].Columns[ID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 2].Columns[PoolID]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="PoolID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[PoolID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[PoolID]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 2].Columns[Status]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Status"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[Status]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[Status]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 2].Columns[ID]"
                          cachedDataType="i4"
                          cachedName="ID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output].Columns[ID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[ID]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 3]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[PoolID]"
                          dataType="wstr"
                          description="PoolID"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[PoolID]"
                          name="PoolID" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[Status]"
                          dataType="wstr"
                          description="Status"
                          length="4000"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[Status]"
                          name="Status" />
                        <outputColumn
                          refId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[ID]"
                          dataType="i4"
                          description="ID"
                          lineageId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1].Columns[ID]"
                          name="ID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Data Conversion Output]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Lookup Match Output]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination.Inputs[SharePoint Destination Input]"
                  name="Lookup Match Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Lookup No Match Output]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Inputs[Lookup Input]"
                  name="Lookup No Match Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Lookup No Match Output1]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Log Info for no matching pools.Inputs[Input 0]"
                  name="Lookup No Match Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[SharePoint Source Output]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 1]"
                  name="SharePoint Source Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list.Outputs[SharePoint Source Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[SharePoint Source Output1]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Inputs[Union All Input 2]"
                  name="SharePoint Source Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list.Outputs[SharePoint Source Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Sort Output]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type.Inputs[Data Conversion Input]"
                  name="Sort Output"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Outputs[Sort Output]" />
                <path
                  refId="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Union All Output 1]"
                  endId="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools.Inputs[Sort Input]"
                  name="Union All Output 1"
                  startId="Package\SYNC with SharePoint\update pool status in sharepoint\Union All.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Status"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{51AD58FE-7CA9-4F6B-B97D-4340AD05A351}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Status">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Update Status\SYNC Pool Status with PoolHeader"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:DelayValidation="True"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{738F9609-BA28-4865-99EA-A706C3C1169C}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="SYNC Pool Status with PoolHeader">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{549E21C6-3BC3-49E8-BB23-7FC4B013BE7E}"
            DTS:ObjectName="{549E21C6-3BC3-49E8-BB23-7FC4B013BE7E}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::_JobSQLConnections" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job"
              DTS:CreationName="Microsoft.Pipeline"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{A0550F79-2D30-496A-9129-8461974917F3}"
              DTS:ExecutableType="Microsoft.Pipeline"
              DTS:LocaleID="-1"
              DTS:ObjectName="SYNC Pool status in Job"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  BLOBTempStoragePath=""
                  bufferTempStoragePath=""
                  version="1">
                  <components>
                    <component
                      refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job"
                      componentClassID="Microsoft.OLEDBSource"
                      contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                      description="OLE DB Source"
                      name="Get Pools for Job"
                      usesDispositions="true"
                      version="7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the database object used to open a rowset."
                          name="OpenRowset"></property>
                        <property
                          dataType="System.String"
                          description="Specifies the variable that contains the name of the database object used to open a rowset."
                          name="OpenRowsetVariable"></property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select PoolId,  dbo.GetDictonaryCodeByCodeId('PoolStatus', PoolStatusId) As Status
from Config.PoolHeader
where PoolId &gt; 8 and PoolDBName = ?</property>
                        <property
                          dataType="System.String"
                          description="The variable that contains the SQL command to be executed."
                          name="SqlCommandVariable"></property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Forces the use of the DefaultCodePage property value when describing character data."
                          name="AlwaysUseDefaultCodePage">false</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the database."
                          name="AccessMode"
                          typeConverter="AccessMode">2</property>
                        <property
                          dataType="System.String"
                          description="The mappings between the parameters in the SQL command and variables."
                          name="ParameterMapping">"Parameter0",{183BA1E0-E053-4ECB-869F-C269B7953F7B};</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OLEDB_PoolConfig]"
                          connectionManagerRefId="Package.ConnectionManagers[OLEDB_PoolConfig]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output]"
                          name="OLE DB Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[PoolId]"
                              dataType="i8"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].ExternalColumns[PoolId]"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[PoolId]"
                              name="PoolId"
                              truncationRowDisposition="FailComponent" />
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[Status]"
                              dataType="wstr"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              length="200"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[Status]"
                              name="Status"
                              truncationRowDisposition="FailComponent" />
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].ExternalColumns[PoolId]"
                              dataType="i8"
                              name="PoolId" />
                            <externalMetadataColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].ExternalColumns[Status]"
                              dataType="wstr"
                              length="200"
                              name="Status" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output]"
                          isErrorOut="true"
                          name="OLE DB Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[PoolId]"
                              dataType="i8"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[PoolId]"
                              name="PoolId" />
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[Status]"
                              dataType="wstr"
                              length="200"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[Status]"
                              name="Status" />
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component"
                      componentClassID="Microsoft.ManagedComponentHost"
                      contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                      description="Executes a custom script."
                      name="Script Component"
                      version="9">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_860c867f326148acb3258c0479065660.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_860c867f326148acb3258c0479065660.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private string _SqlConn;
    private string _PoolDBName;
    private bool bFireAgain = false;
    private string _sMsg;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = Variables.TargetSqlConnection;
        _PoolDBName = Variables.BasePoolDBName;
        _sMsg = string.Format("Connection string = {0}; PoolDBNaame = {1};", _SqlConn, _PoolDBName);

        ComponentMetaData.FireInformation(100, "Sync PoolStatus in Job", _sMsg, "", 0, ref bFireAgain);
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        _sMsg = string.Format("Connection string = {0}; PoolDBNaame = {1}; PoolID = {2}; PoolStatus = {3}", _SqlConn, _PoolDBName, Row.PoolId.ToString(), Row.Status);

        ComponentMetaData.FireInformation(100, "Sync PoolStatus in Job", _sMsg, "", 0, ref bFireAgain);
        
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 PoolId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool PoolId_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Status
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Status_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String BasePoolDBName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_BasePoolDBName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String TargetSqlConnection
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_TargetSqlConnection"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[sc_860c867f326148acb3258c0479065660.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_860c867f326148acb3258c0479065660.csproj</RootNamespace>
    <AssemblyName>SC_860c867f326148acb3258c0479065660.csproj</AssemblyName>
    <ProjectGuid>{1708BD8D-A88D-45EC-B2BD-02FF257C5F3C}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_860c867f326148acb3258c0479065660</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_860c867f326148acb3258c0479065660</msb:DisplayName>
		<msb:ProjectId>{97E5C9B2-7C65-4FF6-8A7E-A192C117B14B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_860c867f326148acb3258c0479065660.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_860c867f326148acb3258c0479065660.csproj.Properties.Settings.get_Default():SC_860c867f326148acb3258c0479065660.csproj.Properties.Sett" +
    "ings")]

namespace SC_860c867f326148acb3258c0479065660.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_860c867f326148acb3258c0479065660.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_860c867f326148acb3258c0479065660.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_860c867f326148acb3258c0479065660.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_860c867f326148acb3258c0479065660.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_860c867f326148acb3258c0479065660.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_860c867f326148acb3258c0479065660.csproj.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOkqTFYAAAAAAAAAAOAAAiELAQsAABgAAAAIAAAAAAAALjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANg2AABTAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NwAAAAAAAEgAAAACAAUAkCMAAEgTAAABAAAAAAAAANgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxIAAAoqIgIXKBEAAAoqHgIoEwAACioeAigUAAAKKn4CKBUA
AAoCAnMMAAAGfQEAAAQCAnMNAAAGfQIAAAQqkgRyAQAAcBpvFgAACiwVAgUCAygXAAAKDgRzAQAA
Bm8KAAAGKkorBwIDbwsAAAYDbwYAAAYt8SoGKjoCKBgAAAoCA30DAAAEKjoCKBgAAAoCA30EAAAE
KpYCewQAAARvGQAACnIRAABwbxoAAAooGwAACm8cAAAKdBUAAAEqlgJ7BAAABG8ZAAAKcjEAAHBv
GgAACigbAAAKbxwAAAp0FQAAASoAAzAHAGkAAAAAAAAAAigeAAAKAgJ7AgAABG8PAAAGfQUAAAQC
AnsCAAAEbw4AAAZ9BgAABAJyWwAAcAJ7BQAABAJ7BgAABCgfAAAKfQgAAAQCKCAAAAofZHKzAABw
AnsIAAAEcuEAAHAWAnwHAAAEbyEAAAoqHgIoIgAACioAAAATMAcAaQAAAAEAABECcuMAAHAajQMA
AAEKBhYCewUAAASiBhcCewYAAASiBhgDbwIAAAYLEgEoIwAACqIGGQNvBAAABqIGKCQAAAp9CAAA
BAIoIAAACh9kcrMAAHACewgAAARy4QAAcBYCfAcAAARvIQAACioeAigIAAAGKh4CKBgAAAoqAAAA
EzACAC0AAAACAAARfgkAAAQtIHJ6AQBw0AcAAAIoJgAACm8nAAAKcygAAAoKBoAJAAAEfgkAAAQq
Gn4KAAAEKh4CgAoAAAQqGn4LAAAEKi5zGQAABoALAAAEKh4CKCsAAAoqALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAgBgAAI34AAIwGAADECAAAI1N0cmlu
Z3MAAAAAUA8AAPwBAAAjVVMATBEAABAAAAAjR1VJRAAAAFwRAADsAQAAI0Jsb2IAAAAAAAAAAgAA
AVcVogEJAQAAAPolMwAWAAABAAAAJAAAAAgAAAALAAAAGgAAAA0AAAArAAAADwAAAAIAAAAEAAAA
CQAAAAoAAAABAAAABgAAAAEAAAAAAAoAAQAAAAAABgD8ANsABgAJAdsACgApASIBDgBFATABEgB+
AdsABgCNAdsACgD9AuwCCgAuAxkDCgAHBO0DCgAyBCAECgBJBCAECgBmBCAECgCFBCAECgCeBCAE
CgC3BCAECgDSBCAECgDtBCAECgAGBSAECgA/BR8FCgBfBR8FCgDCBSIBCgDJBSIBFgA9BhUGFgBk
BhUGCwB9BgAAFgCtBhUGBgDZBtsAGgBUBysHCgCTByIBCgC1B6IHCgDSByIBCgDXByIBCgD7ByAE
DgAnCBEIDgBACBEICgBVCB8FAAAAAAEAAAAAAAEAAQABABAAOQAAAAUAAQABAAEAEABGAAAACQAB
AAgAAQAQAFQAAAANAAMADAABABAAYAAAAA0ABAANAAEAEABqAAAADAAFABAAAAAQAHUAfwANAAkA
FAAAARAAtQB/ABEACwAYAAYAVAA1AAYAYAA5AAEAUQJRAAEAUQJRAAEArwJbAAEAuAJbAAEAxAJe
AAEAzwJbABEADQNhABEAOgNlABEAfgODAFAgAAAAAIYYmwETAAEAWyAAAAAAhgihAR0ABABwIAAA
AACGCKwBIQAEAHkgAAAAAIYIvgElAAQAjiAAAAAAhgjJASEABACXIAAAAACGANsBIQAEAJ8gAAAA
AIYA4wEhAAQApyAAAAAAhhibAT0ABADHIAAAAADGABkCQQAEAOwgAAAAAMYBJgJLAAgA/yAAAAAA
xgE6AksACQABIQAAAACGGJsBVQAKABAhAAAAAIYYmwFVAAsAHyEAAAAAhghhAiUADABFIQAAAACG
CHQCJQAMAGwhAAAAAMYA1QI9AAwA4SEAAAAAxgDgAj0ADADsIQAAAADGADoCSwAMAGEiAAAAAIYY
mwE9AA0AaSIAAAAAgxibAT0ADQB0IgAAAACTCEoDaQANAK0iAAAAAJMIXgNuAA0AtCIAAAAAkwhq
A3MADQC8IgAAAACWCI4DhwAOAM8iAAAAAIYYmwE9AA4AwyIAAAAAkRhwCCkBDgAAAAEAogMAAAIA
qQMAAAMAvQMAAAEAxwMAAAIAzwMAAAMAogMAAAQAvQMAAAEAogMAAAEA2QMAAAEA3QMAAAEA3QMA
AAEA2QMAAAEA5wNJAJsBkQBRAJsBkQBZAJsBkQBhAJsBkQBpAJsBkQBxAJsBkQB5AJsBkQCBAJsB
kQCJAJsBkQCRAJsBkQCZAJsBlgChAJsBPQAJAJsBEwAJAKIDmwAJAKkDnwApAKgFowAJALEFqAAp
ALgFrQAJANsBIQAJAOMBIQARAJsBPQCpANoFsgARAOEFuQAZAJsBPQARAE4GvwC5AHQGxAARAJgG
ygDBAMUGzwDZAJsBPQARANUCPQCpAAAH2gARAG0H4QDhAIMH5gARAOACPQDpAJkHJQCpAAAH8QDx
AJsBPQD5AOkH/gD5AAQIBgE5AJsBDAERAZsBGQEhAZsBPQAhAJsBPQAuABsApQEuAGMAywEuAAsA
LQEuABMAdQEuACMApQEuACsApQEuADMAdQEuADsAqwEuAEMApQEuAFsAwgHDAOsA1QDjACsB1QDp
AEsBIAEJAUsBIAFhAVMB1QD4ABQBAgABAAUABQAHAAcACAAJAAAA7wEpAAAA9gEtAAAABAIxAAAA
CwItAAAAjAIxAAAAmwIxAAAA/QJ5AAAAdgN+AAAAmgOMAAIAAgADAAIAAwAFAAIABAAHAAIABQAJ
AAIADgALAAIADwANAAIAFQAPAAIAFgARAAEAFwARAAIAGAATAASAAAABAAAAqBb0bQAAAAAAAH0F
AAAMAAAAAAAAAAAAAAABAL4AAAAAAAQAAAAAAAAAAAAAAAoAGQEAAAAABAAAAAAAAAAAAAAACgAi
AQAAAAAMAAAAAAAAAAAAAAABAF0BAAAAAAwAAAAAAAAAAAAAAAEA8gUAAAAADAAAAAAAAAAAAAAA
AQAHBwAAAAAAAAAAAQAAAHcIAAAAAAA8TW9kdWxlPgBTQ184NjBjODY3ZjMyNjE0OGFjYjMyNThj
MDQ3OTA2NTY2MC5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rp
b25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJlc291cmNlcwBTQ184NjBjODY3ZjMyNjE0OGFjYjMy
NThjMDQ3OTA2NTY2MC5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZl
cgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9yAGdldF9Qb29sSWQAZ2V0X1Bv
b2xJZF9Jc051bGwAZ2V0X1N0YXR1cwBnZXRfU3RhdHVzX0lzTnVsbABOZXh0Um93AEVuZE9mUm93
c2V0AFBvb2xJZABQb29sSWRfSXNOdWxsAFN0YXR1cwBTdGF0dXNfSXNOdWxsAFByb2Nlc3NJbnB1
dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9u
ZW50AGdldF9CYXNlUG9vbERCTmFtZQBnZXRfVGFyZ2V0U3FsQ29ubmVjdGlvbgBCYXNlUG9vbERC
TmFtZQBUYXJnZXRTcWxDb25uZWN0aW9uAF9TcWxDb25uAF9Qb29sREJOYW1lAGJGaXJlQWdhaW4A
X3NNc2cAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBCdWZmZXJDb2x1
bW5JbmRleGVzAE91dHB1dE1hcABJbnB1dElEAElucHV0TmFtZQBSb3cAQ29tcG9uZW50AHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3Rl
bS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNz
ZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBTQ184NjBjODY3ZjMyNjE0OGFjYjMyNThjMDQ3OTA2NTY2MC5jc3Byb2oAR2V0SW50NjQASXNO
dWxsAEdldFN0cmluZwBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5k
ZXhlcwBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTVmFyaWFibGVzMTAwAGdldF9SZWFkT25seVZhcmlh
YmxlcwBJRFRTVmFyaWFibGUxMDAAZ2V0X0l0ZW0AU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQA
Z2V0X0V2YWx1YXRvckNvbnRleHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0VmFsdWVXaXRo
Q29udGV4dABTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBGb3JtYXQATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1l
dGFEYXRhAEZpcmVJbmZvcm1hdGlvbgBJbnQ2NABUb1N0cmluZwBTeXN0ZW0uRGlhZ25vc3RpY3MA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ184NjBjODY3ZjMyNjE0OGFjYjMyNThjMDQ3OTA2NTY2
MC5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0ACAA
MAAAH18AQgBhAHMAZQBQAG8AbwBsAEQAQgBOAGEAbQBlAAApXwBUAGEAcgBnAGUAdABTAHEAbABD
AG8AbgBuAGUAYwB0AGkAbwBuAABXQwBvAG4AbgBlAGMAdABpAG8AbgAgAHMAdAByAGkAbgBnACAA
PQAgAHsAMAB9ADsAIABQAG8AbwBsAEQAQgBOAGEAYQBtAGUAIAA9ACAAewAxAH0AOwAALVMAeQBu
AGMAIABQAG8AbwBsAFMAdABhAHQAdQBzACAAaQBuACAASgBvAGIAAAEAgJVDAG8AbgBuAGUAYwB0
AGkAbwBuACAAcwB0AHIAaQBuAGcAIAA9ACAAewAwAH0AOwAgAFAAbwBvAGwARABCAE4AYQBhAG0A
ZQAgAD0AIAB7ADEAfQA7ACAAUABvAG8AbABJAEQAIAA9ACAAewAyAH0AOwAgAFAAbwBvAGwAUwB0
AGEAdAB1AHMAIAA9ACAAewAzAH0AAH9TAEMAXwA4ADYAMABjADgANgA3AGYAMwAyADYAMQA0ADgA
YQBjAGIAMwAyADUAOABjADAANAA3ADkAMAA2ADUANgA2ADAALgBjAHMAcAByAG8AagAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABySZ3JoCz3T6OTEmwhs5hVAAiJ
hF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkDIAAKAyAAAgMgAA4DKAAKAygAAgMoAA4DBhIQAwYS
FAMgAAEJIAQBCA4SFRIZBSABARIIAwYSCQUgAQESCQIGDgIGAgMGEh0DBhIhBAAAEh0EAAASIQUA
AQESIQQIABIdBAgAEiEDBhIgBAAAEiAECAASIAQgAQEOBCABAQgDBhIVAwYdCAQgAQoIBCABAggE
IAEOCAYgAgIOEVkFIAEdCAgEIAASXQUgARJhHAQAABJlBSABHBJpBAEAAAAGAAMODhwcBCAAEnEK
IAYBCA4ODggQAgYAAg4OHRwFBwIdHAoHAAESfRGAgQUgABKAhQcgAgEOEoCFBAcBEh0GIAEBEYCN
CAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ184NjBjODY3ZjMyNjE0OGFjYjMyNThj
MDQ3OTA2NTY2MC5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAADcAAAAAAAAAAAAAHjcAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAABA3AAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAPRtqBYAAAEA9G2oFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAwADAA
MAA0AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4
ADYAMABjADgANgA3AGYAMwAyADYAMQA0ADgAYQBjAGIAMwAyADUAOABjADAANAA3ADkAMAA2ADUA
NgA2ADAALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADUAOAAwADAALgAyADgAMQA0ADgAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBDAF8AOAA2ADAAYwA4ADYANwBmADMAMgA2ADEANAA4AGEAYwBiADMAMgA1ADgAYwAw
ADQANwA5ADAANgA1ADYANgAwAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAy
AAAAiAAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADgANgAwAGMA
OAA2ADcAZgAzADIANgAxADQAOABhAGMAYgAzADIANQA4AGMAMAA0ADcAOQAwADYANQA2ADYAMAAu
AGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBDAF8AOAA2ADAAYwA4ADYANwBmADMAMgA2ADEANAA4AGEAYwBiADMAMgA1ADgAYwAwADQANwA5
ADAANgA1ADYANgAwAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANQA4ADAAMAAuADIAOAAxADQAOAAAAAAASAAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADAAMAAuADIAOAAxADQAOAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_860c867f326148acb3258c0479065660</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_BasePoolDBName,User::_TargetSqlConnection</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">38cbb09c1dfc7143d3f041fcfccbde26</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Inputs[Input 0].Columns[PoolId]"
                              cachedDataType="i8"
                              cachedName="PoolId"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[PoolId]" />
                            <inputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Inputs[Input 0].Columns[Status]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="Status"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[Status]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Inputs[Input 0]">
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status"
                      componentClassID="Microsoft.OLEDBCommand"
                      contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Executes an SQL command for each row in a dataset."
                      name="Update Pool Status"
                      usesDispositions="true"
                      validateExternalMetadata="False"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                          name="CommandTimeout">0</property>
                        <property
                          dataType="System.String"
                          description="The SQL command to be executed."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">Update dbo.tblDimPool
 Set Status = ?
Where DimPoolId = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Connections[OleDbConnection]"
                          connectionManagerID="Package.ConnectionManagers[OLEDB_JobConnection]"
                          connectionManagerRefId="Package.ConnectionManagers[OLEDB_JobConnection]"
                          description="The OLE DB runtime connection used to access the database."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input]"
                          errorOrTruncationOperation="Command Execution"
                          errorRowDisposition="FailComponent"
                          hasSideEffects="true"
                          name="OLE DB Command Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input].Columns[PoolId]"
                              cachedDataType="i8"
                              cachedName="PoolId"
                              externalMetadataColumnId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[PoolId]" />
                            <inputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input].Columns[Status]"
                              cachedDataType="wstr"
                              cachedLength="200"
                              cachedName="Status"
                              externalMetadataColumnId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output].Columns[Status]" />
                          </inputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                              dataType="wstr"
                              length="200"
                              name="Param_0">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">65</property>
                              </properties>
                            </externalMetadataColumn>
                            <externalMetadataColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                              dataType="i8"
                              name="Param_1">
                              <properties>
                                <property
                                  dataType="System.Int32"
                                  description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                                  name="DBParamInfoFlags">17</property>
                              </properties>
                            </externalMetadataColumn>
                          </externalMetadataColumns>
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Outputs[OLE DB Command Output]"
                          exclusionGroup="1"
                          name="OLE DB Command Output"
                          synchronousInputId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Outputs[OLE DB Command Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="OLE DB Command Error Output"
                          synchronousInputId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job.Paths[OLE DB Source Output]"
                      endId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Inputs[Input 0]"
                      name="OLE DB Source Output"
                      startId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job.Outputs[OLE DB Source Output]" />
                    <path
                      refId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job.Paths[Output 0]"
                      endId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status.Inputs[OLE DB Command Input]"
                      name="Output 0"
                      startId="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{4FB64C88-F3B7-4F0D-8D7D-5A1E501FEC40}"
              DTS:ObjectName="{4FB64C88-F3B7-4F0D-8D7D-5A1E501FEC40}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::_TargetSqlConnection" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{9361277D-0016-4CD8-A87E-30AA62084F26}"
              DTS:ObjectName="{9361277D-0016-4CD8-A87E-30AA62084F26}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::_BasePoolDBName" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Update Status\Update PoolHeader Status"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B7137FE0-B878-491A-817C-34725168A8FA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update PoolHeader Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{13B01A21-35F5-4403-8DE8-4426F285358A}"
              SQLTask:SqlStatementSource="exec usp_UpdatePoolStatus ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::TargetPoolId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::PoolStatus"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Update Status.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F29F52D0-66B6-4240-9627-4FC7B5469FE0}"
          DTS:Expression="@[User::_IsSYNCRequired] == true"
          DTS:From="Package\Update Status\Update PoolHeader Status"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Update Status\SYNC Pool Status with PoolHeader" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AE9F93D7-0C6A-4BF9-B2A1-B56E6F6E85A8}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::_IsSYNCRequired] == true"
      DTS:From="Package\Check Current Pool Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get Jobs SQL Connections" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D7CB2F4C-BCDD-46D8-AEC4-47B33D54B01B}"
      DTS:From="Package\Get Jobs SQL Connections"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Update Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{953D3E90-3392-433B-850F-D626E2CF601E}"
      DTS:Expression="@[User::_IsSYNCRequired] == true"
      DTS:From="Package\Update Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Pool Status Cache" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{B32DB6AB-35D4-4C80-87D8-35C0854F4AE1}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Check Current Pool Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{3970185C-A08B-494E-AA8C-85CEB826FFAB}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::_IsSYNCRequired] == false"
      DTS:From="Package\Check Current Pool Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Get Current Job SQL Connection" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{DC67A406-4191-4331-B397-166E9F85D54C}"
      DTS:Expression="@[User::_IsSYNCRequired] == true"
      DTS:From="Package\Pool Status Cache"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\SYNC with SharePoint" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{9D8B0BB6-22A4-4F79-BF8D-F9C12F64FF6B}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::_IsSYNCRequired] == false"
      DTS:From="Package\Get Current Job SQL Connection"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Update Status" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="233.6,44"
          Id="Package\Check Current Pool Status\Get Current Pool Status"
          TopLeft="27.132075471698,199.603773584906" />
        <NodeLayout
          Size="224,41.6"
          Id="Package\Check Current Pool Status\Get Current PoolHeader Status"
          TopLeft="24.9811320754716,30.8867924528302" />
        <NodeLayout
          Size="232,44"
          Id="Package\Check Current Pool Status\Set flag IsSYNCRequired"
          TopLeft="27.132075471698,114.77358490566" />
        <EdgeLayout
          Id="Package\Check Current Pool Status.PrecedenceConstraints[Constraint]"
          TopLeft="140.056603773585,72.8867924528302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.8867924528298"
              Start="0,0"
              End="0,34.3867924528298">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3867924528298" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Check Current Pool Status.PrecedenceConstraints[Constraint 1]"
          TopLeft="143.924528301887,199.603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-42.4905660377358,-40.9056603773585"
              Start="0,0"
              End="-42.4905660377358,-33.4056603773585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-20.4528301886793" />
                  <mssgle:LineSegment
                    End="-42.4905660377358,-20.4528301886793" />
                  <mssgle:LineSegment
                    End="-42.4905660377358,-33.4056603773585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="292.8,299.2"
          Size="292.8,343.2"
          Id="Package\Check Current Pool Status"
          TopLeft="295.047169811321,120.518867924528" />
        <NodeLayout
          Size="292.8,44"
          Id="Package\Get Current Job SQL Connection"
          TopLeft="5.5,482.481132075472" />
        <NodeLayout
          Size="292.8,44"
          Id="Package\Get Jobs SQL Connections"
          TopLeft="645.801886792453,486.933962264151" />
        <NodeLayout
          Size="292.8,44"
          Id="Package\Package Initialization"
          TopLeft="295.349056603774,5.5" />
        <NodeLayout
          Size="180.8,46.4"
          Id="Package\Pool Status Cache\Prepare Pool Status Cache"
          TopLeft="53.4716981132075,30.2452830188679" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="297.6,111.2"
          Size="297.6,153.6"
          Id="Package\Pool Status Cache"
          TopLeft="295.198113207547,977.801886792453" />
        <NodeLayout
          Size="212.8,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint"
          TopLeft="42.4905660377358,39.7924528301887" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="302.4,132"
          Size="302.4,176"
          Id="Package\SYNC with SharePoint"
          TopLeft="295.235849056604,1242.3679245283" />
        <NodeLayout
          Size="228.8,44"
          Id="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job"
          TopLeft="9.09433962264148,19.3773584905661" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="249.6,88.8"
          Size="249.6,132.8"
          Id="Package\Update Status\SYNC Pool Status with PoolHeader"
          TopLeft="18.867924528302,123.22641509434" />
        <NodeLayout
          Size="212,44"
          Id="Package\Update Status\Update PoolHeader Status"
          TopLeft="37.6603773584906,23.9056603773585" />
        <EdgeLayout
          Id="Package\Update Status.PrecedenceConstraints[Constraint]"
          TopLeft="143.471698113208,67.8301886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.716981132075489,55.3962264150942"
              Start="0,0"
              End="0.716981132075489,47.8962264150942">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6981132075471" />
                  <mssgle:LineSegment
                    End="0.716981132075489,27.6981132075471" />
                  <mssgle:LineSegment
                    End="0.716981132075489,47.8962264150942" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="294.4,278.4"
          Size="294.4,321.6"
          Id="Package\Update Status"
          TopLeft="295.084905660377,583.72641509434" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="482.820754716981,439.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="309.245283018868,46.9433962264151"
              Start="0,0"
              End="309.245283018868,39.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4716981132076" />
                  <mssgle:LineSegment
                    End="309.245283018868,23.4716981132076" />
                  <mssgle:LineSegment
                    End="309.245283018868,39.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="146.622641509434,28.4716981132076,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="792.066037735849,530.858490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-308.22641509434,52.8679245283019"
              Start="0,0"
              End="-308.22641509434,45.3679245283019">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.4150943396227" />
                  <mssgle:LineSegment
                    End="-308.22641509434,26.4150943396227" />
                  <mssgle:LineSegment
                    End="-308.22641509434,45.3679245283019" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="442.330188679245,906.367924528302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1.84905660377353,71.433962264151"
              Start="0,0"
              End="1.84905660377353,63.933962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.6981132075472" />
                  <mssgle:LineSegment
                    End="1.84905660377353,35.6981132075472" />
                  <mssgle:LineSegment
                    End="1.84905660377353,63.933962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="441.61320754717,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-0.301886792452819,71.0943396226415"
              Start="0,0"
              End="-0.301886792452819,63.5943396226415">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5471698113208" />
                  <mssgle:LineSegment
                    End="-0.301886792452819,35.5471698113208" />
                  <mssgle:LineSegment
                    End="-0.301886792452819,63.5943396226415" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="399.801886792453,439.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-248.037735849057,42.4905660377359"
              Start="0,0"
              End="-248.037735849057,34.9905660377359">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.245283018868" />
                  <mssgle:LineSegment
                    End="-248.037735849057,21.245283018868" />
                  <mssgle:LineSegment
                    End="-248.037735849057,34.9905660377359" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-132.018867924528,26.245283018868,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="444.179245283019,1132.55660377359">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.03773584905662,109.811320754717"
              Start="0,0"
              End="2.03773584905662,102.311320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.9056603773583" />
                  <mssgle:LineSegment
                    End="2.03773584905662,54.9056603773583" />
                  <mssgle:LineSegment
                    End="2.03773584905662,102.311320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="151.764150943396,526.405660377358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="249.056603773585,57.3207547169811"
              Start="0,0"
              End="249.056603773585,49.8207547169811">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.6415094339623" />
                  <mssgle:LineSegment
                    End="249.056603773585,28.6415094339623" />
                  <mssgle:LineSegment
                    End="249.056603773585,49.8207547169811" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="116.528301886793,33.6415094339623,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Current Job SQL Connection">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="209,42"
          Id="Package\Get Current Job SQL Connection\Tranform Connection String"
          TopLeft="5.50000000000003,107.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Get Current Job SQL Connection\SQL Connections"
          TopLeft="31,209.5" />
        <NodeLayout
          Size="178,42"
          Id="Package\Get Current Job SQL Connection\Get SQL Connections"
          TopLeft="21,5.5" />
        <EdgeLayout
          Id="Package\Get Current Job SQL Connection.Paths[Output 0]"
          TopLeft="110,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Current Job SQL Connection.Paths[OLE DB Source Output]"
          TopLeft="110,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Get Jobs SQL Connections">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Get Jobs SQL Connections\Tranform Connection String"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Get Jobs SQL Connections\SQL Connections"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Get Jobs SQL Connections\Get SQL Connections"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Get Jobs SQL Connections.Paths[Output 0]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Jobs SQL Connections.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Pool Status Cache\Prepare Pool Status Cache">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Pool Status Cache\Prepare Pool Status Cache\Get Pool ID And Status"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID and Status"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Pool Status Cache\Prepare Pool Status Cache\Cache Indexed PoolID"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Pool Status Cache\Prepare Pool Status Cache.Paths[Cache Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Pool Status Cache\Prepare Pool Status Cache.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\SYNC with SharePoint\update pool status in sharepoint">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\SharePoint Destination"
          TopLeft="191.047169811321,712.292452830189" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Union All"
          TopLeft="191.047169811321,122.556603773585" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool folder list"
          TopLeft="364.632075471698,5.5" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Convert Pool id Type"
          TopLeft="191.047169811321,358.405660377359" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Get sharepoint pool list"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Get changed pool status"
          TopLeft="191.047169811321,594.254716981132" />
        <NodeLayout
          Size="188,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Log Info for no matching pools"
          TopLeft="443.047169811321,712.594339622642" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Check pool status"
          TopLeft="191.047169811321,476.330188679245" />
        <NodeLayout
          Size="210,44"
          Id="Package\SYNC with SharePoint\update pool status in sharepoint\Gurantee no dupliate sharepoint pools"
          TopLeft="191.047169811321,240.481132075472" />
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Union All Output 1]"
          TopLeft="295.877358490566,166.481132075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Sort Output]"
          TopLeft="295.877358490566,284.405660377359">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[SharePoint Source Output1]"
          TopLeft="469.462264150943,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-132.075471698113,73.1320754716981"
              Start="0,0"
              End="-132.075471698113,65.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.566037735849" />
                  <mssgle:LineSegment
                    End="-132.075471698113,36.566037735849" />
                  <mssgle:LineSegment
                    End="-132.075471698113,65.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[SharePoint Source Output]"
          TopLeft="110.330188679245,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="144.037735849057,73.1320754716981"
              Start="0,0"
              End="144.037735849057,65.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.566037735849" />
                  <mssgle:LineSegment
                    End="144.037735849057,36.566037735849" />
                  <mssgle:LineSegment
                    End="144.037735849057,65.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Lookup No Match Output1]"
          TopLeft="337.38679245283,638.179245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199.509433962264,74.4150943396227"
              Start="0,0"
              End="199.509433962264,66.9150943396227">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.2075471698113" />
                  <mssgle:LineSegment
                    End="199.509433962264,37.2075471698113" />
                  <mssgle:LineSegment
                    End="199.509433962264,66.9150943396227" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="43.948330262382,42.2075471698113,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Lookup No Match Output]"
          TopLeft="295.877358490566,520.254716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,27.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Lookup Match Output]"
          TopLeft="262.380503144654,638.254716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.6666666666667,74.037735849057"
              Start="0,0"
              End="21.6666666666667,66.537735849057">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9509933302423" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9509933302423"
                    Point2="0,29.9509933302423"
                    Point3="4,29.9509933302423" />
                  <mssgle:LineSegment
                    End="17.6666666666667,29.9509933302423" />
                  <mssgle:CubicBezierSegment
                    Point1="17.6666666666667,29.9509933302423"
                    Point2="21.6666666666667,29.9509933302423"
                    Point3="21.6666666666667,33.9509933302423" />
                  <mssgle:LineSegment
                    End="21.6666666666667,66.537735849057" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.3580533854167,34.9509933302423,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SYNC with SharePoint\update pool status in sharepoint.Paths[Data Conversion Output]"
          TopLeft="295.877358490566,402.330188679245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,74"
              Start="0,0"
              End="0,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Script Component"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Update Pool Status"
          TopLeft="NaN,NaN" />
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job\Get Pools for Job"
          TopLeft="NaN,NaN" />
        <EdgeLayout
          Id="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job.Paths[Output 0]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update Status\SYNC Pool Status with PoolHeader\SYNC Pool status in Job.Paths[OLE DB Source Output]"
          TopLeft="NaN,NaN">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="{assembly:Null}"
              Start="0,0"
              End="0,0">
              <mssgle:Curve.Segments>
                <assembly:Null />
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>