<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/2/2012 2:49:17 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AU2104SDVDEV23"
  DTS:CreatorName="TSYDEV\tfs_L048057"
  DTS:DTSID="{51C7EFD0-5396-4A23-8BF7-6DB9C4B131EB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="3081"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="PoolCut BasePool ApplyEC"
  DTS:PackageType="5"
  DTS:VersionBuild="327"
  DTS:VersionGUID="{82E44CD4-697D-49C5-802C-856CC82E1401}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ApplyEC.log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{5FE32D20-47D8-47BB-9345-2620886F62B8}"
      DTS:ObjectName="ApplyEC.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogPath] + @[System::PackageName] + "_" +  (DT_WSTR, 4)DATEPART("yyyy", @[System::StartTime]) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mm", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("dd", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("hh", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mi", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("ss", @[System::StartTime]), 2)  +  ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="E:\TSSWCFServices\TaskProcessServices\Poolcut\SecuritisationFiles\LogPoolCut BasePool ApplyEC_20151209202652.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[IncludedAuditLoans]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{35961482-6469-4C22-A667-2EF1B573E5CA}"
      DTS:ObjectName="IncludedAuditLoans">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="20"
              DTS:IndexPosition="1"
              DTS:ObjectName="DimLoanID"
              DTS:DTSID="{8D40E9AC-F8E2-4E77-839F-FA103510A9D0}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_TargetPool]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{603E36D9-43AD-4C2F-BCF7-4E42DBB03E1C}"
      DTS:ObjectName="OLEDB_TargetPool">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::OLEDBNativeConnString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=MSSQL;Initial Catalog=Job_2_20151102_10170;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="ApplyEC.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{B6CEFC91-BB41-4F84-96C2-95702376933E}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FDFA513-B2AD-43C7-8B09-B5D916FC7A9F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DEBUG">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38D058B3-EAA1-421A-8C21-1B6DA387F1E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimOrganisationID">
      <DTS:VariableValue
        DTS:DataType="8">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F60165CE-7C76-4075-9C2B-CB96D73910CF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimReportingDateID">
      <DTS:VariableValue
        DTS:DataType="8">20151102</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC332E1D-8FA3-4996-9856-963D82D38CE2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimSourceTrustID">
      <DTS:VariableValue
        DTS:DataType="8">23</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55B70077-C4D2-4A1A-883D-491B2A296DD3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimTargetTrustID">
      <DTS:VariableValue
        DTS:DataType="8">50</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47A65516-366C-46E6-A597-923EEA41A566}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ECPassNo">
      <DTS:VariableValue
        DTS:DataType="8">ECPass1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCF05F3B-CC79-47C5-81B6-912ABA6695CA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ECRunningDB">
      <DTS:VariableValue
        DTS:DataType="8">Job_2_20151102_10170</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B00FB1BF-C76F-4CAE-8ABB-F55CA30B49E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ECRunningServer">
      <DTS:VariableValue
        DTS:DataType="8">MSSQL</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{25CA3DF5-D758-4F85-A6B3-E289380AB290}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\TSSWCFServices\TaskProcessServices\Poolcut\SecuritisationFiles\Log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF129341-D2D7-40F3-B329-19D8AA161FE6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::ECRunningServer]  + &quot;;Initial Catalog=&quot; + @[User::ECRunningDB] +  &quot;;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBConnString_ALR">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=MSSQL;Initial Catalog=Job_2_20151102_10170;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8060FA23-4AF4-4402-89B8-47708EC07671}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::ECRunningServer]  + &quot;;Initial Catalog=&quot;+ @[User::ECRunningDB]  +&quot;;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBNativeConnString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=MSSQL;Initial Catalog=Job_2_20151102_10170;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F7498697-94B9-4899-9B71-5E7C3EAB7D62}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PoolId">
      <DTS:VariableValue
        DTS:DataType="8">10170</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,13,OnInformation</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\FactCustomerECResult"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{2B41F2B1-5977-4210-A9EF-004DEF81C301}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="FactCustomerECResult">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\FactCustomerECResult\Apply EC For FactCustomer"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{946189DA-FD6B-41AE-A960-B645C832F81D}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply EC For FactCustomer"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="100"
              defaultBufferSize="40485760"
              version="1">
              <components>
                <component
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Apply FactCustomer EC"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ECResultBuffer ECResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ECResultBuffer)
        {
            ECResultBuffer.SetEndOfRowset();
            ECResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ECResult"))
            {
                ECResultBuffer = new ECResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String OLEDBConnStringALR
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["OLEDBConnString_ALR"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringALR);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnabled)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            //MessageBox.Show(Row.CriteriaDescription.ToString());
            //MessageBox.Show(sQuery);
            try
            {
                SqlCommand _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    ECResultBuffer.AddRow();
                    //ECResultBuffer.DimPoolId = (long)dr["DimPoolId"];
                    //ECResultBuffer.DimECId = (long)dr["DimECId"];
                    //ECResultBuffer.DimSecurityId = (long)dr["DimSecurityId"];

                    ECResultBuffer.DimPoolId = Convert.ToInt64(dr["DimPoolId"]);
                    ECResultBuffer.DimECId = Convert.ToInt64(dr["DimECId"]);
                    ECResultBuffer.DimCustomerId = Convert.ToInt64(dr["DimCustomerId"]); 
                    //MessageBox.Show(dr["DimPoolId"].GetType().ToString() + "_" + dr["DimECId"].GetType().ToString() + "_" + dr["DimLoanId"].GetType().ToString());
                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply FactCustomer EC", sMsg, "", 0, ref bFireAgain);

            }
            catch (Exception ex)
            {
                //TODO Logging
                string sEx = string.Format("Query:{0}{1}{2}", sQuery, Environment.NewLine, ex.Message);
                throw new ApplicationException(sEx);
                //MessageBox.Show(ex.Message);
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply FactCustomer EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[4]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[5]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ECResultBuffer: ScriptBuffer

{
    public ECResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 DimPoolId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DimPoolId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimCustomerId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DimCustomerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimECId
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DimECId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{BBF8F5C0-0B99-412C-AD82-7627C764822C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace>
    <AssemblyName>SC_5C0F96498AE04EDCB112234AE81C11E5</AssemblyName>
    <ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_5C0F96498AE04EDCB112234AE81C11E5.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOMcaFYAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAAzkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIBBAABLAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1CEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
QQAAAAAAAEgAAAACAAUAACYAAIAbAAABAAAAAAAAAEglAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipSAnsOAAAKAnsPAAAKF5RvEgAACioiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EgAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEgAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvEwAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvFAAACioiAhsoEQAACioeAigVAAAKKh4C
KBYAAAoqKgIDBAUoDQAACio6AhYDjBcAAAEoFwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKejoC
FwOMFwAAASgXAAAKKloDLAgCFygYAAAKKnIBAABwcxkAAAp6OgIYA4wXAAABKBcAAAoqWgMsCAIY
KBgAAAoqcgEAAHBzGQAACnoeAigaAAAKKh4CKBsAAAoqHgIoFgAACip+AigcAAAKAgJzIgAABn0B
AAAEAgJzIwAABn0CAAAEKgAAAAMwBABPAAAAAAAAAARyngAAcBpvHQAACiwVAgUCAygeAAAKDgRz
AQAABm8gAAAGBW8fAAAKLCMCAnsEAAAEF1h9BAAABAJ7BAAABBczDAJvHAAABgIoHQAABioGKm4C
ewMAAAQsEgJ7AwAABG8YAAAGAhR9AwAABCoAAAATMAUAPQAAAAEAABEWCisuBAaUDgRyrgAAcCgg
AAAKMxkCBQaaAgQGlCgeAAAKDgRzEAAABn0DAAAEBhdYCgYDMs4Cbx8AAAYqBipKKwcCA28hAAAG
A28OAAAGLfEqBio6AighAAAKAgN9BQAABCo6AighAAAKAgN9BgAABCqWAnsGAAAEbyIAAApywAAA
cG8jAAAKKCQAAApvJQAACnQZAAABKqICKCcAAAoCAnsCAAAEbyQAAAZzKAAACn0HAAAEAnsHAAAE
bykAAAoqZgIoKgAACgJ7BwAABG8rAAAKAhR9BwAABCoAGzAHAG0BAAACAAARFwpy6AAAcAsDbwoA
AAY5KgEAAANvAgAABhYDbwIAAAZvLAAACigtAAAKby4AAAoMKC8AAAoIbzAAAApvMQAACg0JAnsH
AAAEczIAAAoTBBEEFm8zAAAKEQRvNAAAChMFFhMGK2UCewMAAARvFwAABgJ7AwAABBEFcuoAAHBv
NQAACig2AAAKbxEAAAYCewMAAAQRBXL+AABwbzUAAAooNgAACm8VAAAGAnsDAAAEEQVyDgEAcG81
AAAKKDYAAApvEwAABhEGF1gTBhEFbzcAAAotkhEFbzgAAAoUEwVyKgEAcANvCAAABm85AAAKEQaM
JwAAASg6AAAKCwIoOwAACiDoAwAAcj4BAHAHcugAAHAWEgBvPAAACt5SEwdyagEAcAkoPQAAChEH
bz4AAAooPwAAChMIEQhzQAAACnpyigEAcANvCAAABihBAAAKCwIoOwAACiDoAwAAcj4BAHAHcugA
AHAWEgBvPAAACioAAAABEAAAAABBANkaASMqAAABBioeAigaAAAGKh4CKCEAAAoqAAATMAIALQAA
AAMAABF+CAAABC0gctwBAHDQCAAAAihDAAAKb0QAAApzRQAACgoGgAgAAAR+CAAABCoafgkAAAQq
HgKACQAABCoafgoAAAQqLnMvAAAGgAoAAAQqHgIoSAAACioAAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABkCQAAI34AANAJAADQDAAAI1N0cmluZ3MA
AAAAoBYAAFwCAAAjVVMA/BgAABAAAAAjR1VJRAAAAAwZAAB0AgAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAMgAAAAkAAAAKAAAAMAAAABoAAABIAAAADwAAAAMAAAAFAAAAFgAA
ABcAAAABAAAABwAAAAEAAAAAAAoAAQAAAAAABgAEAeMABgARAeMACgAxASoBDgBNATgBEgCGAeMA
BgCVAeMAEgCpAeMAFgBJBTMFCgCIBXcFCgC5BaQFCgCsBpIGCgDXBsUGCgDuBsUGCgALB8UGCgAq
B8UGCgBDB8UGCgBcB8UGCgB3B8UGCgCSB8UGCgCrB8UGCgDkB8QHCgAECMQHCgB0CCoBCgCLCCoB
CgClCCoBCgCsCCoBGgA8CRQJGgBjCRQJCwBzCQAAGgCjCRQJBgDPCeMAFgAJCvYJCgAsCioBCgBU
CkgKFgBuCjMFFgB5CvYJFgCWCjMFFgCyCvYJCgDVCioBHgAvCwYLCgBuCyoBCgCGCyoBCgCcCyoB
CgDEC7ELCgDhCyoBCgDmCyoBCgAKDMUGDgA2DCAMDgBPDCAMCgBkDMQHAAAAAAEAAAAAAAEAAQAB
ABAAMgAAAAUAAQABAAEAEAA/AAAABQABABAAAQAQAE4AAAAJAAEAGgABABAAXAAAAA0ABQAiAAEA
EABoAAAADQAGACMAAQAQAHIAAAAQAAcAJQAAABAAfQCHAA0ACAAqAAABEAC9AIcAEQAKAC4ABgBc
AE0ABgBoAFEABgA/AFUAAQBkBFkAAQDtBHgAAQDtBHgAAQBXBYIAEQCYBYYAEQDFBYoAEQAJBqgA
UCAAAAAAhhijARMAAQBbIAAAAACGCLQBHQAEAHUgAAAAAIYIxAEiAAQAfiAAAAAAhgjbASYABACT
IAAAAACGCPMBIgAEAJwgAAAAAIYIEgImAAQAsSAAAAAAhggnAiIABAC6IAAAAACGCEMCJgAEAM8g
AAAAAIYIVAIiAAQA2CAAAAAAhghsAiIABADtIAAAAACGCHoCIgAEAPYgAAAAAIYIjwIqAAQACyEA
AAAAhgibAiIABAAUIQAAAACGAK4CIgAEABwhAAAAAIYAtgIiAAQAJCEAAAAAhhijARMABAAvIQAA
AACGCIwDPwAHAD4hAAAAAIYImgNEAAgAVSEAAAAAhgivAz8ACQBkIQAAAACGCMEDRAAKAHshAAAA
AIYI2gM/AAsAiiEAAAAAhgjmA0QADAChIQAAAACGAPkDSQANAKkhAAAAAIYAAARJAA0AsSEAAAAA
hgC2AiIADQC5IQAAAACGGKMBSQANANwhAAAAAMYAcwRcAA0ANyIAAAAAxgGABEkAEQA5IgAAAACB
AI4ESQARAFgiAAAAAMYAogRmABEAoSIAAAAAxgGuBEkAFQCjIgAAAADGAcIEcgAVALYiAAAAAMYB
1gRyABYAuCIAAAAAhhijAXwAFwDHIgAAAACGGKMBfAAYANYiAAAAAIYI/QQmABkA/CIAAAAAxgBg
BUkAGQAlIwAAAADGAGsFSQAZAEAjAAAAAMYA1gRyABkAzCQAAAAAxgCuBEkAGgDOJAAAAACGGKMB
SQAaANYkAAAAAIMYowFJABoA4CQAAAAAkwjVBY4AGgAZJQAAAACTCOkFkwAaACAlAAAAAJMI9QWY
ABoAKCUAAAAAlggZBqwAGwA7JQAAAACGGKMBSQAbAC8lAAAAAJEYfwyxARsAAAABAC0GAAACADQG
AAADAEgGAAABAC0GAAACADQGAAADAEgGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAAB
AFIGAAABAFgGAAACAGAGAAADAC0GAAAEAEgGAAABAGoGAAACAHIGAAADAHwGAAAEAEgGAAABAC0G
AAABAIQGAAABAIgGAAABAIgGAAABAIQGAAABAFIGWQCjAbYAYQCjAbYAaQCjAbYAcQCjAbYAeQCj
AbYAgQCjAbYAiQCjAbYAkQCjAbYAmQCjAbYAoQCjAbYAqQCjAbsAsQCjAUkACQCjARMACQAtBsAA
CQA0BsQAKQBGCMgACQBPCM0AKQBWCNIAKQBgCM0AKQBrCNcACQCuAiIACQC2AiIACQB6CNwACQCD
CLsAwQCjAbYACQD5A0kACQAABEkAEQCjAUkAyQC9COIAEQDECOkAKQDVCCIAEQDlCO8AGQCjAUkA
EQBNCfoA2QBGCP8AEQCOCQUB4QC7CQoB+QCjAUkAEQBgBUkAQQCjAbYAAQEWCkkAEQBrBUkAAQEb
CkkAOQAhChUBCQE0ChkBOQA8Ch4BEQFdCiUBEQFWCCsByQBpCiYAGQGjATEBIQGDCrsAGQGkCjgB
MQFGCD4BCQG/CkMBMQHHCiIAMQEbCkkAGQDMCiYAyQDbCkgBEQBIC08BQQFeC1UBSQF6C2ABUQGQ
CyYAyQDbCmQBWQGjAbYAyQDbCmwBYQGjAUkAaQH4C4UBaQETDI4BSQCjAZQBgQGjAaEBkQGjAUkA
IQCjAUkALgAbAC0CLgBjAFMCLgALALUBLgATAP0BLgAjAC0CLgArAC0CLgAzAP0BLgA7ADMCLgBD
AC0CLgBbAEoC4wAzARABAwETAhABQQE7AhABiQIzAqgBqQIzAqgB9gByAZwBAgABAAMADQAGABMA
CAAUAAkAFgAAAMICLgAAAM4CMwAAAOECNwAAAPUCMwAAABADNwAAACEDMwAAADkDNwAAAEYDMwAA
AFoDMwAAAGQDMwAAAHUDOwAAAH0DMwAAAA8EOwAAABkEMwAAACoEOwAAADgEMwAAAE0EOwAAAFUE
MwAAABQFNwAAAIgFngAAAAEGowAAACUGsQACAAIAAwACAAMABQACAAQABwACAAUACQACAAYACwAC
AAcADQACAAgADwACAAkAEQACAAoAEwACAAsAFQACAAwAFwACAA0AGQABABEAGwABABIAHQABABMA
HwABABQAIQABABUAIwABABYAJQACACQAJwACACsAKQACACwAKwABAC0AKwACAC4ALQAEgAAAAQAA
AL0WMY8AAAAAAAAiCAAADAAAAAAAAAAAAAAAAQDGAAAAAAAEAAAAAAAAAAAAAAAKACEBAAAAAAQA
AAAAAAAAAAAAAAoAKgEAAAAADAAAAAAAAAAAAAAAAQBlAQAAAAAEAAAAAAAAAAAAAAAKACcFAAAA
AAwAAAAAAAAAAAAAAAEA8QgAAAAADAAAAAAAAAAAAAAAAQDiCgAAAAAAAAAAAQAAAIYMAAAAAAAA
ADxNb2R1bGU+AFNDXzVDMEY5NjQ5OEFFMDRFRENCMTEyMjM0QUU4MUMxMUU1LmRsbABJbnB1dDBC
dWZmZXIARUNSZXN1bHRCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0aW9ucwBWYXJpYWJsZXMA
U2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfNzc0NzgwMmQ3NTlkNGRiZGFlYThlNTA4YTkyYzBiZDMu
Y3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZmZXIAU2NyaXB0Q29tcG9u
ZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVC
dWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdldF9Dcml0ZXJpYVNRTABnZXRf
Q3JpdGVyaWFTUUxfSXNOdWxsAGdldF9Dcml0ZXJpYURlc2NyaXB0aW9uAGdldF9Dcml0ZXJpYURl
c2NyaXB0aW9uX0lzTnVsbABnZXRfQ3JpdGVyaWFUeXBlQ29kZQBnZXRfQ3JpdGVyaWFUeXBlQ29k
ZV9Jc051bGwAZ2V0X0NyaXRlcmlhTmFtZQBnZXRfQ3JpdGVyaWFOYW1lX0lzTnVsbABnZXRfSXNF
bmFibGVkAGdldF9Jc0VuYWJsZWRfSXNOdWxsAGdldF9EaW1FQ0lEAGdldF9EaW1FQ0lEX0lzTnVs
bABOZXh0Um93AEVuZE9mUm93c2V0AENyaXRlcmlhU1FMAENyaXRlcmlhU1FMX0lzTnVsbABDcml0
ZXJpYURlc2NyaXB0aW9uAENyaXRlcmlhRGVzY3JpcHRpb25fSXNOdWxsAENyaXRlcmlhVHlwZUNv
ZGUAQ3JpdGVyaWFUeXBlQ29kZV9Jc051bGwAQ3JpdGVyaWFOYW1lAENyaXRlcmlhTmFtZV9Jc051
bGwASXNFbmFibGVkAElzRW5hYmxlZF9Jc051bGwARGltRUNJRABEaW1FQ0lEX0lzTnVsbABzZXRf
RGltUG9vbElkAHNldF9EaW1Qb29sSWRfSXNOdWxsAHNldF9EaW1DdXN0b21lcklkAHNldF9EaW1D
dXN0b21lcklkX0lzTnVsbABzZXRfRGltRUNJZABzZXRfRGltRUNJZF9Jc051bGwAQWRkUm93AFNl
dEVuZE9mUm93c2V0AERpbVBvb2xJZABEaW1Qb29sSWRfSXNOdWxsAERpbUN1c3RvbWVySWQARGlt
Q3VzdG9tZXJJZF9Jc051bGwARGltRUNJZABEaW1FQ0lkX0lzTnVsbABJbnB1dHNGaW5pc2hlZABQ
cm9jZXNzSW5wdXQARmluaXNoT3V0cHV0cwBNYXJrT3V0cHV0c0ZpbmlzaGVkAFByaW1lT3V0cHV0
AENyZWF0ZU5ld091dHB1dFJvd3MASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lu
cHV0Um93AFBhcmVudENvbXBvbmVudABnZXRfT0xFREJDb25uU3RyaW5nQUxSAE9MRURCQ29ublN0
cmluZ0FMUgBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBf
U3FsQ29ubgBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VN
YW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291
cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1
bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAQnVmZmVyAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAT3V0cHV0TWFwAHZhbHVlAElucHV0SUQASW5wdXROYW1lAE91dHB1dHMAT3V0
cHV0SURzAEJ1ZmZlcnMAUm93AENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNUMwRjk2NDk4QUUwNEVEQ0IxMTIyMzRB
RTgxQzExRTUAZ2V0X0l0ZW0ASXNOdWxsAEdldFN0cmluZwBHZXRCb29sZWFuAEdldEludDY0AElu
dDY0AHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmcAU3Ry
aW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBnZXRfRW5kT2ZSb3dzZXQAR2V0
T3V0cHV0SUQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU1ZhcmlhYmxlczEwMABnZXRfUmVhZE9ubHlW
YXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9F
dmFsdWF0b3JDb250ZXh0AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRl
eHQAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAU3lzdGVtLkRhdGEuQ29t
bW9uAERiQ29ubmVjdGlvbgBPcGVuAENsb3NlAGdldF9MZW5ndGgAQ29udmVydABUb0ludDMyAEdl
dEJsb2JEYXRhAFN5c3RlbS5UZXh0AEVuY29kaW5nAGdldF9Vbmljb2RlAFRyaW0AU3FsQ29tbWFu
ZABEYkNvbW1hbmQAc2V0X0NvbW1hbmRUaW1lb3V0AFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRl
cgBEYkRhdGFSZWFkZXIAVG9JbnQ2NABSZWFkAFRvU3RyaW5nAEludDMyAEZvcm1hdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBl
bGluZS5XcmFwcGVyAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURh
dGEARmlyZUluZm9ybWF0aW9uAEVudmlyb25tZW50AGdldF9OZXdMaW5lAEV4Y2VwdGlvbgBnZXRf
TWVzc2FnZQBBcHBsaWNhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAC5jY3RvcgBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2ou
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABl
AHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAA
QQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAg
AGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFFAEMAUgBlAHMAdQBsAHQAACdPAEwA
RQBEAEIAQwBvAG4AbgBTAHQAcgBpAG4AZwBfAEEATABSAAABABNEAGkAbQBQAG8AbwBsAEkAZAAA
D0QAaQBtAEUAQwBJAGQAABtEAGkAbQBDAHUAcwB0AG8AbQBlAHIASQBkAAATewAwAH0AIAA6ACAA
ewAxAH0AACtBAHAAcABsAHkAIABGAGEAYwB0AEMAdQBzAHQAbwBtAGUAcgAgAEUAQwAAH1EAdQBl
AHIAeQA6AHsAMAB9AHsAMQB9AHsAMgB9AABRRQBDACAAewAwAH0AIABpAHMAIABuAG8AdAAgAGUA
bgBhAGIAbABlAGQAIABhAG4AZAAgAGkAcwAgAG4AbwB0ACAAYQBwAHAAbABpAGUAZAAAf1MAQwBf
ADcANwA0ADcAOAAwADIAZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEAOQAyAGMA
MABiAGQAMwAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAD59uLgRtHsQqJFFKqNN+3bAAiJhF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkEIAAS
HQMgAAIDIAAOAyAACgQoABIdAygAAgMoAA4DKAAKBCABAQoEIAEBAgMgAAEDBhIUAwYSGAMGEgwC
BggJIAQBCA4SFRIZCyAEAQgdCB0SFRIZBSABARIIAwYSCQUgAQESCQMGEiEDBhIlAwYSKQQAABIl
BAAAEikFAAEBEikECAASJQQIABIpAwYSJAQAABIkBAgAEiQEIAEBDgQgAQEIAwYSFQMGHQgEIAEc
CAQgAQIIBCABDggEIAEKCAUgAgEIHAYgAgIOEWkFIAEdCAgGAAIIEhkOAwcBCAQgABJtBSABEnEc
BAAAEnUFIAEcEnkEAQAAAAMgAAkEAAEICQYgAh0FCAgFAAASgIkFIAEOHQUGIAIBDhIhBSAAEoCV
BCABHA4EAAEKHAYAAw4OHBwFIAASgKEKIAYBCA4ODggQAgMAAA4HAAQODhwcHAUAAg4OHBIHCQIO
HQUOEoCNEoCVCBKAqQ4IAAESgLURgLkFIAASgL0HIAIBDhKAvQQHARIlBiABARGAxQgBAAIAAAAA
AAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU0NfNzc0NzgwMmQ3NTlkNGRiZGFlYThlNTA4YTkyYzBi
ZDMuY3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTIAAAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAKhBAAAAAAAAAAAAAL5BAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACwQQAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ANADAAAAAAAAAAAAANADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAxj70WAAABADGPvRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAMAwAAAQAwADAAMAAwADAANABi
ADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANwA3ADQA
NwA4ADAAMgBkADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAz
AC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA1ADgAMgAxAC4AMwA2ADYANQA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAQwBfADUAQwAwAEYAOQA2ADQAOQA4AEEARQAwADQARQBEAEMAQgAxADEAMgAyADMANABBAEUA
OAAxAEMAMQAxAEUANQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAyAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADUAQwAwAEYAOQA2ADQAOQA4AEEARQAwADQARQBE
AEMAQgAxADEAMgAyADMANABBAEUAOAAxAEMAMQAxAEUANQAuAGQAbABsAAAAeAArAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA3ADcANAA3ADgAMAAyAGQANwA1ADkAZAA0AGQAYgBk
AGEAZQBhADgAZQA1ADAAOABhADkAMgBjADAAYgBkADMALgBjAHMAcAByAG8AagAAAAAARAAPAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMgAxAC4AMwA2ADYANQA3
AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgA
MgAxAC4AMwA2ADYANQA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADQMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_5c0f96498ae04edcb112234ae81c11e5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::OLEDBConnString_ALR</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">29e4b868517b258dbaed3ce17d674d99</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[IsEnabled]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult]"
                      hasSideEffects="true"
                      name="ECResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimPoolId]"
                          dataType="i8"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimPoolId]"
                          name="DimPoolId" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimCustomerId]"
                          dataType="i8"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimCustomerId]"
                          name="DimCustomerId" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimECId]"
                          dataType="i8"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimECId]"
                          name="DimECId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="FactCustomer EC ALR"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select 	DimPoolID	
	, DimECID
	, CriteriaName
	, CriteriaDescription
	, CriteriaSetId
	, CriteriaSetTypeCode
	, CriteriaTypeCode
	, IsEnabled
	, ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, CriteriaTableTypeCode
	, SequenceNo
	, DimOrganisationId
                ,cast(null as nvarchar(max)) as CriteriaSQL
from tblDimEC
where DimPoolId = ? and CriteriaTableTypeCode = 'dbo.tblFactCustomerECResult' and ECPassNoCode = ? and IsEnabled = 1
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{F7498697-94B9-4899-9B71-5E7C3EAB7D62};"Parameter1:Input",{47A65516-366C-46E6-A597-923EEA41A566};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          name="DimPoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]"
                          name="DimECID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          dataType="i8"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          dataType="bool"
                          name="IsEnabled" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTableTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          dataType="i8"
                          name="DimOrganisationId" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          dataType="i4"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          name="DimPoolID" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          dataType="i8"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          name="DimECID" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          dataType="bool"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="FactCustomer EC Results to ALR"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblFactCustomerECResult]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimPoolId]"
                          cachedDataType="i8"
                          cachedName="DimPoolId"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimPoolId]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimECId]"
                          cachedDataType="i8"
                          cachedName="DimECId"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimECId]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimCustomerId]"
                          cachedDataType="i8"
                          cachedName="DimCustomerId"
                          externalMetadataColumnId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult].Columns[DimCustomerId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          dataType="i4"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                          dataType="i4"
                          name="DimCustomerID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="FactCustomer EC XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.IO;
using System.Collections.Generic;
//using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.DEBUG;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        bool bFireAgain = true;
        string sMsg = "";

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-8\" ?>{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "DimOrganisationId", "Value", Row.DimOrganisationId.ToString());
            UpdateParameterAttribute(xmlDoc, "DimReportingDateId", "Value", Variables.DimReportingDateID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimPoolId", "Value", Row.DimPoolID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimSourceTrustID", "Value", Variables.DimSourceTrustID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimTargetTrustID", "Value", Variables.DimTargetTrustID.ToString());

            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            if (_DEBUG)
            {
                sMsg = string.Format("{0} {1} {2} {3} {4} {5}: {6}", Row.DimPoolID.ToString(), Row.DimECID.ToString(), Row.CriteriaName, Row.CriteriaTableTypeCode, Row.ECPassNoCode, Environment.NewLine, sQuery);
                ComponentMetaData.FireInformation(1000, "FactSecurity EC To XML", sMsg, "", 0, ref bFireAgain);
            }
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);
        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
        
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {

        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;

        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public static bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public static string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public static string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public static string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("N'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public static string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[2]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 DimOrganisationId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool DimOrganisationId_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CriteriaTableTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaTableTypeCode_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 DimPoolID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool DimPoolID_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimOrganisationID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimOrganisationID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimSourceTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimSourceTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimTargetTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimTargetTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PoolId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PoolId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace>
    <AssemblyName>SC_26CFDC3A8DCA4BC896DF819D12CF3743</AssemblyName>
    <ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{B2FEC7C0-D87A-42D2-940C-AE1672093CE6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_26CFDC3A8DCA4BC896DF819D12CF3743.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKceaFYAAAAAAAAAAOAAAiELAQsAADQAAAAIAAAAAAAAvlMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGxTAABPAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxDMAAAAgAAAANAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAA2AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
UwAAAAAAAEgAAAACAAUAaC4AAAQlAAABAAAAAAAAALAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASomAhYDKBEAAAoqIgIWKBIAAAoqWgMsCAIWKBMAAAoqcgEAAHBzFAAACnpmAnsOAAAKAnsPAAAK
F5RvEAAACnQHAAABKiICFygSAAAKKlICew4AAAoCew8AAAoYlG8VAAAKKiICGCgSAAAKKlICew4A
AAoCew8AAAoZlG8VAAAKKiICGSgSAAAKKlICew4AAAoCew8AAAoalG8WAAAKKiICGigSAAAKKlIC
ew4AAAoCew8AAAoblG8WAAAKKiICGygSAAAKKlICew4AAAoCew8AAAoclG8WAAAKKiICHCgSAAAK
KlICew4AAAoCew8AAAodlG8XAAAKKiICHSgSAAAKKh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJz
GgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcp4AAHAabxsAAAosFQIFAgMoHAAACg4EcwEAAAZvGAAA
BipKKwcCA28ZAAAGA28UAAAGLfEqBio6AigdAAAKAgN9AwAABCo6AigdAAAKAgN9BAAABCqWAnsE
AAAEbx4AAApyrgAAcG8fAAAKKCAAAApvIQAACqUfAAABKpYCewQAAARvHgAACnK6AABwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKct4AAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApyBAEAcG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnImAQBwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKckgBAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApyWgEAcG8fAAAKKCAAAApvIQAACnQZAAABKmICKCMAAAoCAnsCAAAEbxwAAAZ9BgAA
BCoeAigkAAAKKgAAABswBwAaAgAAAQAAERcKcmgBAHALcyUAAAoMA28GAAAGFgNvBgAABm8mAAAK
KCcAAApvKAAACg1yagEAcCgpAAAKCW8qAAAKbysAAAooLAAAChMECXMtAAAKEwURBW8uAAAKEQUW
am8vAAAKCBEFbzAAAAoIcsABAHBy5AEAcANvCgAABhMKEgooMQAACignAAAGJghy8AEAcHLkAQBw
AnsCAAAEbx4AAAZvMgAACignAAAGJghyFgIAcHLkAQBwA28SAAAGEwsSCygzAAAKKCcAAAYmCHIq
AgBwcuQBAHADbwgAAAYTDBIMKDEAAAooJwAABiYIcgQBAHBy5AEAcAJ7AgAABG8fAAAGbzIAAAoo
JwAABiYIciYBAHBy5AEAcAJ7AgAABG8gAAAGbzIAAAooJwAABiYIcjoCAHByQAIAcCgsAAAGEwYC
ewYAAAQ5hgAAAHJQAgBwHY0DAAABEw0RDRYDbxIAAAYTDhIOKDMAAAqiEQ0XA28IAAAGEw8SDygx
AAAKohENGANvDgAABqIRDRkDbxAAAAaiEQ0aA28MAAAGohENGyg0AAAKohENHBEGohENKDUAAAoL
Aig2AAAKIOgDAAByigIAcAdyaAEAcBYSAG83AAAKKCkAAAoRBm84AAAKEwcDbwIAAAZvOQAACgNv
AgAABhEHbzoAAAreJBMIcrgCAHARBCg0AAAKEQhvOwAACig8AAAKEwkRCXM9AAAKeioAAEEcAAAA
AAAARwAAAK4BAAD1AQAAJAAAACkAAAEbMAMAggAAAAIAABEUCgJvPgAACgsHcswCAHBvPwAACgwo
QAAACnNBAAAKDQhvQgAAChMFKywRBW9DAAAKdAgAAAETBAkRBG9EAAAKchADAHBvRQAACm9GAAAK
EQRvRwAAChEFb0gAAAoty94VEQV1MwAAARMGEQYsBxEGb0kAAArcCQMSAG9KAAAKJgYqAAABEAAA
AgAoADlhABUAAAAAEzACAFMAAAADAAARFgoCAygmAAAGCwctAgYqB29EAAAKBG9FAAAKLBYHb0QA
AAoEb0UAAAoFb0sAAAoXCiseAgRvTAAACgwIBW9LAAAKB29EAAAKCG9NAAAKJhcKBioAEzAEACAA
AAAEAAARc04AAAoKBnIaAwBwAm8rAAAKA29PAAAKJgZvMgAACioTMAMAHwAAAAQAABFzTgAACgoG
ciwDAHACbysAAApvUAAACiYGbzIAAAoqABswBADHAAAABQAAEXI4AwBwCn5RAAAKc1IAAAoLAi0C
BioCclwDAHBvPwAACgwIOZYAAAAIb1MAAAoWPooAAAAHcogDAHBvVAAACiYIb0IAAAoTBSszEQVv
QwAACnQIAAABDQdyjAMAcAlvRAAACnLkAQBwb0UAAApvRgAACm8yAAAKb1AAAAomEQVvSAAACi3E
3hURBXUzAAABEwYRBiwHEQZvSQAACtwHB29VAAAKGFkYb1YAAApyngMAcG9UAAAKJgdvMgAACgre
BRMEEQR6BioAARwAAAIASABAiAAVAAAAAAAAFgCqwAAFKQAAARswBQApAwAABgAAEXNOAAAKCgIt
BwZvMgAACioCcswCAHBvPwAACgsHOfkCAAAHb0IAAAoTBTjJAgAAEQVvQwAACnQIAAABDH5RAAAK
DQhvRAAACnKiAwBwb0UAAApvRgAACm8yAAAKJRMGOfoBAAARBnK2AwBwKFcAAAotJxEGcsgDAHAo
VwAACjqtAAAAEQZy2AMAcChXAAAKOjMBAAA4xQEAAHLqAwBwG40DAAABEwcRBxYIb0QAAApyEAMA
cG9FAAAKb0YAAApvMgAACqIRBxcIb0QAAApyogMAcG9FAAAKb0YAAApvMgAACqIRBxgIb0QAAApy
ogMAcG9FAAAKb0YAAApvMgAACqIRBxkIb0QAAApy5AEAcG9FAAAKb0YAAApvMgAACqIRBxoDohEH
KDUAAAoNOMABAABySgQAcBuNAwAAARMIEQgWCG9EAAAKchADAHBvRQAACm9GAAAKbzIAAAqiEQgX
CG9EAAAKcqIDAHBvRQAACm9GAAAKbzIAAAqiEQgYCG9EAAAKcqIDAHBvRQAACm9GAAAKbzIAAAqi
EQgZCG9EAAAKcuQBAHBvRQAACm9GAAAKbzIAAAqiEQgaA6IRCCg1AAAKDTgpAQAAckoEAHAbjQMA
AAETCREJFghvRAAACnIQAwBwb0UAAApvRgAACm8yAAAKohEJFwhvRAAACnKiAwBwb0UAAApvRgAA
Cm8yAAAKohEJGAhvRAAACnKiAwBwb0UAAApvRgAACm8yAAAKohEJGQhvRAAACnLkAQBwb0UAAApv
RgAACm8yAAAKohEJGgOiEQkoNQAACg04kgAAAHK0BABwG40DAAABEwoRChYIb0QAAApyEAMAcG9F
AAAKb0YAAApvMgAACqIRChcIb0QAAApyogMAcG9FAAAKb0YAAApvMgAACqIRChgIb0QAAApyogMA
cG9FAAAKb0YAAApvMgAACqIRChkIb0QAAApy5AEAcG9FAAAKb0YAAApvMgAACqIRChoDohEKKDUA
AAoNBglvVAAACiYRBW9IAAAKOiv9///eFREFdTMAAAETCxELLAcRC29JAAAK3N4FEwQRBHoGbzIA
AAoqAAAAQTQAAAIAAAAqAAAA3AIAAAYDAAAVAAAAAAAAAAAAAAAQAAAADQMAAB0DAAAFAAAAKQAA
ARswAwA8AAAABwAAEXNOAAAKCgItBwZvMgAACioGAgMoKwAABm9UAAAKJgYCckACAHAoLQAABm9U
AAAKJt4DCwd6Bm8yAAAKKgEQAAAAABAAIjIAAykAAAEbMAMAZQEAAAgAABF+UQAACgoCLQoDKFgA
AAosAgYqAgNvWQAACgsHOTsBAAAHb1oAAAoKBnNSAAAKDAJyCgUAcG8/AAAKDQksfglvQgAAChMJ
K1QRCW9DAAAKdAgAAAETBBEEb0QAAApyVAUAcG9FAAAKb0YAAApvMgAACigpAAAGEwUIEQRvRAAA
CnIQAwBwb0UAAApvRgAACm8yAAAKEQVvWwAACiYRCW9IAAAKLaPeFREJdTMAAAETChEKLAcRCm9J
AAAK3BQNAnJmBQBwbz8AAAoNCTmFAAAACW9CAAAKEwsrWxELb0MAAAp0CAAAARMGEQZvRAAACnJU
BQBwb0UAAApvRgAACm8yAAAKEQYoKgAABigoAAAGEwcIEQZvRAAACnIQAwBwb0UAAApvRgAACm8y
AAAKEQdvWwAACiYRC29IAAAKLZzeFRELdTMAAAETDBEMLAcRDG9JAAAK3AhvMgAACgreBRMIEQh6
BioAAABBTAAAAgAAAEYAAABhAAAApwAAABUAAAAAAAAAAgAAANgAAABoAAAAQAEAABUAAAAAAAAA
AAAAABMAAABLAQAAXgEAAAUAAAApAAABHgIoFgAABioeAigdAAAKKhMwAgAtAAAACQAAEX4HAAAE
LSByrAUAcNAHAAACKF0AAApvXgAACnNfAAAKCgaABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+
CQAABCouczQAAAaACQAABCoeAihiAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAA4AoAACN+AABMCwAAwA8AACNTdHJpbmdzAAAAAAwbAAAsBgAAI1VT
ADghAAAQAAAAI0dVSUQAAABIIQAAvAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQEAAAD6JTMAFgAA
AQAAADsAAAAIAAAACQAAADUAAAAgAAAAYgAAAAEAAAAPAAAACQAAAAQAAAAaAAAAHQAAAAEAAAAB
AAAABwAAAAEAAAAAAAoAAQAAAAAABgD1ANQABgACAdQACgAiARsBDgA+ASkBEgB3AdQABgCGAdQA
EgCaAdQAFgCaBY8FFgCiBY8FCgB4BmcGCgCpBpQGCgD9B+MHCgAoCBYICgA/CBYICgBcCBYICgB7
CBYICgCUCBYICgCtCBYICgDICBYICgDjCBYICgD8CBYICgA1CRUJCgBVCRUJCgC4CRsBCgDuCRsB
CgD1CRsBGgBpCkEKGgCQCkEKCwCgCgAAGgDQCkEKCgD8ChsBBgAEC9QACgA2CxsBCgBeC1ILCgCJ
C38LCgCWC38LCgC1CxsBCgDECxsBCgDKCxsBHgAvDAYMCgCRDBsBCgCnDBsBFgC8DI8FFgDbDI8F
CgDzDBsBCgA8DSENCgBJDSENCgBwDV0NFgCWDY8FFgC8DY8FCgDrDRsBCgAsDlILCgCyDp8OCgDP
DhsBCgDUDhsBCgD4DhYIDgAkDw4PDgA9Dw4PCgBSDxUJAAAAAAEAAAAAAAEAAQABABAAMgAAAAUA
AQABAAEAEAA/AAAACQABABYAAQAQAE0AAAANAAMAGgABABAAWQAAAA0ABAAbAAEAEABjAAAADAAF
ACMAAAAQAG4AeAANAAcALwAAARAArgB4ABEACQAzAAYATQBSAAYAWQBWAAEAgARuAAEAgARuAFGA
ZgV4AAEAcQWAABEAiAa0ABEAtQa4ABEA+QbWAFAgAAAAAIYYlAETAAEAWyAAAAAAhgilAR0ABAB1
IAAAAACGCLUBIgAEAH8gAAAAAIYIxQEoAAUAiCAAAAAAhgjcASwABQCfIAAAAACGCPMBHQAGALkg
AAAAAIYIBQIoAAYAwiAAAAAAhggeAjEABgDXIAAAAACGCCoCKAAGAOAgAAAAAIYIPQIxAAYA9SAA
AAAAhghTAigABgD+IAAAAACGCHACNQAGABMhAAAAAIYIgQIoAAYAHCEAAAAAhgiZAjUABgAxIQAA
AACGCKoCKAAGADohAAAAAIYIwgI1AAYATyEAAAAAhgjcAigABgBYIQAAAACGCP0COQAGAG0hAAAA
AIYICwMoAAYAdiEAAAAAhgAgAygABgB+IQAAAACGACgDKAAGAIYhAAAAAIYYlAFaAAYApiEAAAAA
xgBIBF4ABgDLIQAAAADGAVUEaAAKAN4hAAAAAMYBaQRoAAsA4CEAAAAAhhiUAXIADADvIQAAAACG
GJQBcgANAP4hAAAAAIYIkAQoAA4AJCIAAAAAhgiaBDUADgBKIgAAAACGCLAENQAOAHAiAAAAAIYI
xwQ1AA4AliIAAAAAhgjcBDUADgC8IgAAAACGCPEENQAOAOIiAAAAAIYI/gQ1AA4ACCMAAAAAxgB4
BVoADgAhIwAAAADGAIMFWgAOACwjAAAAAMYAaQRoAA4AcCUAAAAAlgCuBYMADwAQJgAAAACWAMEF
iwARAHAmAAAAAJYA2gWUABUAnCYAAAAAlgDzBZoAFwDIJgAAAACWAP8FnwAYALgnAAAAAJYAFQal
ABkAJCsAAAAAlgAxBqwAGwB8KwAAAACWAE8GpQAeADwtAAAAAIYYlAFaACAARC0AAAAAgxiUAVoA
IABMLQAAAACTCMUGvAAgAIUtAAAAAJMI2QbBACAAjC0AAAAAkwjlBsYAIACULQAAAACWCAkH2gAh
AKctAAAAAIYYlAFaACEAmy0AAAAAkRhtD/oCIQAAAAEAHQcAAAIAJAcAAAMAOAcAAAEAQgcAAAEA
QgcAAAEASAcAAAIAUAcAAAMAHQcAAAQAOAcAAAEAHQcAAAEAWgcAAAEAXgcAAAEAXgcAAAEAWgcA
AAEAaAcAAAIAbwcAAAEAaAcAAAIAbwcAAAMAfgcAAAQAjQcAAAEAnQcAAAIApwcAAAEAnQcAAAEA
sgcAAAEAaAcAAAIAuwcAAAEAaAcAAAIAuwcAAAMAygcAAAEAaAcAAAIA2QcAAAEAQgdhAJQB5ABp
AJQB5ABxAJQB5AB5AJQB5ACBAJQB5ACJAJQB5ACRAJQB5ACZAJQB5AChAJQB5ACpAJQB5ACxAJQB
6QC5AJQBWgAJAJQBEwAJAB0H7gAJACQH8gApAJcJ9gAJAKAJ+wAJAKkJAQEJALAJ6QDBAJQB5AAp
ANIJBgEpANsJCwEpAOUJEAEJACADKAAJACgDKAARAJQBWgDJAAYKFQERAA0KHAEZAJQBWgARAHoK
IgHZAJcJJwERALsKLQHhAOgKMgEBAZQBWgARAHgFWgARAIMFWgBJAJQBWgA5ACsLPQEJAT4LQQE5
AEYLRgERAWcLTQERAdsJUwHJAHMLNQDJAHgLWQEZAZQBXwEhAZ0LWgAhAaMLZQFJALALagEpAbsL
NQAZALsLNQAxAbsLNQA5AdYLcQHJAHgLdQERAEgMfAFBAV4MggERAW4MjQE5AHcMWgA5AIUMXwFJ
AZsMNQDJAHgLkwFRAZQB5ABJAMcMtgFBAOcMvAFpAQINwwEMAJQB0gFhAXwN3QGBAYoN4wFBAK0N
5wGJAckN7QFBANQNNQAMAN4N9AGBAeINKACZAfcNWgAMAP8N/AFBAAsO5ABJABUO7QGJASUOIAKh
AZQBWgChAToOMgKhAToOQQLJAEcOeAChAZQB5ABhAU0OOQChASUOSQKhASsLOQChAVcOUALJAF4O
bQLJAGoOmgJBAHgOnwJBAIkONQChAZcOpQKpAZQBWgCxAeYOzgKxAQEP1wJRAJQB3QLJAZQB6gLZ
AZQBWgAhAJQBWgAOABQAewAuABsAdgMuAGMAnAMuAAsA/gIuABMARgMuACMAdgMuACsAdgMuADMA
RgMuADsAfAMuAEMAdgMuAFsAkwPDABMBOAHjAOMCOAEhAQsDOAEJAwMD8QIpAwMD8QKbAQUCKQI7
AlgCcwKRAq0C5QICAAEABQARAAcAGAAIABoAAAA0Az0AAABAA0IAAABTAz0AAABhA0IAAAB2A0YA
AAB+A0IAAACNA0YAAACfA0IAAAC4A0oAAADFA0IAAADZA0oAAADmA0IAAAD6A0oAAAAQBEIAAAAt
BE4AAAA3BEIAAAAJBUIAAAAPBUoAAAAhBUoAAAA0BUoAAABFBUoAAABWBUoAAABfBUoAAAB4BswA
AADxBtEAAAAVB98AAgACAAMAAQADAAMAAgAEAAUAAQAFAAUAAgAGAAcAAgAHAAkAAgAIAAsAAgAJ
AA0AAgAKAA8AAgALABEAAgAMABMAAgANABUAAgAOABcAAgAPABkAAgAQABsAAgARAB0AAgASAB8A
AgATACEAAgAcACMAAgAdACUAAgAeACcAAgAfACkAAgAgACsAAgAhAC0AAgAiAC8AAgAwADEAAgAx
ADMAAQAyADMAAgAzADUAyQEEgAAAAQAAAL0WE5AAAAAAAABzCQAADAAAAAAAAAAAAAAAAQC3AAAA
AAAEAAAAAAAAAAAAAAAKABIBAAAAAAQAAAAAAAAAAAAAAAoAGwEAAAAADAAAAAAAAAAAAAAAAQBW
AQAAAAAEAAAAAAAAAAAAAAAKAI8FAAAAAAwAAAAAAAAAAAAAAAEAHgoAAAAADAAAAAAAAAAAAAAA
AQDiCwAAAAAAAAAAAQAAAHQPAAAAAAAAADxNb2R1bGU+AFNDXzI2Q0ZEQzNBOERDQTRCQzg5NkRG
ODE5RDEyQ0YzNzQzLmRsbABJbnB1dDBCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0aW9ucwBW
YXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfZmQwYmFiNjcxZmY0NDYyNjg0NGQzYmM2
OWEyZDgyYmUuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZmZXIAU2Ny
aXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QA
UGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdldF9Dcml0ZXJp
YVNRTABzZXRfQ3JpdGVyaWFTUUwAZ2V0X0NyaXRlcmlhU1FMX0lzTnVsbABzZXRfQ3JpdGVyaWFT
UUxfSXNOdWxsAGdldF9YTUxTcWxRdWVyeUVDAGdldF9YTUxTcWxRdWVyeUVDX0lzTnVsbABnZXRf
RGltRUNJRABnZXRfRGltRUNJRF9Jc051bGwAZ2V0X0RpbU9yZ2FuaXNhdGlvbklkAGdldF9EaW1P
cmdhbmlzYXRpb25JZF9Jc051bGwAZ2V0X0VDUGFzc05vQ29kZQBnZXRfRUNQYXNzTm9Db2RlX0lz
TnVsbABnZXRfQ3JpdGVyaWFOYW1lAGdldF9Dcml0ZXJpYU5hbWVfSXNOdWxsAGdldF9Dcml0ZXJp
YVRhYmxlVHlwZUNvZGUAZ2V0X0NyaXRlcmlhVGFibGVUeXBlQ29kZV9Jc051bGwAZ2V0X0RpbVBv
b2xJRABnZXRfRGltUG9vbElEX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AENyaXRlcmlhU1FM
AENyaXRlcmlhU1FMX0lzTnVsbABYTUxTcWxRdWVyeUVDAFhNTFNxbFF1ZXJ5RUNfSXNOdWxsAERp
bUVDSUQARGltRUNJRF9Jc051bGwARGltT3JnYW5pc2F0aW9uSWQARGltT3JnYW5pc2F0aW9uSWRf
SXNOdWxsAEVDUGFzc05vQ29kZQBFQ1Bhc3NOb0NvZGVfSXNOdWxsAENyaXRlcmlhTmFtZQBDcml0
ZXJpYU5hbWVfSXNOdWxsAENyaXRlcmlhVGFibGVUeXBlQ29kZQBDcml0ZXJpYVRhYmxlVHlwZUNv
ZGVfSXNOdWxsAERpbVBvb2xJRABEaW1Qb29sSURfSXNOdWxsAFByb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29tcG9uZW50AGdldF9E
RUJVRwBnZXRfRGltT3JnYW5pc2F0aW9uSUQAZ2V0X0RpbVJlcG9ydGluZ0RhdGVJRABnZXRfRGlt
U291cmNlVHJ1c3RJRABnZXRfRGltVGFyZ2V0VHJ1c3RJRABnZXRfRUNQYXNzTm8AZ2V0X1Bvb2xJ
ZABERUJVRwBEaW1PcmdhbmlzYXRpb25JRABEaW1SZXBvcnRpbmdEYXRlSUQARGltU291cmNlVHJ1
c3RJRABEaW1UYXJnZXRUcnVzdElEAEVDUGFzc05vAFBvb2xJZABfRW5kT2ZMaW5lAF9ERUJVRwBQ
cmVFeGVjdXRlAFBvc3RFeGVjdXRlAFN5c3RlbS5YbWwAWG1sTm9kZQBYbWxEb2N1bWVudABHZXRQ
YXJhbWV0ZXJCeU5hbWUAVXBkYXRlUGFyYW1ldGVyQXR0cmlidXRlAEdldE9wZXJhdG9yV2l0aFBh
cmFtZXRlcgBHZXRPcGVyYXRvcgBTZWxlY3RlZEl0ZW1zVG9TdHJpbmcAR2V0VFNRTERlY2xhcmVI
ZWFkZXJGcm9tWE1MAEdldFRTUUxFeGVjdXRhYmxlUXVlcnlGcm9tWE1MAEdldFRTUUxRdWVyeUJv
ZHlGcm9tWE1MAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5
c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAT3V0cHV0TWFw
AHZhbHVlAElucHV0SUQASW5wdXROYW1lAFJvdwBDb21wb25lbnQAWG1sRG9jAHNQYXJhbWV0ZXJO
YW1lAHNBdHRyaWJ1dGVOYW1lAHNBdHRyaWJ1dGVWYWx1ZQBzT3BlcmF0b3IAc1BhcmFtZXRlcgB4
bWxQYXJhbQBzTGluZURlbGltaXRlcgBzUXVlcnlOb2RlUGF0aABzTm9kZVBhdGgAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzI2Q0ZE
QzNBOERDQTRCQzg5NkRGODE5RDEyQ0YzNzQzAGdldF9JdGVtAHNldF9JdGVtAElzTnVsbABTZXRO
dWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AR2V0SW50NjQAR2V0U3RyaW5nAEdldEludDMy
AFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVzAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZS5XcmFwcGVyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAElEVFNWYXJp
YWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJ
RFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhDb250ZXh0AEJvb2xlYW4AU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAZ2V0X0xlbmd0aABDb252ZXJ0AFRvSW50
MzIAR2V0QmxvYkRhdGEAU3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X1VuaWNvZGUAVHJpbQBGb3Jt
YXQAU3lzdGVtLklPAE1lbW9yeVN0cmVhbQBTdHJlYW0ARmx1c2gAc2V0X1Bvc2l0aW9uAExvYWQA
SW50NjQAVG9TdHJpbmcASW50MzIARW52aXJvbm1lbnQAZ2V0X05ld0xpbmUATWljcm9zb2Z0LlNx
bFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUu
V3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEZp
cmVJbmZvcm1hdGlvbgBHZXRCeXRlcwBSZXNldEJsb2JEYXRhAEFkZEJsb2JEYXRhAEV4Y2VwdGlv
bgBnZXRfTWVzc2FnZQBBcHBsaWNhdGlvbkV4Y2VwdGlvbgBYbWxFbGVtZW50AGdldF9Eb2N1bWVu
dEVsZW1lbnQAWG1sTm9kZUxpc3QAU2VsZWN0Tm9kZXMAU3RyaW5nQ29tcGFyZXIAZ2V0X0ludmFy
aWFudEN1bHR1cmVJZ25vcmVDYXNlAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25h
cnlgMgBJRXF1YWxpdHlDb21wYXJlcmAxAFN5c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRvcgBH
ZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AFhtbEF0dHJpYnV0ZUNvbGxlY3Rpb24AZ2V0X0F0dHJp
YnV0ZXMAWG1sQXR0cmlidXRlAGdldF9JdGVtT2YAZ2V0X1ZhbHVlAEFkZABNb3ZlTmV4dABJRGlz
cG9zYWJsZQBEaXNwb3NlAFRyeUdldFZhbHVlAHNldF9WYWx1ZQBDcmVhdGVBdHRyaWJ1dGUAQXBw
ZW5kAFN0cmluZ0J1aWxkZXIAQXBwZW5kRm9ybWF0AEVtcHR5AGdldF9Db3VudABSZW1vdmUAb3Bf
RXF1YWxpdHkASXNOdWxsT3JFbXB0eQBTZWxlY3RTaW5nbGVOb2RlAGdldF9Jbm5lclRleHQAUmVw
bGFjZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ19mZDBiYWI2
NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAg
AGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEA
bAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBu
AHAAdQB0ACAAMAAAC0QARQBCAFUARwAAI0QAaQBtAE8AcgBnAGEAbgBpAHMAYQB0AGkAbwBuAEkA
RAAAJUQAaQBtAFIAZQBwAG8AcgB0AGkAbgBnAEQAYQB0AGUASQBEAAAhRABpAG0AUwBvAHUAcgBj
AGUAVAByAHUAcwB0AEkARAAAIUQAaQBtAFQAYQByAGcAZQB0AFQAcgB1AHMAdABJAEQAABFFAEMA
UABhAHMAcwBOAG8AAA1QAG8AbwBsAEkAZAAAAQBVPAA/AHgAbQBsACAAdgBlAHIAcwBpAG8AbgA9
ACIAMQAuADAAIgAgAGUAbgBjAG8AZABpAG4AZwA9ACIAdQB0AGYALQA4ACIAIAA/AD4AewAwAH0A
ASNEAGkAbQBPAHIAZwBhAG4AaQBzAGEAdABpAG8AbgBJAGQAAAtWAGEAbAB1AGUAACVEAGkAbQBS
AGUAcABvAHIAdABpAG4AZwBEAGEAdABlAEkAZAAAE0QAaQBtAFAAbwBvAGwASQBkAAAPRABpAG0A
RQBDAEkAZAAABQ0ACgAADy8ALwBRAHUAZQByAHkAADl7ADAAfQAgAHsAMQB9ACAAewAyAH0AIAB7
ADMAfQAgAHsANAB9ACAAewA1AH0AOgAgAHsANgB9AAAtRgBhAGMAdABTAGUAYwB1AHIAaQB0AHkA
IABFAEMAIABUAG8AIABYAE0ATAAAE3sAMAB9AHsAMQB9AHsAMgB9AABDLwAvAFAAYQByAGEAbQBl
AHQAZQByAFsAQABUAHkAcABlAD0AJwBTAHEAbABQAGEAcgBhAG0AZQB0AGUAcgAnAF0AAQlOAGEA
bQBlAAARIAB7ADAAfQAgAHsAMQB9AAALIAB7ADAAfQAgAAAjKAAnAG4AbwBuAGUAJwApACAAQQBu
AGQAIAAxAD0AMQAgAAErLgAvAC8AUwBlAGwAZQBjAHQAZQBkAEkAdABlAG0AcwAvAEkAdABlAG0A
AAMoAAARTgAnAHsAMAB9ACcALAAgAAEDKQAAE1MAcQBsAEQAYgBUAHkAcABlAAARRABhAHQAZQBU
AGkAbQBlAAAPVgBhAHIAQwBoAGEAcgAAEU4AVgBhAHIAQwBoAGEAcgAAX0QAZQBjAGwAYQByAGUA
IABAAHsAMAB9ACAAewAxAH0AIAA9ACAAQwBvAG4AdgBlAHIAdAAoAHsAMgB9ACwAIAAnAHsAMwB9
ACcALAAgADEAMgAwACkAIAB7ADQAfQABaUQAZQBjAGwAYQByAGUAIABAAHsAMAB9ACAAewAxAH0A
KABtAGEAeAApACAAPQAgAEMAbwBuAHYAZQByAHQAKAB7ADIAfQAoAG0AYQB4ACkALAAgACcAewAz
AH0AJwApACAAewA0AH0AAVVEAGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACAAPQAgAEMA
bwBuAHYAZQByAHQAKAB7ADIAfQAsACAAJwB7ADMAfQAnACkAIAB7ADQAfQABSS8ALwBQAGEAcgBh
AG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUgBlAHAAbABhAGMAZQBPAHAAZQByAGEAdABvAHIA
JwBdAAERTwBwAGUAcgBhAHQAbwByAABFLwAvAFAAYQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABl
AD0AJwBSAGUAcABsAGEAYwBlAEwAbwBvAGsAdQBwACcAXQABf1MAQwBfAGYAZAAwAGIAYQBiADYA
NwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAzAGIAYwA2ADkAYQAyAGQAOAAyAGIAZQAuAGMAcwBw
AHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAhKKJKr4sB
S7Vw76+KjpDhAAiJhF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkEIAASHQUgAQESHQMgAAIEIAEB
AgMgAAoDIAAOAyAACAQoABIdAygAAgMoAAoDKAAOAygACAMGEhADBhIUAyAAAQkgBAEIDhIVEhkF
IAEBEggDBhIJBSABARIJAgYOBA0ACgACBgIHAAISIRIlDggABAISJQ4ODgUAAg4ODgQAAQ4OBQAB
DhIhBgACDhIlDgcAAw4SJQ4OAwYSKQMGEi0EAAASKQQAABItBQABARItBAgAEikECAASLQMGEiAE
AAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBCABHAgFIAIBCBwEIAECCAQgAQoIBCABDggEIAEI
CAYgAgIOEWkFIAEdCAgEIAASbQUgARJxHAQAABJ1BSABHBJ5BAEAAAADIAAJBAABCAkGIAIdBQgI
BQAAEoCJBSABDh0FBQACDg4cBSABAR0FBCABAQoGIAEBEoCRAwAADgYAAg4OHRwFIAASgKEKIAYB
CA4ODggQAgUgAR0FDgcABA4OHBwcGgcQAg4SJR0FDhKAjQ4dBRKApQ4KCAodHAgKBSAAEoCtBiAB
EoCxDgUAABKAtQgVEoC5Ag4SIQogAQEVEoC9ARMABSAAEoDBAyAAHAUgABKAxQYgARKAyQ4HIAIB
EwATAQggAgITABATARoHBxIhEoCtEoCxFRKAuQIOEiESIRKAwRKAzQggARKAyRKAyQgHAwISIRKA
yQggAxKA0Q4cHAUHARKA0QcgAhKA0Q4cBiABEoDRDgcgAhKA0QgIFAcHDhKA0RKAsRIhEoClEoDB
EoDNBQACAg4OHQcMEoDREoCxEiEOEoClEoDBDh0cHRwdHB0cEoDNCAcCEoDREoClBAABAg4FIAES
IQ4HIAISgNEODiAHDQ4SIRKA0RKAsRIhDhIhDhKApRKAwRKAzRKAwRKAzQgAARKA2RGA3QUgABKA
4QcgAgEOEoDhBAcBEikGIAEBEYDpCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ19m
ZDBiYWI2NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxMgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQCUUwAA
AAAAAAAAAACuUwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoFMAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAANADAAAAAAAA
AAAAANADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAT
kL0WAAABABOQvRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQwAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAMAwAAAQAwADAAMAAwADAANABiADAAAACAACsA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZgBkADAAYgBhAGIANgA3
ADEAZgBmADQANAA2ADIANgA4ADQANABkADMAYgBjADYAOQBhADIAZAA4ADIAYgBlAC4AYwBzAHAA
cgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADgAMgAx
AC4AMwA2ADgAOAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIA
NgBDAEYARABDADMAQQA4AEQAQwBBADQAQgBDADgAOQA2AEQARgA4ADEAOQBEADEAMgBDAEYAMwA3
ADQAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAyAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAQwBfADIANgBDAEYARABDADMAQQA4AEQAQwBBADQAQgBDADgAOQA2AEQA
RgA4ADEAOQBEADEAMgBDAEYAMwA3ADQAMwAuAGQAbABsAAAAeAArAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQA
MwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMgAxAC4AMwA2ADgAOAAzAAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMgAxAC4AMwA2
ADgAOAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADAMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_26cfdc3a8dca4bc896df819d12cf3743</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::DEBUG,User::DimOrganisationID,User::DimReportingDateID,User::DimSourceTrustID,User::DimTargetTrustID,User::ECPassNo,User::PoolId</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">80305e9bd7794f24bc249adb1b790ecb</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[DimOrganisationId]"
                          cachedDataType="i8"
                          cachedName="DimOrganisationId"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[CriteriaTableTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTableTypeCode"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]" />
                        <inputColumn
                          refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0].Columns[DimPoolID]"
                          cachedDataType="i4"
                          cachedName="DimPoolID"
                          lineageId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output].Columns[DimPoolID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer.Paths[ECResult]"
                  endId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR.Inputs[OLE DB Destination Input]"
                  name="ECResult"
                  startId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Outputs[ECResult]" />
                <path
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer.Paths[OLE DB Source Output]"
                  endId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\FactCustomerECResult\Apply EC For FactCustomer.Paths[Output 0]"
                  endId="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\FactCustomerECResult\Delete FactCustomer EC Results"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F3D273E8-A171-4C22-8DAD-D08BECACA63A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete FactCustomer EC Results"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{603E36D9-43AD-4C2F-BCF7-4E42DBB03E1C}"
              SQLTask:SqlStatementSource="delete dbo.tblFactCustomerECResult&#xA;From dbo.tblFactCustomerECResult FEC&#xA;Inner Join dbo.tblDimEC DimEc on DimEC.DimECID = FEC.DimECID&#xA;        And DimEC.DimPoolID = FEC.DimPoolID&#xA;where FEC.DimPoolId = ? And DimEc.ECPassNoCode = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::PoolId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="8" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ECPassNo"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="100" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\FactCustomerECResult.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{51B44B58-6F5A-4A11-B88A-D494918FD68F}"
          DTS:From="Package\FactCustomerECResult\Delete FactCustomer EC Results"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\FactCustomerECResult\Apply EC For FactCustomer" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FactLoanCustomerECResult"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3C045EF2-98F4-4922-B12C-95183F76EBEE}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="FactLoanCustomerECResult">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{04B6F4BC-BBFE-416A-9741-6B15DF25E66D}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply EC For FactLoanCustomer"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="100"
              defaultBufferSize="40485760"
              version="1">
              <components>
                <component
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Apply FactLoanCustomerECResult EC"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ECResultBuffer ECResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ECResultBuffer)
        {
            ECResultBuffer.SetEndOfRowset();
            ECResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ECResult"))
            {
                ECResultBuffer = new ECResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String OLEDBConnStringALR
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["OLEDBConnString_ALR"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringALR);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnabled)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            //MessageBox.Show(Row.CriteriaDescription.ToString());
            //MessageBox.Show(sQuery);
            try
            {
                String sQueryDelete = String.Format("Delete dbo.tblFactLoanCustomerECResult From dbo.tblFactLoanCustomerECResult Where DimPoolId = {0} And DimECId = {1}", Row.DimPoolID.ToString(), Row.DimECID.ToString());
                SqlCommand _cmd = new SqlCommand(sQueryDelete, _SqlConn);
                _cmd.ExecuteNonQuery();

                _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    ECResultBuffer.AddRow();
                    //ECResultBuffer.DimPoolId = (long)dr["DimPoolId"];
                    //ECResultBuffer.DimECId = (long)dr["DimECId"];
                    //ECResultBuffer.DimConsolidationId = (long)dr["DimConsolidationId"];

                    ECResultBuffer.DimPoolId = Convert.ToInt64(dr["DimPoolId"]);
                    ECResultBuffer.DimECId = Convert.ToInt64(dr["DimECId"]);
                    ECResultBuffer.DimLoanId = Convert.ToInt64(dr["DimLoanId"]);
                    ECResultBuffer.DimCustomerId = Convert.ToInt64(dr["DimCustomerId"]);
                    //ECResultBuffer.ECPassNo = dr["LTVPassNo"].ToString();
                    
                    //ECResultBuffer.ECPassNo = Variables.ECPassNo;
                    //MessageBox.Show(dr["DimPoolId"].GetType().ToString() + "_" + dr["DimECId"].GetType().ToString() + "_" + dr["DimLoanId"].GetType().ToString());

                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply FactLoanCustomer EC", sMsg, "", 0, ref bFireAgain);

            }
            catch (SqlException ex)
            {
                //TODO Logging
                //MessageBox.Show(ex.Message);
                throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply tblFactLoanReturnResult EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[5]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int64 DimPoolID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[6]);
        }
    }
    public bool DimPoolID_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ECResultBuffer: ScriptBuffer

{
    public ECResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 DimPoolId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DimPoolId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimLoanId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DimLoanId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimCustomerId
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DimCustomerId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimECId
    {
        set
        {
            this[3] = value;
        }
    }
    public bool DimECId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{13934DF6-62FA-479E-9147-3EC4F227B722}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace>
    <AssemblyName>SC_FFC40067F87E490ABBE4B17E238534A8</AssemblyName>
    <ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_FFC40067F87E490ABBE4B17E238534A8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANfBRlYAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAAnkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAExEAABPAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
RAAAAAAAAEgAAAACAAUAuCYAAJQdAAABAAAAAAAAAAAmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipSAnsOAAAKAnsPAAAKF5RvEgAACioiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EgAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEwAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvEgAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvFAAACioiAhsoEQAACipSAnsOAAAKAnsP
AAAKHJRvEwAACioiAhwoEQAACioeAigVAAAKKh4CKBYAAAoqKgIDBAUoDQAACio6AhYDjBcAAAEo
FwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKejoCFwOMFwAAASgXAAAKKloDLAgCFygYAAAKKnIB
AABwcxkAAAp6OgIYA4wXAAABKBcAAAoqWgMsCAIYKBgAAAoqcgEAAHBzGQAACno6AhkDjBcAAAEo
FwAACipaAywIAhkoGAAACipyAQAAcHMZAAAKeh4CKBoAAAoqHgIoGwAACioeAigWAAAKKn4CKBwA
AAoCAnMmAAAGfQEAAAQCAnMnAAAGfQIAAAQqAAAAAzAEAE8AAAAAAAAABHKeAABwGm8dAAAKLBUC
BQIDKB4AAAoOBHMBAAAGbyQAAAYFbx8AAAosIwICewQAAAQXWH0EAAAEAnsEAAAEFzMMAm8gAAAG
AighAAAGKgYqbgJ7AwAABCwSAnsDAAAEbxwAAAYCFH0DAAAEKgAAABMwBQA9AAAAAQAAERYKKy4E
BpQOBHKuAABwKCAAAAozGQIFBpoCBAaUKB4AAAoOBHMSAAAGfQMAAAQGF1gKBgMyzgJvIwAABioG
KkorBwIDbyUAAAYDbxAAAAYt8SoGKjoCKCEAAAoCA30FAAAEKjoCKCEAAAoCA30GAAAEKpYCewYA
AARvIgAACnLAAABwbyMAAAooJAAACm8lAAAKdBkAAAEqlgJ7BgAABG8iAAAKctIAAHBvIwAACigk
AAAKbyUAAAp0GQAAASqiAignAAAKAgJ7AgAABG8pAAAGcygAAAp9BwAABAJ7BwAABG8pAAAKKmYC
KCoAAAoCewcAAARvKwAACgIUfQcAAAQqAAAAGzAHALIBAAACAAARFwpy+gAAcAsDbwwAAAY5bwEA
AANvAgAABhYDbwIAAAZvLAAACigtAAAKby4AAAoMKC8AAAoIbzAAAApvMQAACg1y/AAAcANvDgAA
BhMJEgkoMgAACgNvCAAABhMKEgooMgAACigzAAAKEwQRBAJ7BwAABHM0AAAKEwURBW81AAAKJgkC
ewcAAARzNAAAChMFEQUWbzYAAAoRBW83AAAKEwYWEwc4gQAAAAJ7AwAABG8bAAAGAnsDAAAEEQZy
5QEAcG84AAAKKDkAAApvEwAABgJ7AwAABBEGcvkBAHBvOAAACig5AAAKbxkAAAYCewMAAAQRBnIJ
AgBwbzgAAAooOQAACm8VAAAGAnsDAAAEEQZyHQIAcG84AAAKKDkAAApvFwAABhEHF1gTBxEGbzoA
AAo6c////xEGbzsAAAoUEwZyOQIAcANvCgAABm88AAAKEQeMJwAAASgzAAAKCwIoPQAACiDoAwAA
ck0CAHAHcvoAAHAWEgBvPgAACt40EwgRCHpygQIAcANvCgAABig/AAAKCwIoPQAACiDoAwAActMC
AHAHcvoAAHAWEgBvPgAACioAAEEcAAAAAAAAQQAAADwBAAB9AQAABQAAACkAAAEGKh4CKB4AAAYq
HgIoIQAACioAABMwAgAtAAAAAwAAEX4IAAAELSByFQMAcNAIAAACKEEAAApvQgAACnNDAAAKCgaA
CAAABH4IAAAEKhp+CQAABCoeAoAJAAAEKhp+CgAABCouczQAAAaACgAABCoeAihGAAAKKgC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA2AkAACN+AABECgAA
PA0AACNTdHJpbmdzAAAAAIAXAACYAwAAI1VTABgbAAAQAAAAI0dVSUQAAAAoGwAAbAIAACNCbG9i
AAAAAAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAADAAAAAJAAAACgAAADUAAAAcAAAARgAAAA8A
AAADAAAABQAAABsAAAAcAAAAAQAAAAcAAAABAAAAAAAKAAEAAAAAAAYABAHjAAYAEQHjAAoAMQEq
AQ4ATQE4ARIAhgHjAAYAlQHjABIAqQHjABYA2wXFBQoAGgYJBgoASwY2BgoAPgckBwoAaQdXBwoA
gAdXBwoAnQdXBwoAvAdXBwoA1QdXBwoA7gdXBwoACQhXBwoAJAhXBwoAPQhXBwoAdghWCAoAlghW
CAoABgkqAQoAHQkqAQoANwkqAQoAPgkqARoAzgmmCRoA9QmmCQsABQoAABoANQqmCQYAYQrjABYA
mwqICgoAvgoqAQoA5graChYAEAvFBRYAGwuIChYASAvFBRYAZAuICgoAfgsqAR4A0QuoCxYAEAzF
BQoAMAwdDAoATQwqAQoAUgwqAQoAdgxXBw4AogyMDA4AuwyMDAoA0AxWCAAAAAABAAAAAAABAAEA
AQAQADIAAAAFAAEAAQABABAAPwAAAAUAAQASAAEAEABOAAAACQABAB4AAQAQAFwAAAANAAUAJgAB
ABAAaAAAAA0ABgAnAAEAEAByAAAAEAAHACoAAAAQAH0AhwANAAgALwAAARAAvQCHABEACgAzAAYA
XABNAAYAaABRAAYAPwBVAAEA4ARZAAEAaQV4AAEAaQV4AAEA6QWCABEAKgaGABEAVwaKABEAmwao
AFAgAAAAAIYYowETAAEAWyAAAAAAhgi0AR0ABAB1IAAAAACGCMQBIgAEAH4gAAAAAIYI2wEmAAQA
kyAAAAAAhgjzASIABACcIAAAAACGCBICJgAEALEgAAAAAIYIJwIiAAQAuiAAAAAAhghDAioABADP
IAAAAACGCE8CIgAEANggAAAAAIYIYgImAAQA7SAAAAAAhghzAiIABAD2IAAAAACGCIsCIgAEAAsh
AAAAAIYImQIiAAQAFCEAAAAAhgiuAioABAApIQAAAACGCLwCIgAEADIhAAAAAIYA0QIiAAQAOiEA
AAAAhgDZAiIABABCIQAAAACGGKMBEwAEAE0hAAAAAIYIygM/AAcAXCEAAAAAhgjYA0QACABzIQAA
AACGCO0DPwAJAIIhAAAAAIYI+wNEAAoAmSEAAAAAhggQBD8ACwCoIQAAAACGCCIERAAMAL8hAAAA
AIYIOwQ/AA0AziEAAAAAhghHBEQADgDlIQAAAACGAFoESQAPAO0hAAAAAIYAYQRJAA8A9SEAAAAA
hgDZAiIADwD9IQAAAACGGKMBSQAPACAiAAAAAMYA7wRcAA8AeyIAAAAAxgH8BEkAEwB9IgAAAACB
AAoFSQATAJwiAAAAAMYAHgVmABMA5SIAAAAAxgEqBUkAFwDnIgAAAADGAT4FcgAXAPoiAAAAAMYB
UgVyABgA/CIAAAAAhhijAXwAGQALIwAAAACGGKMBfAAaABojAAAAAIYIeQUmABsAQCMAAAAAhgiG
BSYAGwBmIwAAAADGAPIFSQAbAI8jAAAAAMYA/QVJABsArCMAAAAAxgBSBXIAGwCIJQAAAADGACoF
SQAcAIolAAAAAIYYowFJABwAkiUAAAAAgxijAUkAHACcJQAAAACTCGcGjgAcANUlAAAAAJMIewaT
ABwA3CUAAAAAkwiHBpgAHADkJQAAAACWCKsGrAAdAPclAAAAAIYYowFJAB0A6yUAAAAAkRjrDKsB
HQAAAAEAvwYAAAIAxgYAAAMA2gYAAAEAvwYAAAIAxgYAAAMA2gYAAAEA5AYAAAEA5AYAAAEA5AYA
AAEA5AYAAAEA5AYAAAEA5AYAAAEA5AYAAAEA5AYAAAEA6gYAAAIA8gYAAAMAvwYAAAQA2gYAAAEA
/AYAAAIABAcAAAMADgcAAAQA2gYAAAEAvwYAAAEAFgcAAAEAGgcAAAEAGgcAAAEAFgcAAAEA5AZZ
AKMBtgBhAKMBtgBpAKMBtgBxAKMBtgB5AKMBtgCBAKMBtgCJAKMBtgCRAKMBtgCZAKMBtgChAKMB
tgCpAKMBuwCxAKMBSQAJAKMBEwAJAL8GwAAJAMYGxAApANgIyAAJAOEIzQApAOgI0gApAPII1wAp
APsIzQAJANECIgAJANkCIgAJAAwJ3AAJABUJuwDBAKMBtgAJAFoESQAJAGEESQARAKMBSQDJAE8J
4gARAFYJ6QApAGcJIgARAHcJ7wAZAKMBSQARAN8J+gDZANgI/wARACAKBQHhAE0KCgH5AKMBSQAR
APIFSQBBAKMBtgABAagKSQARAP0FSQABAa0KSQA5ALMKFQEJAcYKGQE5AM4KHgERAe8KJQERAegI
KwHJAPsKJgC5AAALJgDJAAkLMQEZAaMBOAEhASULPwEhATULuwAZAVYLQwExAdgISQEJAXELTgEx
AXkLIgAxAa0KSQAZAAALJgARAOoLUwFBAQAMWQHJAAkLZAFRAaMBSQBZAWQMfwFZAX8MiAFJAKMB
jgFxAaMBmwGBAaMBSQAhAKMBSQAuABsAJwIuAGMATQIuAAsArwEuABMA9wEuACMAJwIuACsAJwIu
ADMA9wEuADsALQIuAEMAJwIuAFsARALjADMBEAEDAQMCEAFBASsCEAEpAyMCogFJAyMCogH2AGoB
lgECAAEAAwAPAAYAFwAIABkACQAbAAAA5QIuAAAA8QIzAAAABAM3AAAAGAMzAAAAMwM3AAAARAMz
AAAAXAM7AAAAZAMzAAAAcwM3AAAAgAMzAAAAlAMzAAAAngMzAAAArwM7AAAAuQMzAAAAcAQ7AAAA
egQzAAAAiwQ7AAAAlQQzAAAApgQ7AAAAtAQzAAAAyQQ7AAAA0QQzAAAAnQU3AAAApgU3AAAAGgae
AAAAkwajAAAAtwaxAAIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAPAAIA
CQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAEAEwAfAAEAFAAhAAEAFQAj
AAEAFgAlAAEAFwAnAAEAGAApAAEAGQArAAEAGgAtAAIAKAAvAAIAKQAxAAIAMAAzAAIAMQA1AAEA
MgA1AAIAMwA3AASAAAABAAAApBZrXAAAAAAAALQIAAAMAAAAAAAAAAAAAAABAMYAAAAAAAQAAAAA
AAAAAAAAAAoAIQEAAAAABAAAAAAAAAAAAAAACgAqAQAAAAAMAAAAAAAAAAAAAAABAGUBAAAAAAQA
AAAAAAAAAAAAAAoAuQUAAAAADAAAAAAAAAAAAAAAAQCDCQAAAAAMAAAAAAAAAAAAAAABAIQLAAAA
AAAAAAABAAAA8gwAAAAAADxNb2R1bGU+AFNDX0ZGQzQwMDY3Rjg3RTQ5MEFCQkU0QjE3RTIzODUz
NEE4LmRsbABJbnB1dDBCdWZmZXIARUNSZXN1bHRCdWZmZXIAVXNlckNvbXBvbmVudABDb25uZWN0
aW9ucwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfNzc0NzgwMmQ3NTlkNGRiZGFl
YThlNTA4YTkyYzBiZDMuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNl
cnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRCdWZm
ZXIAU2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdldF9D
cml0ZXJpYVNRTABnZXRfQ3JpdGVyaWFTUUxfSXNOdWxsAGdldF9Dcml0ZXJpYURlc2NyaXB0aW9u
AGdldF9Dcml0ZXJpYURlc2NyaXB0aW9uX0lzTnVsbABnZXRfQ3JpdGVyaWFUeXBlQ29kZQBnZXRf
Q3JpdGVyaWFUeXBlQ29kZV9Jc051bGwAZ2V0X0RpbUVDSUQAZ2V0X0RpbUVDSURfSXNOdWxsAGdl
dF9Dcml0ZXJpYU5hbWUAZ2V0X0NyaXRlcmlhTmFtZV9Jc051bGwAZ2V0X0lzRW5hYmxlZABnZXRf
SXNFbmFibGVkX0lzTnVsbABnZXRfRGltUG9vbElEAGdldF9EaW1Qb29sSURfSXNOdWxsAE5leHRS
b3cARW5kT2ZSb3dzZXQAQ3JpdGVyaWFTUUwAQ3JpdGVyaWFTUUxfSXNOdWxsAENyaXRlcmlhRGVz
Y3JpcHRpb24AQ3JpdGVyaWFEZXNjcmlwdGlvbl9Jc051bGwAQ3JpdGVyaWFUeXBlQ29kZQBDcml0
ZXJpYVR5cGVDb2RlX0lzTnVsbABEaW1FQ0lEAERpbUVDSURfSXNOdWxsAENyaXRlcmlhTmFtZQBD
cml0ZXJpYU5hbWVfSXNOdWxsAElzRW5hYmxlZABJc0VuYWJsZWRfSXNOdWxsAERpbVBvb2xJRABE
aW1Qb29sSURfSXNOdWxsAHNldF9EaW1Qb29sSWQAc2V0X0RpbVBvb2xJZF9Jc051bGwAc2V0X0Rp
bUxvYW5JZABzZXRfRGltTG9hbklkX0lzTnVsbABzZXRfRGltQ3VzdG9tZXJJZABzZXRfRGltQ3Vz
dG9tZXJJZF9Jc051bGwAc2V0X0RpbUVDSWQAc2V0X0RpbUVDSWRfSXNOdWxsAEFkZFJvdwBTZXRF
bmRPZlJvd3NldABEaW1Qb29sSWQARGltUG9vbElkX0lzTnVsbABEaW1Mb2FuSWQARGltTG9hbklk
X0lzTnVsbABEaW1DdXN0b21lcklkAERpbUN1c3RvbWVySWRfSXNOdWxsAERpbUVDSWQARGltRUNJ
ZF9Jc051bGwASW5wdXRzRmluaXNoZWQAUHJvY2Vzc0lucHV0AEZpbmlzaE91dHB1dHMATWFya091
dHB1dHNGaW5pc2hlZABQcmltZU91dHB1dABDcmVhdGVOZXdPdXRwdXRSb3dzAElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQYXJlbnRDb21wb25lbnQAZ2V0X0VDUGFz
c05vAGdldF9PTEVEQkNvbm5TdHJpbmdBTFIARUNQYXNzTm8AT0xFREJDb25uU3RyaW5nQUxSAFN5
c3RlbS5EYXRhAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAF9TcWxDb25uAFBy
ZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhl
cwBPdXRwdXRNYXAAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUAT3V0cHV0cwBPdXRwdXRJRHMAQnVm
ZmVycwBSb3cAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1
bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19GRkM0MDA2N0Y4N0U0OTBBQkJFNEIxN0UyMzg1MzRBOABn
ZXRfSXRlbQBJc051bGwAR2V0U3RyaW5nAEdldEludDY0AEdldEJvb2xlYW4ASW50NjQAc2V0X0l0
ZW0AU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZwBTdHJpbmdDb21wYXJp
c29uAEVxdWFscwBHZXRDb2x1bW5JbmRleGVzAGdldF9FbmRPZlJvd3NldABHZXRPdXRwdXRJRABN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUuV3JhcHBlcgBJRFRTVmFyaWFibGVzMTAwAGdldF9SZWFkT25seVZhcmlhYmxlcwBJ
RFRTVmFyaWFibGUxMDAAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNv
bnRleHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0VmFsdWVXaXRoQ29udGV4dABTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25u
ZWN0aW9uAE9wZW4AQ2xvc2UAZ2V0X0xlbmd0aABDb252ZXJ0AFRvSW50MzIAR2V0QmxvYkRhdGEA
U3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X1VuaWNvZGUAVHJpbQBUb1N0cmluZwBGb3JtYXQAU3Fs
Q29tbWFuZABEYkNvbW1hbmQARXhlY3V0ZU5vblF1ZXJ5AHNldF9Db21tYW5kVGltZW91dABTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJEYXRhUmVhZGVyAFRvSW50NjQAUmVhZABJbnQzMgBN
aWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50
TWV0YURhdGEARmlyZUluZm9ybWF0aW9uAFNxbEV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJk
My5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAA
cAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBs
AHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8A
bAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFFAEMAUgBlAHMAdQBs
AHQAABFFAEMAUABhAHMAcwBOAG8AACdPAEwARQBEAEIAQwBvAG4AbgBTAHQAcgBpAG4AZwBfAEEA
TABSAAABAIDnRABlAGwAZQB0AGUAIABkAGIAbwAuAHQAYgBsAEYAYQBjAHQATABvAGEAbgBDAHUA
cwB0AG8AbQBlAHIARQBDAFIAZQBzAHUAbAB0ACAARgByAG8AbQAgAGQAYgBvAC4AdABiAGwARgBh
AGMAdABMAG8AYQBuAEMAdQBzAHQAbwBtAGUAcgBFAEMAUgBlAHMAdQBsAHQAIABXAGgAZQByAGUA
IABEAGkAbQBQAG8AbwBsAEkAZAAgAD0AIAB7ADAAfQAgAEEAbgBkACAARABpAG0ARQBDAEkAZAAg
AD0AIAB7ADEAfQAAE0QAaQBtAFAAbwBvAGwASQBkAAAPRABpAG0ARQBDAEkAZAAAE0QAaQBtAEwA
bwBhAG4ASQBkAAAbRABpAG0AQwB1AHMAdABvAG0AZQByAEkAZAAAE3sAMAB9ACAAOgAgAHsAMQB9
AAAzQQBwAHAAbAB5ACAARgBhAGMAdABMAG8AYQBuAEMAdQBzAHQAbwBtAGUAcgAgAEUAQwAAUUUA
QwAgAHsAMAB9ACAAaQBzACAAbgBvAHQAIABlAG4AYQBiAGwAZQBkACAAYQBuAGQAIABpAHMAIABu
AG8AdAAgAGEAcABwAGwAaQBlAGQAAEFBAHAAcABsAHkAIAB0AGIAbABGAGEAYwB0AEwAbwBhAG4A
UgBlAHQAdQByAG4AUgBlAHMAdQBsAHQAIABFAEMAAH9TAEMAXwA3ADcANAA3ADgAMAAyAGQANwA1
ADkAZAA0AGQAYgBkAGEAZQBhADgAZQA1ADAAOABhADkAMgBjADAAYgBkADMALgBjAHMAcAByAG8A
agAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAXr5Mr6EOkUuf
ntlvuJ6isAAIiYRdzYCAzJEIt3pcVhk04IkJIAMBEhUdCBIZBCAAEh0DIAACAyAADgMgAAoEKAAS
HQMoAAIDKAAOAygACgQgAQEKBCABAQIDIAABAwYSFAMGEhgDBhIMAgYICSAEAQgOEhUSGQsgBAEI
HQgdEhUSGQUgAQESCAMGEgkFIAEBEgkDBhIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgAEiUE
CAASKQMGEiQEAAASJAQIABIkBCABAQ4EIAEBCAMGEhUDBh0IBCABHAgEIAECCAQgAQ4IBCABCggF
IAIBCBwGIAICDhFpBSABHQgIBgACCBIZDgMHAQgEIAASbQUgARJxHAQAABJ1BSABHBJ5BAEAAAAD
IAAJBAABCAkGIAIdBQgIBQAAEoCJBSABDh0FBgADDg4cHAYgAgEOEiEDIAAIBSAAEoCVBCABHA4E
AAEKHAUgABKAoQogBgEIDg4OCBACBQACDg4cFAcLAg4dBQ4OEoCNEoCVCBKApQoKCAABEoCtEYCx
BSAAEoC1ByACAQ4SgLUEBwESJQYgAQERgL0IAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEA
KlNDXzc3NDc4MDJkNzU5ZDRkYmRhZWE4ZTUwOGE5MmMwYmQzLmNzcHJvagAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDEyAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
dEQAAAAAAAAAAAAAjkQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBEAAAAAAAAAAAAAAAAX0Nv
ckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADQ
AwAAAAAAAAAAAADQAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAa1ykFgAAAQBrXKQWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
MAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAADAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcANwA0ADcA
OAAwADIAZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEAOQAyAGMAMABiAGQAMwAu
AGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NQA3ADkANgAuADIAMwA2ADUAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AEMAXwBGAEYAQwA0ADAAMAA2ADcARgA4ADcARQA0ADkAMABBAEIAQgBFADQAQgAxADcARQAyADMA
OAA1ADMANABBADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMgAAAHgAKAABAE8AcgBpAGcAaQBuAGEA
bABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBGAEYAQwA0ADAAMAA2ADcARgA4ADcARQA0ADkAMABB
AEIAQgBFADQAQgAxADcARQAyADMAOAA1ADMANABBADgALgBkAGwAbAAAAHgAKwABAFAAcgBvAGQA
dQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABh
AGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAzAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAA
cgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADkANgAuADIAMwA2ADUAOQAA
AAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADkA
NgAuADIAMwA2ADUAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAoDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_ffc40067f87e490abbe4b17e238534a8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ECPassNo,User::OLEDBConnString_ALR</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">018c08c57d9b502b03120f370dc3e3d2</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaDescription]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[IsEnabled]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0].Columns[DimPoolID]"
                          cachedDataType="i4"
                          cachedName="DimPoolID"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimPoolID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult]"
                      hasSideEffects="true"
                      name="ECResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimPoolId]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimPoolId]"
                          name="DimPoolId" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimLoanId]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimLoanId]"
                          name="DimLoanId" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimCustomerId]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimCustomerId]"
                          name="DimCustomerId" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimECId]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimECId]"
                          name="DimECId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="FactLoanCustomerECResult"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select 	DimPoolID	
	, DimECID
	, CriteriaName
	, CriteriaDescription
	, CriteriaSetId
	, CriteriaSetTypeCode
	, CriteriaTypeCode
	, IsEnabled
	, ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, CriteriaTableTypeCode
	, SequenceNo
	, DimOrganisationId
                ,cast(null as nvarchar(max)) as CriteriaSQL
from tblDimEC
where DimPoolId = ? and CriteriaTableTypeCode = 'dbo.tblFactLoanCustomerECResult' and ECPassNoCode = ? and IsEnabled = 1
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0",{F7498697-94B9-4899-9B71-5E7C3EAB7D62};"Parameter1",{47A65516-366C-46E6-A597-923EEA41A566};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          name="DimPoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimECID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimECID]"
                          name="DimECID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          dataType="i8"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          dataType="bool"
                          name="IsEnabled" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTableTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          dataType="i8"
                          name="DimOrganisationId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          dataType="i4"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          name="DimPoolID" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          name="DimECID" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          dataType="bool"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="FactLoanCustomerECResult EC Results to ALR"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblFactLoanCustomerECResult]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimPoolId]"
                          cachedDataType="i8"
                          cachedName="DimPoolId"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimPoolId]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimECId]"
                          cachedDataType="i8"
                          cachedName="DimECId"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimECId]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimLoanId]"
                          cachedDataType="i8"
                          cachedName="DimLoanId"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimLoanID]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimLoanId]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimCustomerId]"
                          cachedDataType="i8"
                          cachedName="DimCustomerId"
                          externalMetadataColumnId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult].Columns[DimCustomerId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          dataType="i4"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimLoanID]"
                          dataType="i4"
                          name="DimLoanID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimCustomerID]"
                          dataType="i4"
                          name="DimCustomerID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="FactLoanCustomerECResult EC XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.IO;
using System.Collections.Generic;
using System.Windows.Forms;
//using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.DEBUG;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        bool bFireAgain = true;
        string sMsg = "";

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "DimOrganisationId", "Value", Row.DimOrganisationId.ToString());
            UpdateParameterAttribute(xmlDoc, "DimReportingDateId", "Value", Variables.DimReportingDateID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimPoolId", "Value", Row.DimPoolID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimSourceTrustID", "Value", Variables.DimSourceTrustID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimTargetTrustID", "Value", Variables.DimTargetTrustID.ToString());

            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            if (_DEBUG)
            {
                sMsg = string.Format("{0} {1} {2} {3} {4} {5}: {6}", Row.DimPoolID.ToString(), Row.DimECID.ToString(), Row.CriteriaName, Row.CriteriaTableTypeCode, Row.ECPassNoCode, Environment.NewLine, sQuery);
                ComponentMetaData.FireInformation(1000, "FactLoanSecurity EC To XML", sMsg, "", 0, ref bFireAgain);
            }
            //MessageBox.Show(sQuery);
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);

        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {

        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;

        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public static bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public static string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public static string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public static string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("N'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public static string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[2]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 DimPoolID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool DimPoolID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int64 DimOrganisationId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[4]);
        }
    }
    public bool DimOrganisationId_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String CriteriaTableTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool CriteriaTableTypeCode_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimOrganisationID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimOrganisationID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimSourceTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimSourceTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimTargetTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimTargetTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PoolId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PoolId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace>
    <AssemblyName>SC_6646A021E11C4B6990B39B389EED8FC1</AssemblyName>
    <ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{1B795638-9A73-44D7-A7FB-1D2B9C2AAA9D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_6646A021E11C4B6990B39B389EED8FC1.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMUcSFYAAAAAAAAAAOAAAiELAQsAADQAAAAIAAAAAAAAnlMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAExTAABPAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApDMAAAAgAAAANAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAA2AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
UwAAAAAAAEgAAAACAAUAaC4AAOQkAAABAAAAAAAAALAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASomAhYDKBEAAAoqIgIWKBIAAAoqWgMsCAIWKBMAAAoqcgEAAHBzFAAACnpmAnsOAAAKAnsPAAAK
F5RvEAAACnQHAAABKiICFygSAAAKKlICew4AAAoCew8AAAoYlG8VAAAKKiICGCgSAAAKKlICew4A
AAoCew8AAAoZlG8VAAAKKiICGSgSAAAKKlICew4AAAoCew8AAAoalG8VAAAKKiICGigSAAAKKlIC
ew4AAAoCew8AAAoblG8WAAAKKiICGygSAAAKKlICew4AAAoCew8AAAoclG8WAAAKKiICHCgSAAAK
KlICew4AAAoCew8AAAodlG8WAAAKKiICHSgSAAAKKh4CKBcAAAoqHgIoGAAACip+AigZAAAKAgJz
GgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcp4AAHAabxoAAAosFQIFAgMoGwAACg4EcwEAAAZvGAAA
BipKKwcCA28ZAAAGA28UAAAGLfEqBio6AigcAAAKAgN9AwAABCo6AigcAAAKAgN9BAAABCqWAnsE
AAAEbx0AAApyrgAAcG8eAAAKKB8AAApvIAAACqUfAAABKpYCewQAAARvHQAACnK6AABwbx4AAAoo
HwAACm8gAAAKdBkAAAEqlgJ7BAAABG8dAAAKct4AAHBvHgAACigfAAAKbyAAAAp0GQAAASqWAnsE
AAAEbx0AAApyBAEAcG8eAAAKKB8AAApvIAAACnQZAAABKpYCewQAAARvHQAACnImAQBwbx4AAAoo
HwAACm8gAAAKdBkAAAEqlgJ7BAAABG8dAAAKckgBAHBvHgAACigfAAAKbyAAAAp0GQAAASqWAnsE
AAAEbx0AAApyWgEAcG8eAAAKKB8AAApvIAAACnQZAAABKmICKCIAAAoCAnsCAAAEbxwAAAZ9BgAA
BCoeAigjAAAKKgAAABswBwAaAgAAAQAAERcKcmgBAHALcyQAAAoMA28GAAAGFgNvBgAABm8lAAAK
KCYAAApvJwAACg1yagEAcCgoAAAKCW8pAAAKbyoAAAooKwAAChMECXMsAAAKEwURBW8tAAAKEQUW
am8uAAAKCBEFby8AAAoIcsIBAHBy5gEAcANvDAAABhMKEgooMAAACignAAAGJghy8gEAcHLmAQBw
AnsCAAAEbx4AAAZvMQAACignAAAGJghyGAIAcHLmAQBwA28KAAAGEwsSCygwAAAKKCcAAAYmCHIs
AgBwcuYBAHADbwgAAAYTDBIMKDAAAAooJwAABiYIcgQBAHBy5gEAcAJ7AgAABG8fAAAGbzEAAAoo
JwAABiYIciYBAHBy5gEAcAJ7AgAABG8gAAAGbzEAAAooJwAABiYIcjwCAHByQgIAcCgsAAAGEwYC
ewYAAAQ5hgAAAHJSAgBwHY0DAAABEw0RDRYDbwoAAAYTDhIOKDAAAAqiEQ0XA28IAAAGEw8SDygw
AAAKohENGANvEAAABqIRDRkDbxIAAAaiEQ0aA28OAAAGohENGygyAAAKohENHBEGohENKDMAAAoL
Aig0AAAKIOgDAAByjAIAcAdyaAEAcBYSAG81AAAKKCgAAAoRBm82AAAKEwcDbwIAAAZvNwAACgNv
AgAABhEHbzgAAAreJBMIcsICAHARBCgyAAAKEQhvOQAACig6AAAKEwkRCXM7AAAKeioAAEEcAAAA
AAAARwAAAK4BAAD1AQAAJAAAACgAAAEbMAMAggAAAAIAABEUCgJvPAAACgsHctYCAHBvPQAACgwo
PgAACnM/AAAKDQhvQAAAChMFKywRBW9BAAAKdAgAAAETBAkRBG9CAAAKchoDAHBvQwAACm9EAAAK
EQRvRQAAChEFb0YAAAoty94VEQV1MgAAARMGEQYsBxEGb0cAAArcCQMSAG9IAAAKJgYqAAABEAAA
AgAoADlhABUAAAAAEzACAFMAAAADAAARFgoCAygmAAAGCwctAgYqB29CAAAKBG9DAAAKLBYHb0IA
AAoEb0MAAAoFb0kAAAoXCiseAgRvSgAACgwIBW9JAAAKB29CAAAKCG9LAAAKJhcKBioAEzAEACAA
AAAEAAARc0wAAAoKBnIkAwBwAm8qAAAKA29NAAAKJgZvMQAACioTMAMAHwAAAAQAABFzTAAACgoG
cjYDAHACbyoAAApvTgAACiYGbzEAAAoqABswBADHAAAABQAAEXJCAwBwCn5PAAAKc1AAAAoLAi0C
BioCcmYDAHBvPQAACgwIOZYAAAAIb1EAAAoWPooAAAAHcpIDAHBvUgAACiYIb0AAAAoTBSszEQVv
QQAACnQIAAABDQdylgMAcAlvQgAACnLmAQBwb0MAAApvRAAACm8xAAAKb04AAAomEQVvRgAACi3E
3hURBXUyAAABEwYRBiwHEQZvRwAACtwHB29TAAAKGFkYb1QAAApyqAMAcG9SAAAKJgdvMQAACgre
BRMEEQR6BioAARwAAAIASABAiAAVAAAAAAAAFgCqwAAFKAAAARswBQApAwAABgAAEXNMAAAKCgIt
BwZvMQAACioCctYCAHBvPQAACgsHOfkCAAAHb0AAAAoTBTjJAgAAEQVvQQAACnQIAAABDH5PAAAK
DQhvQgAACnKsAwBwb0MAAApvRAAACm8xAAAKJRMGOfoBAAARBnLAAwBwKFUAAAotJxEGctIDAHAo
VQAACjqtAAAAEQZy4gMAcChVAAAKOjMBAAA4xQEAAHL0AwBwG40DAAABEwcRBxYIb0IAAApyGgMA
cG9DAAAKb0QAAApvMQAACqIRBxcIb0IAAApyrAMAcG9DAAAKb0QAAApvMQAACqIRBxgIb0IAAApy
rAMAcG9DAAAKb0QAAApvMQAACqIRBxkIb0IAAApy5gEAcG9DAAAKb0QAAApvMQAACqIRBxoDohEH
KDMAAAoNOMABAAByVAQAcBuNAwAAARMIEQgWCG9CAAAKchoDAHBvQwAACm9EAAAKbzEAAAqiEQgX
CG9CAAAKcqwDAHBvQwAACm9EAAAKbzEAAAqiEQgYCG9CAAAKcqwDAHBvQwAACm9EAAAKbzEAAAqi
EQgZCG9CAAAKcuYBAHBvQwAACm9EAAAKbzEAAAqiEQgaA6IRCCgzAAAKDTgpAQAAclQEAHAbjQMA
AAETCREJFghvQgAACnIaAwBwb0MAAApvRAAACm8xAAAKohEJFwhvQgAACnKsAwBwb0MAAApvRAAA
Cm8xAAAKohEJGAhvQgAACnKsAwBwb0MAAApvRAAACm8xAAAKohEJGQhvQgAACnLmAQBwb0MAAApv
RAAACm8xAAAKohEJGgOiEQkoMwAACg04kgAAAHK+BABwG40DAAABEwoRChYIb0IAAApyGgMAcG9D
AAAKb0QAAApvMQAACqIRChcIb0IAAApyrAMAcG9DAAAKb0QAAApvMQAACqIRChgIb0IAAApyrAMA
cG9DAAAKb0QAAApvMQAACqIRChkIb0IAAApy5gEAcG9DAAAKb0QAAApvMQAACqIRChoDohEKKDMA
AAoNBglvUgAACiYRBW9GAAAKOiv9///eFREFdTIAAAETCxELLAcRC29HAAAK3N4FEwQRBHoGbzEA
AAoqAAAAQTQAAAIAAAAqAAAA3AIAAAYDAAAVAAAAAAAAAAAAAAAQAAAADQMAAB0DAAAFAAAAKAAA
ARswAwA8AAAABwAAEXNMAAAKCgItBwZvMQAACioGAgMoKwAABm9SAAAKJgYCckICAHAoLQAABm9S
AAAKJt4DCwd6Bm8xAAAKKgEQAAAAABAAIjIAAygAAAEbMAMAZQEAAAgAABF+TwAACgoCLQoDKFYA
AAosAgYqAgNvVwAACgsHOTsBAAAHb1gAAAoKBnNQAAAKDAJyFAUAcG89AAAKDQksfglvQAAAChMJ
K1QRCW9BAAAKdAgAAAETBBEEb0IAAApyXgUAcG9DAAAKb0QAAApvMQAACigpAAAGEwUIEQRvQgAA
CnIaAwBwb0MAAApvRAAACm8xAAAKEQVvWQAACiYRCW9GAAAKLaPeFREJdTIAAAETChEKLAcRCm9H
AAAK3BQNAnJwBQBwbz0AAAoNCTmFAAAACW9AAAAKEwsrWxELb0EAAAp0CAAAARMGEQZvQgAACnJe
BQBwb0MAAApvRAAACm8xAAAKEQYoKgAABigoAAAGEwcIEQZvQgAACnIaAwBwb0MAAApvRAAACm8x
AAAKEQdvWQAACiYRC29GAAAKLZzeFRELdTIAAAETDBEMLAcRDG9HAAAK3AhvMQAACgreBRMIEQh6
BioAAABBTAAAAgAAAEYAAABhAAAApwAAABUAAAAAAAAAAgAAANgAAABoAAAAQAEAABUAAAAAAAAA
AAAAABMAAABLAQAAXgEAAAUAAAAoAAABHgIoFgAABioeAigcAAAKKhMwAgAtAAAACQAAEX4HAAAE
LSBytgUAcNAHAAACKFsAAApvXAAACnNdAAAKCgaABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+
CQAABCouczQAAAaACQAABCoeAihgAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAzAoAACN+AAA4CwAAsA8AACNTdHJpbmdzAAAAAOgaAAA4BgAAI1VT
ACAhAAAQAAAAI0dVSUQAAAAwIQAAtAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQEAAAD6JTMAFgAA
AQAAADoAAAAIAAAACQAAADUAAAAgAAAAYAAAAAEAAAAPAAAACQAAAAQAAAAaAAAAHQAAAAEAAAAB
AAAABwAAAAEAAAAAAAoAAQAAAAAABgD1ANQABgACAdQACgAiARsBDgA+ASkBEgB3AdQABgCGAdQA
EgCaAdQAFgCaBY8FFgCiBY8FCgB4BmcGCgCpBpQGCgD9B+MHCgAoCBYICgA/CBYICgBcCBYICgB7
CBYICgCUCBYICgCtCBYICgDICBYICgDjCBYICgD8CBYICgA1CRUJCgBVCRUJCgC4CRsBCgDlCRsB
CgDsCRsBGgBgCjgKGgCHCjgKCwCXCgAAGgDHCjgKCgDzChsBBgD7CtQACgAtCxsBCgBVC0kLCgCA
C3YLCgCNC3YLCgCsCxsBCgC7CxsBHgAgDPcLCgCCDBsBCgCYDBsBFgCtDI8FFgDMDI8FCgDkDBsB
CgAtDRINCgA6DRINCgBhDU4NFgCHDY8FFgCtDY8FCgDcDRsBCgAdDkkLCgCjDpAOCgDADhsBCgDF
DhsBCgDpDhYIDgAVD/8ODgAuD/8OCgBDDxUJAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEA
EAA/AAAACQABABYAAQAQAE0AAAANAAMAGgABABAAWQAAAA0ABAAbAAEAEABjAAAADAAFACMAAAAQ
AG4AeAANAAcALwAAARAArgB4ABEACQAzAAYATQBKAAYAWQBOAAEAgARmAAEAgARmAFGAZgVwAAEA
cQV4ABEAiAasABEAtQawABEA+QbOAFAgAAAAAIYYlAETAAEAWyAAAAAAhgilAR0ABAB1IAAAAACG
CLUBIgAEAH8gAAAAAIYIxQEoAAUAiCAAAAAAhgjcASwABQCfIAAAAACGCPMBHQAGALkgAAAAAIYI
BQIoAAYAwiAAAAAAhggeAjEABgDXIAAAAACGCCoCKAAGAOAgAAAAAIYIPQIxAAYA9SAAAAAAhghL
AigABgD+IAAAAACGCGACMQAGABMhAAAAAIYIdgIoAAYAHCEAAAAAhgiTAjUABgAxIQAAAACGCKQC
KAAGADohAAAAAIYIvAI1AAYATyEAAAAAhgjNAigABgBYIQAAAACGCOUCNQAGAG0hAAAAAIYI/wIo
AAYAdiEAAAAAhgAgAygABgB+IQAAAACGACgDKAAGAIYhAAAAAIYYlAFSAAYApiEAAAAAxgBIBFYA
BgDLIQAAAADGAVUEYAAKAN4hAAAAAMYBaQRgAAsA4CEAAAAAhhiUAWoADADvIQAAAACGGJQBagAN
AP4hAAAAAIYIkAQoAA4AJCIAAAAAhgiaBDUADgBKIgAAAACGCLAENQAOAHAiAAAAAIYIxwQ1AA4A
liIAAAAAhgjcBDUADgC8IgAAAACGCPEENQAOAOIiAAAAAIYI/gQ1AA4ACCMAAAAAxgB4BVIADgAh
IwAAAADGAIMFUgAOACwjAAAAAMYAaQRgAA4AcCUAAAAAlgCuBXsADwAQJgAAAACWAMEFgwARAHAm
AAAAAJYA2gWMABUAnCYAAAAAlgDzBZIAFwDIJgAAAACWAP8FlwAYALgnAAAAAJYAFQadABkAJCsA
AAAAlgAxBqQAGwB8KwAAAACWAE8GnQAeADwtAAAAAIYYlAFSACAARC0AAAAAgxiUAVIAIABMLQAA
AACTCMUGtAAgAIUtAAAAAJMI2Qa5ACAAjC0AAAAAkwjlBr4AIACULQAAAACWCAkH0gAhAKctAAAA
AIYYlAFSACEAmy0AAAAAkRheD/ECIQAAAAEAHQcAAAIAJAcAAAMAOAcAAAEAQgcAAAEAQgcAAAEA
SAcAAAIAUAcAAAMAHQcAAAQAOAcAAAEAHQcAAAEAWgcAAAEAXgcAAAEAXgcAAAEAWgcAAAEAaAcA
AAIAbwcAAAEAaAcAAAIAbwcAAAMAfgcAAAQAjQcAAAEAnQcAAAIApwcAAAEAnQcAAAEAsgcAAAEA
aAcAAAIAuwcAAAEAaAcAAAIAuwcAAAMAygcAAAEAaAcAAAIA2QcAAAEAQgdhAJQB3ABpAJQB3ABx
AJQB3AB5AJQB3ACBAJQB3ACJAJQB3ACRAJQB3ACZAJQB3AChAJQB3ACpAJQB3ACxAJQB4QC5AJQB
UgAJAJQBEwAJAB0H5gAJACQH6gApAJcJ7gAJAKAJ8wAJAKkJ+QAJALAJ4QDBAJQB3AApANIJ/gAp
ANsJAwEJACADKAAJACgDKAARAJQBUgDJAP0JCAERAAQKDwEZAJQBUgARAHEKFQHZAJcJGgERALIK
IAHhAN8KJQEBAZQBUgARAHgFUgARAIMFUgBJAJQBUgA5ACILMAEJATULNAE5AD0LOQERAV4LQAER
AdsJRgHJAGoLNQDJAG8LTAEZAZQBUgEhAZQLUgAhAZoLWAFJAKcLXQEpAbILNQAZALILNQAxAccL
ZAHJAG8LaAERADkMbwE5AU8MdQERAV8MgAE5AGgMUgA5AHYMUgFBAYwMNQDJAG8LhgFJAZQB3ABJ
ALgMqQFBANgMrwFhAfMMtgEMAJQBxQFZAW0N0AF5AXsN1gFBAJ4N2gGBAboN4AFBAMUNNQAMAM8N
5wF5AdMNKACRAegNUgAMAPAN7wFBAPwN3ABJAAYO4AGBARYOEwKZAZQBUgCZASsOJQKZASsONALJ
ADgOcACZAZQB3ABZAT4OPAKZARYOQAKZASILPAKZAUgORwLJAE8OZALJAFsOkQJBAGkOlgJBAHoO
NQCZAYgOnAKhAZQBUgCpAdcOxQKpAfIOzgJRAJQB1ALBAZQB4QLRAZQBUgAhAJQBUgAOABQAcwAu
ABsAbQMuAGMAkwMuAAsA9QIuABMAPQMuACMAbQMuACsAbQMuADMAPQMuADsAcwMuAEMAbQMuAFsA
igPDAAsBKwHjANMCKwEhAfsCKwEJA/MC6AIpA/MC6AKOAfgBHAIuAk8CagKIAqQC3AICAAEABQAR
AAcAGAAIABoAAAA0AzkAAABAAz4AAABTAzkAAABhAz4AAAB2A0IAAAB+Az4AAACNA0IAAACXAz4A
AACoA0IAAAC6Az4AAADTA0YAAADgAz4AAAD0A0YAAAABBD4AAAAVBEYAAAArBD4AAAAJBT4AAAAP
BUYAAAAhBUYAAAA0BUYAAABFBUYAAABWBUYAAABfBUYAAAB4BsQAAADxBskAAAAVB9cAAgACAAMA
AQADAAMAAgAEAAUAAQAFAAUAAgAGAAcAAgAHAAkAAgAIAAsAAgAJAA0AAgAKAA8AAgALABEAAgAM
ABMAAgANABUAAgAOABcAAgAPABkAAgAQABsAAgARAB0AAgASAB8AAgATACEAAgAcACMAAgAdACUA
AgAeACcAAgAfACkAAgAgACsAAgAhAC0AAgAiAC8AAgAwADEAAgAxADMAAQAyADMAAgAzADUAvAEE
gAAAAQAAAKUWImEAAAAAAABzCQAADAAAAAAAAAAAAAAAAQC3AAAAAAAEAAAAAAAAAAAAAAAKABIB
AAAAAAQAAAAAAAAAAAAAAAoAGwEAAAAADAAAAAAAAAAAAAAAAQBWAQAAAAAEAAAAAAAAAAAAAAAK
AI8FAAAAAAwAAAAAAAAAAAAAAAEAFQoAAAAADAAAAAAAAAAAAAAAAQDTCwAAAAAAAAAAAQAAAGUP
AAAAAAA8TW9kdWxlPgBTQ182NjQ2QTAyMUUxMUM0QjY5OTBCMzlCMzg5RUVEOEZDMS5kbGwASW5w
dXQwQnVmZmVyAFVzZXJDb21wb25lbnQAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFNjcmlwdE1haW4A
UmVzb3VyY2VzAFNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNzcHJvai5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0QnVmZmVyAFNjcmlwdENvbXBvbmVudABtc2Nvcmxp
YgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1
dE5hbWVNYXAALmN0b3IAQmxvYkNvbHVtbgBnZXRfQ3JpdGVyaWFTUUwAc2V0X0NyaXRlcmlhU1FM
AGdldF9Dcml0ZXJpYVNRTF9Jc051bGwAc2V0X0NyaXRlcmlhU1FMX0lzTnVsbABnZXRfWE1MU3Fs
UXVlcnlFQwBnZXRfWE1MU3FsUXVlcnlFQ19Jc051bGwAZ2V0X0RpbUVDSUQAZ2V0X0RpbUVDSURf
SXNOdWxsAGdldF9EaW1Qb29sSUQAZ2V0X0RpbVBvb2xJRF9Jc051bGwAZ2V0X0RpbU9yZ2FuaXNh
dGlvbklkAGdldF9EaW1PcmdhbmlzYXRpb25JZF9Jc051bGwAZ2V0X0VDUGFzc05vQ29kZQBnZXRf
RUNQYXNzTm9Db2RlX0lzTnVsbABnZXRfQ3JpdGVyaWFOYW1lAGdldF9Dcml0ZXJpYU5hbWVfSXNO
dWxsAGdldF9Dcml0ZXJpYVRhYmxlVHlwZUNvZGUAZ2V0X0NyaXRlcmlhVGFibGVUeXBlQ29kZV9J
c051bGwATmV4dFJvdwBFbmRPZlJvd3NldABDcml0ZXJpYVNRTABDcml0ZXJpYVNRTF9Jc051bGwA
WE1MU3FsUXVlcnlFQwBYTUxTcWxRdWVyeUVDX0lzTnVsbABEaW1FQ0lEAERpbUVDSURfSXNOdWxs
AERpbVBvb2xJRABEaW1Qb29sSURfSXNOdWxsAERpbU9yZ2FuaXNhdGlvbklkAERpbU9yZ2FuaXNh
dGlvbklkX0lzTnVsbABFQ1Bhc3NOb0NvZGUARUNQYXNzTm9Db2RlX0lzTnVsbABDcml0ZXJpYU5h
bWUAQ3JpdGVyaWFOYW1lX0lzTnVsbABDcml0ZXJpYVRhYmxlVHlwZUNvZGUAQ3JpdGVyaWFUYWJs
ZVR5cGVDb2RlX0lzTnVsbABQcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0Um93AFBhcmVudENvbXBvbmVudABnZXRfREVCVUcAZ2V0X0RpbU9yZ2FuaXNh
dGlvbklEAGdldF9EaW1SZXBvcnRpbmdEYXRlSUQAZ2V0X0RpbVNvdXJjZVRydXN0SUQAZ2V0X0Rp
bVRhcmdldFRydXN0SUQAZ2V0X0VDUGFzc05vAGdldF9Qb29sSWQAREVCVUcARGltT3JnYW5pc2F0
aW9uSUQARGltUmVwb3J0aW5nRGF0ZUlEAERpbVNvdXJjZVRydXN0SUQARGltVGFyZ2V0VHJ1c3RJ
RABFQ1Bhc3NObwBQb29sSWQAX0VuZE9mTGluZQBfREVCVUcAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBTeXN0ZW0uWG1sAFhtbE5vZGUAWG1sRG9jdW1lbnQAR2V0UGFyYW1ldGVyQnlOYW1lAFVwZGF0
ZVBhcmFtZXRlckF0dHJpYnV0ZQBHZXRPcGVyYXRvcldpdGhQYXJhbWV0ZXIAR2V0T3BlcmF0b3IA
U2VsZWN0ZWRJdGVtc1RvU3RyaW5nAEdldFRTUUxEZWNsYXJlSGVhZGVyRnJvbVhNTABHZXRUU1FM
RXhlY3V0YWJsZVF1ZXJ5RnJvbVhNTABHZXRUU1FMUXVlcnlCb2R5RnJvbVhNTABTeXN0ZW0uUmVz
b3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBD
dWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0
AEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0
TmFtZQBSb3cAQ29tcG9uZW50AFhtbERvYwBzUGFyYW1ldGVyTmFtZQBzQXR0cmlidXRlTmFtZQBz
QXR0cmlidXRlVmFsdWUAc09wZXJhdG9yAHNQYXJhbWV0ZXIAeG1sUGFyYW0Ac0xpbmVEZWxpbWl0
ZXIAc1F1ZXJ5Tm9kZVBhdGgAc05vZGVQYXRoAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ182NjQ2QTAyMUUxMUM0QjY5OTBCMzlCMzg5
RUVEOEZDMQBnZXRfSXRlbQBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAEdldEludDY0AEdldFN0cmluZwBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVh
bHMAR2V0Q29sdW1uSW5kZXhlcwBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTVmFyaWFibGVzMTAwAGdl
dF9SZWFkT25seVZhcmlhYmxlcwBJRFRTVmFyaWFibGUxMDAAU2NyaXB0Q29tcG9uZW50RXZhbENv
bnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0VmFs
dWVXaXRoQ29udGV4dABCb29sZWFuAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAGdldF9MZW5ndGgAQ29udmVydABUb0ludDMyAEdldEJsb2JEYXRhAFN5c3RlbS5UZXh0AEVu
Y29kaW5nAGdldF9Vbmljb2RlAFRyaW0ARm9ybWF0AFN5c3RlbS5JTwBNZW1vcnlTdHJlYW0AU3Ry
ZWFtAEZsdXNoAHNldF9Qb3NpdGlvbgBMb2FkAEludDY0AFRvU3RyaW5nAEVudmlyb25tZW50AGdl
dF9OZXdMaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdl
dF9Db21wb25lbnRNZXRhRGF0YQBGaXJlSW5mb3JtYXRpb24AR2V0Qnl0ZXMAUmVzZXRCbG9iRGF0
YQBBZGRCbG9iRGF0YQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQXBwbGljYXRpb25FeGNlcHRpb24A
WG1sRWxlbWVudABnZXRfRG9jdW1lbnRFbGVtZW50AFhtbE5vZGVMaXN0AFNlbGVjdE5vZGVzAFN0
cmluZ0NvbXBhcmVyAGdldF9JbnZhcmlhbnRDdWx0dXJlSWdub3JlQ2FzZQBTeXN0ZW0uQ29sbGVj
dGlvbnMuR2VuZXJpYwBEaWN0aW9uYXJ5YDIASUVxdWFsaXR5Q29tcGFyZXJgMQBTeXN0ZW0uQ29s
bGVjdGlvbnMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABYbWxBdHRyaWJ1
dGVDb2xsZWN0aW9uAGdldF9BdHRyaWJ1dGVzAFhtbEF0dHJpYnV0ZQBnZXRfSXRlbU9mAGdldF9W
YWx1ZQBBZGQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBUcnlHZXRWYWx1ZQBzZXRfVmFs
dWUAQ3JlYXRlQXR0cmlidXRlAEFwcGVuZABTdHJpbmdCdWlsZGVyAEFwcGVuZEZvcm1hdABFbXB0
eQBnZXRfQ291bnQAUmVtb3ZlAG9wX0VxdWFsaXR5AElzTnVsbE9yRW1wdHkAU2VsZWN0U2luZ2xl
Tm9kZQBnZXRfSW5uZXJUZXh0AFJlcGxhY2UAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQAuY2N0b3IAU0NfZmQwYmFiNjcxZmY0NDYyNjg0NGQzYmM2OWEyZDgyYmUuY3Nwcm9qLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAC0QARQBCAFUARwAAI0QAaQBtAE8AcgBn
AGEAbgBpAHMAYQB0AGkAbwBuAEkARAAAJUQAaQBtAFIAZQBwAG8AcgB0AGkAbgBnAEQAYQB0AGUA
SQBEAAAhRABpAG0AUwBvAHUAcgBjAGUAVAByAHUAcwB0AEkARAAAIUQAaQBtAFQAYQByAGcAZQB0
AFQAcgB1AHMAdABJAEQAABFFAEMAUABhAHMAcwBOAG8AAA1QAG8AbwBsAEkAZAAAAQBXPAA/AHgA
bQBsACAAdgBlAHIAcwBpAG8AbgA9ACIAMQAuADAAIgAgAGUAbgBjAG8AZABpAG4AZwA9ACIAdQB0
AGYALQAxADYAIgAgAD8APgB7ADAAfQABI0QAaQBtAE8AcgBnAGEAbgBpAHMAYQB0AGkAbwBuAEkA
ZAAAC1YAYQBsAHUAZQAAJUQAaQBtAFIAZQBwAG8AcgB0AGkAbgBnAEQAYQB0AGUASQBkAAATRABp
AG0AUABvAG8AbABJAGQAAA9EAGkAbQBFAEMASQBkAAAFDQAKAAAPLwAvAFEAdQBlAHIAeQAAOXsA
MAB9ACAAewAxAH0AIAB7ADIAfQAgAHsAMwB9ACAAewA0AH0AIAB7ADUAfQA6ACAAewA2AH0AADVG
AGEAYwB0AEwAbwBhAG4AUwBlAGMAdQByAGkAdAB5ACAARQBDACAAVABvACAAWABNAEwAABN7ADAA
fQB7ADEAfQB7ADIAfQAAQy8ALwBQAGEAcgBhAG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUwBx
AGwAUABhAHIAYQBtAGUAdABlAHIAJwBdAAEJTgBhAG0AZQAAESAAewAwAH0AIAB7ADEAfQAACyAA
ewAwAH0AIAAAIygAJwBuAG8AbgBlACcAKQAgAEEAbgBkACAAMQA9ADEAIAABKy4ALwAvAFMAZQBs
AGUAYwB0AGUAZABJAHQAZQBtAHMALwBJAHQAZQBtAAADKAAAEU4AJwB7ADAAfQAnACwAIAABAykA
ABNTAHEAbABEAGIAVAB5AHAAZQAAEUQAYQB0AGUAVABpAG0AZQAAD1YAYQByAEMAaABhAHIAABFO
AFYAYQByAEMAaABhAHIAAF9EAGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACAAPQAgAEMA
bwBuAHYAZQByAHQAKAB7ADIAfQAsACAAJwB7ADMAfQAnACwAIAAxADIAMAApACAAewA0AH0AAWlE
AGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACgAbQBhAHgAKQAgAD0AIABDAG8AbgB2AGUA
cgB0ACgAewAyAH0AKABtAGEAeAApACwAIAAnAHsAMwB9ACcAKQAgAHsANAB9AAFVRABlAGMAbABh
AHIAZQAgAEAAewAwAH0AIAB7ADEAfQAgAD0AIABDAG8AbgB2AGUAcgB0ACgAewAyAH0ALAAgACcA
ewAzAH0AJwApACAAewA0AH0AAUkvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAn
AFIAZQBwAGwAYQBjAGUATwBwAGUAcgBhAHQAbwByACcAXQABEU8AcABlAHIAYQB0AG8AcgAARS8A
LwBQAGEAcgBhAG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUgBlAHAAbABhAGMAZQBMAG8AbwBr
AHUAcAAnAF0AAX9TAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQA
MwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAnbpvoriQ+R4fWomOaYa5fAAiJhF3NgIDMkQi3elxW
GTTgiQkgAwESFR0IEhkEIAASHQUgAQESHQMgAAIEIAEBAgMgAAoDIAAOBCgAEh0DKAACAygACgMo
AA4DBhIQAwYSFAMgAAEJIAQBCA4SFRIZBSABARIIAwYSCQUgAQESCQIGDgQNAAoAAgYCBwACEiES
JQ4IAAQCEiUODg4FAAIODg4EAAEODgUAAQ4SIQYAAg4SJQ4HAAMOEiUODgMGEikDBhItBAAAEikE
AAASLQUAAQESLQQIABIpBAgAEi0DBhIgBAAAEiAECAASIAQgAQEOBCABAQgDBhIVAwYdCAQgARwI
BSACAQgcBCABAggEIAEKCAQgAQ4IBiACAg4RaQUgAR0ICAQgABJtBSABEnEcBAAAEnUFIAEcEnkE
AQAAAAMgAAkEAAEICQYgAh0FCAgFAAASgIkFIAEOHQUFAAIODhwFIAEBHQUEIAEBCgYgAQESgJED
AAAOBgACDg4dHAUgABKAnQogBgEIDg4OCBACBSABHQUOBwAEDg4cHBwaBxACDhIlHQUOEoCNDh0F
EoChDgoKCh0cCgoFIAASgKkGIAESgK0OBQAAEoCxCBUSgLUCDhIhCiABARUSgLkBEwAFIAASgL0D
IAAcBSAAEoDBBiABEoDFDgcgAgETABMBCCACAhMAEBMBGgcHEiESgKkSgK0VEoC1Ag4SIRIhEoC9
EoDJCCABEoDFEoDFCAcDAhIhEoDFCCADEoDNDhwcBQcBEoDNByACEoDNDhwDIAAIBiABEoDNDgcg
AhKAzQgIFAcHDhKAzRKArRIhEoChEoC9EoDJBQACAg4OHQcMEoDNEoCtEiEOEoChEoC9Dh0cHRwd
HB0cEoDJCAcCEoDNEoChBAABAg4FIAESIQ4HIAISgM0ODiAHDQ4SIRKAzRKArRIhDhIhDhKAoRKA
vRKAyRKAvRKAyQgAARKA1RGA2QUgABKA3QcgAgEOEoDdBAcBEikGIAEBEYDlCAEAAgAAAAAAAwAA
AUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQ
Lk5FVCBGcmFtZXdvcmsgNC8BACpTQ19mZDBiYWI2NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5j
c3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQAAdFMAAAAAAAAAAAAAjlMAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAIBTAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAANADAAAAAAAA
AAAAANADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAi
YaUWAAABACJhpRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQwAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAMAwAAAQAwADAAMAAwADAANABiADAAAACAACsA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZgBkADAAYgBhAGIANgA3
ADEAZgBmADQANAA2ADIANgA4ADQANABkADMAYgBjADYAOQBhADIAZAA4ADIAYgBlAC4AYwBzAHAA
cgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcAOQA3
AC4AMgA0ADgANgA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADYA
NgA0ADYAQQAwADIAMQBFADEAMQBDADQAQgA2ADkAOQAwAEIAMwA5AEIAMwA4ADkARQBFAEQAOABG
AEMAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAyAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAQwBfADYANgA0ADYAQQAwADIAMQBFADEAMQBDADQAQgA2ADkAOQAwAEIA
MwA5AEIAMwA4ADkARQBFAEQAOABGAEMAMQAuAGQAbABsAAAAeAArAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQA
MwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAOQA3AC4AMgA0ADgANgA2AAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAOQA3AC4AMgA0
ADgANgA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAACgMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_6646a021e11c4b6990b39b389eed8fc1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::DEBUG,User::DimOrganisationID,User::DimReportingDateID,User::DimSourceTrustID,User::DimTargetTrustID,User::ECPassNo,User::PoolId</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">31896aa71586e11e7ad3adeabb35dbf3</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[DimPoolID]"
                          cachedDataType="i4"
                          cachedName="DimPoolID"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimPoolID]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[DimOrganisationId]"
                          cachedDataType="i8"
                          cachedName="DimOrganisationId"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[DimOrganisationId]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0].Columns[CriteriaTableTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTableTypeCode"
                          lineageId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer.Paths[ECResult]"
                  endId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR.Inputs[OLE DB Destination Input]"
                  name="ECResult"
                  startId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Outputs[ECResult]" />
                <path
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer.Paths[OLE DB Source Output]"
                  endId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer.Paths[Output 0]"
                  endId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FactLoanECResult"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{CE6E27E5-30CA-4A7B-A6EC-C64C6842CC64}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="FactLoanECResult">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\FactLoanECResult\Apply EC For FactLoan"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{1BB81CD8-0BEC-4D62-B810-1BB526F83FE8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply EC For FactLoan"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="100"
              defaultBufferSize="40485760"
              version="1">
              <components>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Apply FactLoan EC"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ECResultBuffer ECResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ECResultBuffer)
        {
            ECResultBuffer.SetEndOfRowset();
            ECResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ECResult"))
            {
                ECResultBuffer = new ECResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String OLEDBConnStringALR
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["OLEDBConnString_ALR"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringALR);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnabled)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            string sECId = string.Empty;
            //MessageBox.Show(Row.CriteriaDescription.ToString());
            //MessageBox.Show(sQuery);
            try
            {
                SqlCommand _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    ECResultBuffer.AddRow();
                    
                    //ECResultBuffer.DimPoolId = (long)dr["DimPoolId"];
                    //ECResultBuffer.DimECId = (long)dr["DimECId"];
                    //ECResultBuffer.DimLoanId = (int)dr["DimLoanId"];

                    ECResultBuffer.DimPoolId = Convert.ToInt64(dr["DimPoolId"]);
                    ECResultBuffer.DimECId = Convert.ToInt64(dr["DimECId"]);
                    ECResultBuffer.DimLoanId = Convert.ToInt64(dr["DimLoanId"]);
                    
                    sECId = dr["DimECId"].GetType().ToString();
                    //MessageBox.Show(dr["DimPoolId"].GetType().ToString() + "_" + dr["DimECId"].GetType().ToString() + "_" + dr["DimLoanId"].GetType().ToString());

                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply FactLoan EC", sMsg, "", 0, ref bFireAgain);
            }
            catch (Exception ex)
            {
                //TODO Logging
                string sEx = string.Format("Failed ECId:{0}, Query:{1}{2}{3}", sECId, sQuery, Environment.NewLine, ex.Message);
                throw new ApplicationException(sEx);
                //MessageBox.Show(ex.Message);
                //throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply FactLoan EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[4]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ECResultBuffer: ScriptBuffer

{
    public ECResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 DimPoolId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DimPoolId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimLoanId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DimLoanId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimECId
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DimECId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{E633D982-285F-4757-B3F6-72D72D93CAA3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace>
    <AssemblyName>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</AssemblyName>
    <ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAILtQlYAAAAAAAAAAOAAAiELAQsAACQAAAAIAAAAAAAAPkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPBBAABLAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
QgAAAAAAAEgAAAACAAUAOCYAALgbAAABAAAAAAAAAIAlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipSAnsOAAAKAnsPAAAKF5RvEgAACioiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EgAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEwAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvFAAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvEgAACioiAhsoEQAACioeAigVAAAKKh4C
KBYAAAoqKgIDBAUoDQAACio6AhYDjBcAAAEoFwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKejoC
FwOMFwAAASgXAAAKKloDLAgCFygYAAAKKnIBAABwcxkAAAp6OgIYA4wXAAABKBcAAAoqWgMsCAIY
KBgAAAoqcgEAAHBzGQAACnoeAigaAAAKKh4CKBsAAAoqHgIoFgAACip+AigcAAAKAgJzIgAABn0B
AAAEAgJzIwAABn0CAAAEKgAAAAMwBABPAAAAAAAAAARyngAAcBpvHQAACiwVAgUCAygeAAAKDgRz
AQAABm8gAAAGBW8fAAAKLCMCAnsEAAAEF1h9BAAABAJ7BAAABBczDAJvHAAABgIoHQAABioGKm4C
ewMAAAQsEgJ7AwAABG8YAAAGAhR9AwAABCoAAAATMAUAPQAAAAEAABEWCisuBAaUDgRyrgAAcCgg
AAAKMxkCBQaaAgQGlCgeAAAKDgRzEAAABn0DAAAEBhdYCgYDMs4Cbx8AAAYqBipKKwcCA28hAAAG
A28OAAAGLfEqBio6AighAAAKAgN9BQAABCo6AighAAAKAgN9BgAABCqWAnsGAAAEbyIAAApywAAA
cG8jAAAKKCQAAApvJQAACnQZAAABKqICKCcAAAoCAnsCAAAEbyQAAAZzKAAACn0HAAAEAnsHAAAE
bykAAAoqZgIoKgAACgJ7BwAABG8rAAAKAhR9BwAABCoAGzAHAKsBAAACAAARFwpy6AAAcAsDbwoA
AAY5aAEAAANvAgAABhYDbwIAAAZvLAAACigtAAAKby4AAAoMKC8AAAoIbzAAAApvMQAACg1+MgAA
ChMECQJ7BwAABHMzAAAKEwURBRZvNAAAChEFbzUAAAoTBhYTByt9AnsDAAAEbxcAAAYCewMAAAQR
BnLqAABwbzYAAAooNwAACm8RAAAGAnsDAAAEEQZy/gAAcG82AAAKKDcAAApvFQAABgJ7AwAABBEG
cg4BAHBvNgAACig3AAAKbxMAAAYRBnL+AABwbzYAAApvOAAACm85AAAKEwQRBxdYEwcRBm86AAAK
Onf///8RBm87AAAKFBMGciIBAHADbwwAAAZvOQAAChEHjCgAAAEoPAAACgsCKD0AAAog6AMAAHI2
AQBwB3LoAABwFhIAbz4AAArebhMIcloBAHAajQMAAAETChEKFhEEohEKFwmiEQoYKD8AAAqiEQoZ
EQhvQAAACqIRCihBAAAKEwkRCXNCAAAKenKcAQBwA28MAAAGKEMAAAoLAig9AAAKIOgDAAByNgEA
cAdy6AAAcBYSAG8+AAAKKgABEAAAAABIAPQ8AT8rAAABBioeAigaAAAGKh4CKCEAAAoqAAATMAIA
LQAAAAMAABF+CAAABC0gcu4BAHDQCAAAAihFAAAKb0YAAApzRwAACgoGgAgAAAR+CAAABCoafgkA
AAQqHgKACQAABCoafgoAAAQqLnMvAAAGgAoAAAQqHgIoSgAACioAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHAJAAAjfgAA3AkAANwMAAAjU3RyaW5ncwAA
AAC4FgAAcAIAACNVUwAoGQAAEAAAACNHVUlEAAAAOBkAAIACAAAjQmxvYgAAAAAAAAACAAABVxWi
AQkBAAAA+iUzABYAAAEAAAAyAAAACQAAAAoAAAAwAAAAGgAAAEoAAAAPAAAAAwAAAAUAAAAWAAAA
FwAAAAEAAAAHAAAAAQAAAAAACgABAAAAAAAGAAsB6gAGABgB6gAKADgBMQEOAFQBPwESAI0B6gAG
AJwB6gASALAB6gAWAEAFKgUKAH8FbgUKALAFmwUKAKMGiQYKAM4GvAYKAOUGvAYKAAIHvAYKACEH
vAYKADoHvAYKAFMHvAYKAG4HvAYKAIkHvAYKAKIHvAYKANsHuwcKAPsHuwcKAHIIMQEKAIkIMQEK
AKMIMQEKAKoIMQEaADoJEgkaAGEJEgkLAHEJAAAaAKEJEgkGAM0J6gAWAAcK9AkKACoKMQEKAFIK
RgoWAHIKKgUWAH0K9AkWAJoKKgUWALYK9AkKAMsKMQEKAOYKMQEeAEALFwsKAH8LMQEKAJcLMQEK
AK0LMQEKANULwgsKAPILMQEKABYMvAYOAEIMLAwOAFsMLAwKAHAMuwcAAAAAAQAAAAAAAQABAAEA
EAA5AAAABQABAAEAAQAQAEYAAAAFAAEAEAABABAAVQAAAAkAAQAaAAEAEABjAAAADQAFACIAAQAQ
AG8AAAANAAYAIwABABAAeQAAABAABwAlAAAAEACEAI4ADQAIACoAAAEQAMQAjgARAAoALgAGAGMA
TQAGAG8AUQAGAEYAVQABAFsEWQABAOQEeAABAOQEeAABAE4FggARAI8FhgARALwFigARAAAGqABQ
IAAAAACGGKoBEwABAFsgAAAAAIYIuwEdAAQAdSAAAAAAhgjLASIABAB+IAAAAACGCOIBJgAEAJMg
AAAAAIYI+gEiAAQAnCAAAAAAhggZAiYABACxIAAAAACGCC4CIgAEALogAAAAAIYISgIqAAQAzyAA
AAAAhghWAiIABADYIAAAAACGCGkCIgAEAO0gAAAAAIYIdwIiAAQA9iAAAAAAhgiMAiYABAALIQAA
AACGCJ0CIgAEABQhAAAAAIYAtQIiAAQAHCEAAAAAhgC9AiIABAAkIQAAAACGGKoBEwAEAC8hAAAA
AIYIkwM/AAcAPiEAAAAAhgihA0QACABVIQAAAACGCLYDPwAJAGQhAAAAAIYIxANEAAoAeyEAAAAA
hgjZAz8ACwCKIQAAAACGCOUDRAAMAKEhAAAAAIYA+ANJAA0AqSEAAAAAhgD/A0kADQCxIQAAAACG
AL0CIgANALkhAAAAAIYYqgFJAA0A3CEAAAAAxgBqBFwADQA3IgAAAADGAXcESQARADkiAAAAAIEA
hQRJABEAWCIAAAAAxgCZBGYAEQChIgAAAADGAaUESQAVAKMiAAAAAMYBuQRyABUAtiIAAAAAxgHN
BHIAFgC4IgAAAACGGKoBfAAXAMciAAAAAIYYqgF8ABgA1iIAAAAAhgj0BCYAGQD8IgAAAADGAFcF
SQAZACUjAAAAAMYAYgVJABkAQCMAAAAAxgDNBHIAGQAIJQAAAADGAKUESQAaAAolAAAAAIYYqgFJ
ABoAEiUAAAAAgxiqAUkAGgAcJQAAAACTCMwFjgAaAFUlAAAAAJMI4AWTABoAXCUAAAAAkwjsBZgA
GgBkJQAAAACWCBAGrAAbAHclAAAAAIYYqgFJABsAayUAAAAAkRiLDLwBGwAAAAEAJAYAAAIAKwYA
AAMAPwYAAAEAJAYAAAIAKwYAAAMAPwYAAAEASQYAAAEASQYAAAEASQYAAAEASQYAAAEASQYAAAEA
SQYAAAEATwYAAAIAVwYAAAMAJAYAAAQAPwYAAAEAYQYAAAIAaQYAAAMAcwYAAAQAPwYAAAEAJAYA
AAEAewYAAAEAfwYAAAEAfwYAAAEAewYAAAEASQZZAKoBtgBhAKoBtgBpAKoBtgBxAKoBtgB5AKoB
tgCBAKoBtgCJAKoBtgCRAKoBtgCZAKoBtgChAKoBtgCpAKoBuwCxAKoBSQAJAKoBEwAJACQGwAAJ
ACsGxAApAEQIyAAJAE0IzQApAFQI0gApAF4I1wApAGcIzQAJALUCIgAJAL0CIgAJAHgI3AAJAIEI
uwDBAKoBtgAJAPgDSQAJAP8DSQARAKoBSQDJALsI4gARAMII6QApANMIIgARAOMI7wAZAKoBSQAR
AEsJ+gDZAEQI/wARAIwJBQHhALkJCgH5AKoBSQARAFcFSQBBAKoBtgABARQKSQARAGIFSQABARkK
SQA5AB8KFQEJATIKGQE5ADoKHgERAVsKJQERAVQIKwHJAGcKJgDJAGwKMQEZAaoBNAEhAYcKuwAZ
AagKOwExAUQIQQEJAcMKRgEZANAKSwEZANgKJgAxAeEKIgAxARkKSQDJAOwKUQERAFkLWAFJAW8L
XgFRAYsLaQFZAaELJgDJAOwKbQFhAaoBtgDJAOwKdAFpAaoBSQA5AQQMkAE5AR8MmQFJAKoBnwGB
AaoBrAGRAaoBSQAhAKoBSQAuABsAOAIuAGMAXgIuAAsAwAEuABMACAIuACMAOAIuACsAOAIuADMA
CAIuADsAPgIuAEMAOAIuAFsAVQLjADMBEAEDASMCEAFBAUsCEAGJAkMCswGpAkMCswH2AHoBpwEC
AAEAAwANAAYAEwAIABQACQAWAAAAyQIuAAAA1QIzAAAA6AI3AAAA/AIzAAAAFwM3AAAAKAMzAAAA
QAM7AAAASAMzAAAAVwMzAAAAYQMzAAAAcgM3AAAAfwMzAAAADgQ7AAAAGAQzAAAAKQQ7AAAAMwQz
AAAARAQ7AAAATAQzAAAACwU3AAAAfwWeAAAA+AWjAAAAHAaxAAIAAgADAAIAAwAFAAIABAAHAAIA
BQAJAAIABgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAEAEQAb
AAEAEgAdAAEAEwAfAAEAFAAhAAEAFQAjAAEAFgAlAAIAJAAnAAIAKwApAAIALAArAAEALQArAAIA
LgAtAASAAAABAAAAoRaBbAAAAAAAABkIAAAMAAAAAAAAAAAAAAABAM0AAAAAAAQAAAAAAAAAAAAA
AAoAKAEAAAAABAAAAAAAAAAAAAAACgAxAQAAAAAMAAAAAAAAAAAAAAABAGwBAAAAAAQAAAAAAAAA
AAAAAAoAHgUAAAAADAAAAAAAAAAAAAAAAQDvCAAAAAAMAAAAAAAAAAAAAAABAPMKAAAAAAAAAAAB
AAAAkgwAAAAAAAAAPE1vZHVsZT4AU0NfNzc0NzgwMmQ3NTlkNGRiZGFlYThlNTA4YTkyYzBiZDMu
Y3Nwcm9qLmRsbABJbnB1dDBCdWZmZXIARUNSZXN1bHRCdWZmZXIAVXNlckNvbXBvbmVudABDb25u
ZWN0aW9ucwBWYXJpYWJsZXMAU2NyaXB0TWFpbgBSZXNvdXJjZXMAU0NfNzc0NzgwMmQ3NTlkNGRi
ZGFlYThlNTA4YTkyYzBiZDMuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRC
dWZmZXIAU2NyaXB0Q29tcG9uZW50AG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZp
Z3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcAAuY3RvcgBCbG9iQ29sdW1uAGdl
dF9Dcml0ZXJpYVNRTABnZXRfQ3JpdGVyaWFTUUxfSXNOdWxsAGdldF9Dcml0ZXJpYURlc2NyaXB0
aW9uAGdldF9Dcml0ZXJpYURlc2NyaXB0aW9uX0lzTnVsbABnZXRfQ3JpdGVyaWFUeXBlQ29kZQBn
ZXRfQ3JpdGVyaWFUeXBlQ29kZV9Jc051bGwAZ2V0X0RpbUVDSUQAZ2V0X0RpbUVDSURfSXNOdWxs
AGdldF9Jc0VuYWJsZWQAZ2V0X0lzRW5hYmxlZF9Jc051bGwAZ2V0X0NyaXRlcmlhTmFtZQBnZXRf
Q3JpdGVyaWFOYW1lX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AENyaXRlcmlhU1FMAENyaXRl
cmlhU1FMX0lzTnVsbABDcml0ZXJpYURlc2NyaXB0aW9uAENyaXRlcmlhRGVzY3JpcHRpb25fSXNO
dWxsAENyaXRlcmlhVHlwZUNvZGUAQ3JpdGVyaWFUeXBlQ29kZV9Jc051bGwARGltRUNJRABEaW1F
Q0lEX0lzTnVsbABJc0VuYWJsZWQASXNFbmFibGVkX0lzTnVsbABDcml0ZXJpYU5hbWUAQ3JpdGVy
aWFOYW1lX0lzTnVsbABzZXRfRGltUG9vbElkAHNldF9EaW1Qb29sSWRfSXNOdWxsAHNldF9EaW1M
b2FuSWQAc2V0X0RpbUxvYW5JZF9Jc051bGwAc2V0X0RpbUVDSWQAc2V0X0RpbUVDSWRfSXNOdWxs
AEFkZFJvdwBTZXRFbmRPZlJvd3NldABEaW1Qb29sSWQARGltUG9vbElkX0lzTnVsbABEaW1Mb2Fu
SWQARGltTG9hbklkX0lzTnVsbABEaW1FQ0lkAERpbUVDSWRfSXNOdWxsAElucHV0c0ZpbmlzaGVk
AFByb2Nlc3NJbnB1dABGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRw
dXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNz
SW5wdXRSb3cAUGFyZW50Q29tcG9uZW50AGdldF9PTEVEQkNvbm5TdHJpbmdBTFIAT0xFREJDb25u
U3RyaW5nQUxSAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9u
AF9TcWxDb25uAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
Q3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVy
Q29sdW1uSW5kZXhlcwBPdXRwdXRNYXAAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUAT3V0cHV0cwBP
dXRwdXRJRHMAQnVmZmVycwBSb3cAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1
MDhhOTJjMGJkMy5jc3Byb2oAZ2V0X0l0ZW0ASXNOdWxsAEdldFN0cmluZwBHZXRJbnQ2NABHZXRC
b29sZWFuAEludDY0AHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBT
dHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBnZXRfRW5kT2ZS
b3dzZXQAR2V0T3V0cHV0SUQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU1ZhcmlhYmxlczEwMABnZXRf
UmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAFNjcmlwdENvbXBvbmVudEV2YWxDb250
ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVl
V2l0aENvbnRleHQAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAU3lzdGVt
LkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBPcGVuAENsb3NlAGdldF9MZW5ndGgAQ29udmVydABU
b0ludDMyAEdldEJsb2JEYXRhAFN5c3RlbS5UZXh0AEVuY29kaW5nAGdldF9Vbmljb2RlAFRyaW0A
RW1wdHkAU3FsQ29tbWFuZABEYkNvbW1hbmQAc2V0X0NvbW1hbmRUaW1lb3V0AFNxbERhdGFSZWFk
ZXIARXhlY3V0ZVJlYWRlcgBEYkRhdGFSZWFkZXIAVG9JbnQ2NABUeXBlAEdldFR5cGUAVG9TdHJp
bmcAUmVhZABJbnQzMgBGb3JtYXQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0
YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEZpcmVJbmZvcm1hdGlvbgBFbnZpcm9ubWVu
dABnZXRfTmV3TGluZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQXBwbGljYXRpb25FeGNlcHRpb24A
U3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzc3NDc4MDJkNzU5ZDRkYmRh
ZWE4ZTUwOGE5MmMwYmQzLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAA
EUUAQwBSAGUAcwB1AGwAdAAAJ08ATABFAEQAQgBDAG8AbgBuAFMAdAByAGkAbgBnAF8AQQBMAFIA
AAEAE0QAaQBtAFAAbwBvAGwASQBkAAAPRABpAG0ARQBDAEkAZAAAE0QAaQBtAEwAbwBhAG4ASQBk
AAATewAwAH0AIAA6ACAAewAxAH0AACNBAHAAcABsAHkAIABGAGEAYwB0AEwAbwBhAG4AIABFAEMA
AEFGAGEAaQBsAGUAZAAgAEUAQwBJAGQAOgB7ADAAfQAsACAAUQB1AGUAcgB5ADoAewAxAH0AewAy
AH0AewAzAH0AAFFFAEMAIAB7ADAAfQAgAGkAcwAgAG4AbwB0ACAAZQBuAGEAYgBsAGUAZAAgAGEA
bgBkACAAaQBzACAAbgBvAHQAIABhAHAAcABsAGkAZQBkAAB/UwBDAF8ANwA3ADQANwA4ADAAMgBk
ADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAzAC4AYwBzAHAA
cgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAASBV+Ha2g
pk61aAS+a0lSMQAIiYRdzYCAzJEIt3pcVhk04IkJIAMBEhUdCBIZBCAAEh0DIAACAyAADgMgAAoE
KAASHQMoAAIDKAAOAygACgQgAQEKBCABAQIDIAABAwYSFAMGEhgDBhIMAgYICSAEAQgOEhUSGQsg
BAEIHQgdEhUSGQUgAQESCAMGEgkFIAEBEgkDBhIhAwYSJQMGEikEAAASJQQAABIpBQABARIpBAgA
EiUECAASKQMGEiQEAAASJAQIABIkBCABAQ4EIAEBCAMGEhUDBh0IBCABHAgEIAECCAQgAQ4IBCAB
CggFIAIBCBwGIAICDhFpBSABHQgIBgACCBIZDgMHAQgEIAASbQUgARJxHAQAABJ1BSABHBJ5BAEA
AAADIAAJBAABCAkGIAIdBQgIBQAAEoCJBSABDh0FAgYOBiACAQ4SIQUgABKAlQQgARwOBAABChwF
IAASgJ0GAAMODhwcBSAAEoClCiAGAQgODg4IEAIDAAAOBgACDg4dHAUAAg4OHBUHCwIOHQUODhKA
jRKAlQgSgK0OHRwIAAESgJ0RgLkFIAASgL0HIAIBDhKAvQQHARIlBiABARGAxQgBAAIAAAAAAAMA
AAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
EC5ORVQgRnJhbWV3b3JrIDQvAQAqU0NfNzc0NzgwMmQ3NTlkNGRiZGFlYThlNTA4YTkyYzBiZDMu
Y3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTIAAAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEAAAAYQgAAAAAAAAAAAAAuQgAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAIEIAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAIFsoRYAAAEAgWyhFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAwADAAMAA0AGIA
MAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3ADcANAA3
ADgAMAAyAGQANwA1ADkAZAA0AGQAYgBkAGEAZQBhADgAZQA1ADAAOABhADkAMgBjADAAYgBkADMA
LgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADUANwA5ADMALgAyADcANwA3ADcAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBDAF8ANwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5
ADIAYwAwAGIAZAAzAC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAyAAAAiAAv
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADcANwA0ADcAOAAwADIA
ZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEAOQAyAGMAMABiAGQAMwAuAGMAcwBw
AHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
NwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5ADIAYwAw
AGIAZAAzAC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANQA3ADkAMwAuADIANwA3ADcANwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADkAMwAuADIANwA3ADcANwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAEAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7747802d759d4dbdaea8e508a92c0bd3</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::OLEDBConnString_ALR</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">099b99c8589188d1b279753ca1705950</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnabled]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult]"
                      hasSideEffects="true"
                      name="ECResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimPoolId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimPoolId]"
                          name="DimPoolId" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimLoanId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimLoanId]"
                          name="DimLoanId" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimECId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimECId]"
                          name="DimECId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="FactLoan EC ALR"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select 	DimPoolID	
	, DimECID
	, CriteriaName
	, CriteriaDescription
	, CriteriaSetId
	, CriteriaSetTypeCode
	, CriteriaTypeCode
	, IsEnabled
	, ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, CriteriaTableTypeCode
	, SequenceNo
	, DimOrganisationId
                ,cast(null as nvarchar(max)) as CriteriaSQL
from tblDimEC
where DimPoolId = ? and CriteriaTableTypeCode = 'dbo.tblFactLoanECResult' and ECPassNoCode = ? and IsEnabled = 1
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0",{F7498697-94B9-4899-9B71-5E7C3EAB7D62};"Parameter1",{47A65516-366C-46E6-A597-923EEA41A566};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          name="DimPoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]"
                          name="DimECID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          dataType="i8"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          dataType="bool"
                          name="IsEnabled" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTableTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          dataType="i8"
                          name="DimOrganisationId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          name="DimPoolID" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          name="DimECID" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          dataType="bool"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="FactLoan EC Results to ALR"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblFactLoanECResult]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimPoolId]"
                          cachedDataType="i8"
                          cachedName="DimPoolId"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimPoolId]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimLoanId]"
                          cachedDataType="i8"
                          cachedName="DimLoanId"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimLoanID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimLoanId]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimECId]"
                          cachedDataType="i8"
                          cachedName="DimECId"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimECId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimLoanID]"
                          dataType="i4"
                          name="DimLoanID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          dataType="i4"
                          name="DimECID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="FactLoan EC XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.Windows.Forms;
using System.IO;
using System.Windows.Forms;
using System.Collections.Generic;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.DEBUG;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string sMsg = string.Empty;
        bool bFireAgain = true;

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}",System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        //MessageBox.Show(sXML);
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "DimOrganisationId", "Value", Row.DimOrganisationId.ToString());
            //MessageBox.Show("DimOrganisationId");
            UpdateParameterAttribute(xmlDoc, "DimReportingDateId", "Value", Variables.DimReportingDateID.ToString());
            //MessageBox.Show("DimReportingDateId");
            UpdateParameterAttribute(xmlDoc, "DimPoolId", "Value", Row.DimPoolID.ToString());
            //MessageBox.Show("DimPoolId");
            UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            //MessageBox.Show("DimECId");
            UpdateParameterAttribute(xmlDoc, "DimSourceTrustID", "Value", Variables.DimSourceTrustID.ToString());
            //MessageBox.Show("DimSourceTrustID");
            UpdateParameterAttribute(xmlDoc, "DimTargetTrustID", "Value", Variables.DimTargetTrustID.ToString());
            //MessageBox.Show("DimTargetTrustID");

            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            if (_DEBUG)
            {
                sMsg = string.Format("{0} {1} {2} {3} {4} {5}: {6}", Row.DimPoolID.ToString(), Row.DimECID.ToString(), Row.CriteriaName, Row.CriteriaTableTypeCode, Row.ECPassNoCode, Environment.NewLine, sQuery);
                ComponentMetaData.FireInformation(1000, "FactLoan EC To XML", sMsg, "", 0, ref bFireAgain);
            }
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);
        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {
        
        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;
        
        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("N'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[2]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 DimPoolID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool DimPoolID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int64 DimOrganisationId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[4]);
        }
    }
    public bool DimOrganisationId_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String CriteriaTableTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool CriteriaTableTypeCode_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimOrganisationID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimOrganisationID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimSourceTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimSourceTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimTargetTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimTargetTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PoolId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PoolId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace>
    <AssemblyName>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</AssemblyName>
    <ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{36F1B1D2-0E76-41ED-BF1F-006D3D4807A7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_fd0bab671ff44626844d3bc69a2d82be.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANORSVYAAAAAAAAAAOAAAiELAQsAADQAAAAIAAAAAAAA3lMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIRTAABXAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5DMAAAAgAAAANAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA2AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
UwAAAAAAAEgAAAACAAUAeC4AAAwlAAABAAAAAAAAAMAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASomAhYDKBEAAAoqIgIWKBIAAAoqWgMsCAIWKBMAAAoqcgEAAHBzFAAACnpmAnsOAAAKAnsPAAAK
F5RvEAAACnQHAAABKiICFygSAAAKKlICew4AAAoCew8AAAoYlG8VAAAKKiICGCgSAAAKKlICew4A
AAoCew8AAAoZlG8WAAAKKiICGSgSAAAKKlICew4AAAoCew8AAAoalG8VAAAKKiICGigSAAAKKlIC
ew4AAAoCew8AAAoblG8XAAAKKiICGygSAAAKKlICew4AAAoCew8AAAoclG8XAAAKKiICHCgSAAAK
KlICew4AAAoCew8AAAodlG8XAAAKKiICHSgSAAAKKh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJz
GgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcp4AAHAabxsAAAosFQIFAgMoHAAACg4EcwEAAAZvGAAA
BipKKwcCA28ZAAAGA28UAAAGLfEqBio6AigdAAAKAgN9AwAABCo6AigdAAAKAgN9BAAABCqWAnsE
AAAEbx4AAApyrgAAcG8fAAAKKCAAAApvIQAACqUfAAABKpYCewQAAARvHgAACnK6AABwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKct4AAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApyBAEAcG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnImAQBwbx8AAAoo
IAAACm8hAAAKdBkAAAEqlgJ7BAAABG8eAAAKckgBAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsE
AAAEbx4AAApyWgEAcG8fAAAKKCAAAApvIQAACnQZAAABKmICKCMAAAoCAnsCAAAEbxwAAAZ9BgAA
BCoeAigkAAAKKgAAABswBwAhAgAAAQAAEX4lAAAKChcLcyYAAAoMA28GAAAGFgNvBgAABm8nAAAK
KCgAAApvKQAACg1yaAEAcCgqAAAKCW8rAAAKbywAAAooLQAAChMECXMuAAAKEwURBW8vAAAKEQUW
am8wAAAKCBEFbzEAAAoCCHLAAQBwcuQBAHADbwwAAAYTChIKKDIAAAooJwAABiYCCHLwAQBwcuQB
AHACewIAAARvHgAABm8zAAAKKCcAAAYmAghyFgIAcHLkAQBwA28KAAAGEwsSCyg0AAAKKCcAAAYm
AghyKgIAcHLkAQBwA28IAAAGEwwSDCgyAAAKKCcAAAYmAghyBAEAcHLkAQBwAnsCAAAEbx8AAAZv
MwAACignAAAGJgIIciYBAHBy5AEAcAJ7AgAABG8gAAAGbzMAAAooJwAABiYCCHI6AgBwckACAHAo
LAAABhMGAnsGAAAEOYYAAAByUAIAcB2NAwAAARMNEQ0WA28KAAAGEw4SDig0AAAKohENFwNvCAAA
BhMPEg8oMgAACqIRDRgDbxAAAAaiEQ0ZA28SAAAGohENGgNvDgAABqIRDRsoNQAACqIRDRwRBqIR
DSg2AAAKCgIoNwAACiDoAwAAcooCAHAGcrACAHAWEgFvOAAACigqAAAKEQZvOQAAChMHA28CAAAG
bzoAAAoDbwIAAAYRB287AAAK3iQTCHKyAgBwEQQoNQAAChEIbzwAAAooPQAAChMJEQlzPgAACnoq
AAAAQRwAAAAAAABHAAAAtQEAAPwBAAAkAAAAKQAAARswAwCCAAAAAgAAERQKAm8/AAAKCwdyxgIA
cG9AAAAKDChBAAAKc0IAAAoNCG9DAAAKEwUrLBEFb0QAAAp0CAAAARMECREEb0UAAApyCgMAcG9G
AAAKb0cAAAoRBG9IAAAKEQVvSQAACi3L3hURBXUzAAABEwYRBiwHEQZvSgAACtwJAxIAb0sAAAom
BioAAAEQAAACACgAOWEAFQAAAAATMAIAVQAAAAMAABEWCgMEKCYAAAYLBy0CBioHb0UAAAoFb0YA
AAosFwdvRQAACgVvRgAACg4Eb0wAAAoXCisfAwVvTQAACgwIDgRvTAAACgdvRQAACghvTgAACiYX
CgYqAAAAEzAEACAAAAAEAAARc08AAAoKBnIUAwBwA28sAAAKBG9QAAAKJgZvMwAACioTMAMAHwAA
AAQAABFzTwAACgoGciYDAHADbywAAApvUQAACiYGbzMAAAoqABswBADHAAAABQAAEXIyAwBwCn4l
AAAKc1IAAAoLAy0CBioDclYDAHBvQAAACgwIOZYAAAAIb1MAAAoWPooAAAAHcoIDAHBvVAAACiYI
b0MAAAoTBSszEQVvRAAACnQIAAABDQdyhgMAcAlvRQAACnLkAQBwb0YAAApvRwAACm8zAAAKb1EA
AAomEQVvSQAACi3E3hURBXUzAAABEwYRBiwHEQZvSgAACtwHB29VAAAKGFkYb1YAAApymAMAcG9U
AAAKJgdvMwAACgreBRMEEQR6BioAARwAAAIASABAiAAVAAAAAAAAFgCqwAAFKQAAARswBQApAwAA
BgAAEXNPAAAKCgMtBwZvMwAACioDcsYCAHBvQAAACgsHOfkCAAAHb0MAAAoTBTjJAgAAEQVvRAAA
CnQIAAABDH4lAAAKDQhvRQAACnKcAwBwb0YAAApvRwAACm8zAAAKJRMGOfoBAAARBnKwAwBwKFcA
AAotJxEGcsIDAHAoVwAACjqtAAAAEQZy0gMAcChXAAAKOjMBAAA4xQEAAHLkAwBwG40DAAABEwcR
BxYIb0UAAApyCgMAcG9GAAAKb0cAAApvMwAACqIRBxcIb0UAAApynAMAcG9GAAAKb0cAAApvMwAA
CqIRBxgIb0UAAApynAMAcG9GAAAKb0cAAApvMwAACqIRBxkIb0UAAApy5AEAcG9GAAAKb0cAAApv
MwAACqIRBxoEohEHKDYAAAoNOMABAAByRAQAcBuNAwAAARMIEQgWCG9FAAAKcgoDAHBvRgAACm9H
AAAKbzMAAAqiEQgXCG9FAAAKcpwDAHBvRgAACm9HAAAKbzMAAAqiEQgYCG9FAAAKcpwDAHBvRgAA
Cm9HAAAKbzMAAAqiEQgZCG9FAAAKcuQBAHBvRgAACm9HAAAKbzMAAAqiEQgaBKIRCCg2AAAKDTgp
AQAAckQEAHAbjQMAAAETCREJFghvRQAACnIKAwBwb0YAAApvRwAACm8zAAAKohEJFwhvRQAACnKc
AwBwb0YAAApvRwAACm8zAAAKohEJGAhvRQAACnKcAwBwb0YAAApvRwAACm8zAAAKohEJGQhvRQAA
CnLkAQBwb0YAAApvRwAACm8zAAAKohEJGgSiEQkoNgAACg04kgAAAHKuBABwG40DAAABEwoRChYI
b0UAAApyCgMAcG9GAAAKb0cAAApvMwAACqIRChcIb0UAAApynAMAcG9GAAAKb0cAAApvMwAACqIR
ChgIb0UAAApynAMAcG9GAAAKb0cAAApvMwAACqIRChkIb0UAAApy5AEAcG9GAAAKb0cAAApvMwAA
CqIRChoEohEKKDYAAAoNBglvVAAACiYRBW9JAAAKOiv9///eFREFdTMAAAETCxELLAcRC29KAAAK
3N4FEwQRBHoGbzMAAAoqAAAAQTQAAAIAAAAqAAAA3AIAAAYDAAAVAAAAAAAAAAAAAAAQAAAADQMA
AB0DAAAFAAAAKQAAARswBAA+AAAABwAAEXNPAAAKCgMtBwZvMwAACioGAgMEKCsAAAZvVAAACiYG
AgNyQAIAcCgtAAAGb1QAAAom3gMLB3oGbzMAAAoqAAABEAAAAAAQACQ0AAMpAAABGzAEAGgBAAAI
AAARfiUAAAoKAy0KBChYAAAKLAIGKgMEb1kAAAoLBzk+AQAAB29aAAAKCgZzUgAACgwDcgQFAHBv
QAAACg0JLH8Jb0MAAAoTCStVEQlvRAAACnQIAAABEwQCEQRvRQAACnJOBQBwb0YAAApvRwAACm8z
AAAKKCkAAAYTBQgRBG9FAAAKcgoDAHBvRgAACm9HAAAKbzMAAAoRBW9bAAAKJhEJb0kAAAotot4V
EQl1MwAAARMKEQosBxEKb0oAAArcFA0DcmAFAHBvQAAACg0JOYcAAAAJb0MAAAoTCytdEQtvRAAA
CnQIAAABEwYCEQZvRQAACnJOBQBwb0YAAApvRwAACm8zAAAKAhEGKCoAAAYoKAAABhMHCBEGb0UA
AApyCgMAcG9GAAAKb0cAAApvMwAAChEHb1sAAAomEQtvSQAACi2a3hURC3UzAAABEwwRDCwHEQxv
SgAACtwIbzMAAAoK3gUTCBEIegYqQUwAAAIAAABGAAAAYgAAAKgAAAAVAAAAAAAAAAIAAADZAAAA
agAAAEMBAAAVAAAAAAAAAAAAAAATAAAATgEAAGEBAAAFAAAAKQAAAR4CKBYAAAYqHgIoHQAACioT
MAIALQAAAAkAABF+BwAABC0gcqYFAHDQBwAAAihdAAAKb14AAApzXwAACgoGgAcAAAR+BwAABCoa
fggAAAQqHgKACAAABCoafgkAAAQqLnM0AAAGgAkAAAQqHgIoYgAACioAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOAKAAAjfgAATAsAAMwPAAAjU3RyaW5n
cwAAAAAYGwAAKAYAACNVUwBAIQAAEAAAACNHVUlEAAAAUCEAALwDAAAjQmxvYgAAAAAAAAACAAAB
Vx2iCQkBAAAA+iUzABYAAAEAAAA7AAAACAAAAAkAAAA1AAAAIAAAAGIAAAABAAAADwAAAAkAAAAE
AAAAGgAAAB0AAAABAAAAAQAAAAcAAAABAAAAAAAKAAEAAAAAAAYA/ADbAAYACQHbAAoAKQEiAQ4A
RQEwARIAfgHbAAYAjQHbABIAoQHbABYAoQWWBRYAqQWWBQoAfwZuBgoAsAabBgoABAjqBwoALwgd
CAoARggdCAoAYwgdCAoAgggdCAoAmwgdCAoAtAgdCAoAzwgdCAoA6ggdCAoAAwkdCAoAPAkcCQoA
XAkcCQoAxgkiAQoA/AkiAQoAAwoiARoAdwpPChoAngpPCgsArgoAABoA3gpPCgoACgsiAQYAEgvb
AAoASgsiAQoAcgtmCwoAnQuTCwoAqguTCwoAyQsiAQoA2AsiAQoA3gsiAR4AQwwaDAoApQwiAQoA
uwwiARYA0AyWBRYA7wyWBQoABw0iAQoAUA01DQoAXQ01DQoAhA1xDRYAqg2WBRYA0A2WBQoA/w0i
AQoAQA5mCwoAwA6tDgoA3Q4iAQoA4g4iAQoABg8dCA4AMg8cDw4ASw8cDwoAYA8cCQAAAAABAAAA
AAABAAEAAQAQADkAAAAFAAEAAQABABAARgAAAAkAAQAWAAEAEABUAAAADQADABoAAQAQAGAAAAAN
AAQAGwABABAAagAAAAwABQAjAAAAEAB1AH8ADQAHAC8AAAEQALUAfwARAAkAMwAGAFQAUgAGAGAA
VgABAIcEbgABAIcEbgBRgG0FeAABAHgFgAARAI8GtAARALwGuAARAAAH1gBQIAAAAACGGJsBEwAB
AFsgAAAAAIYIrAEdAAQAdSAAAAAAhgi8ASIABAB/IAAAAACGCMwBKAAFAIggAAAAAIYI4wEsAAUA
nyAAAAAAhgj6AR0ABgC5IAAAAACGCAwCKAAGAMIgAAAAAIYIJQIxAAYA1yAAAAAAhggxAigABgDg
IAAAAACGCEQCNQAGAPUgAAAAAIYIUgIoAAYA/iAAAAAAhghnAjEABgATIQAAAACGCH0CKAAGABwh
AAAAAIYImgI5AAYAMSEAAAAAhgirAigABgA6IQAAAACGCMMCOQAGAE8hAAAAAIYI1AIoAAYAWCEA
AAAAhgjsAjkABgBtIQAAAACGCAYDKAAGAHYhAAAAAIYAJwMoAAYAfiEAAAAAhgAvAygABgCGIQAA
AACGGJsBWgAGAKYhAAAAAMYATwReAAYAyyEAAAAAxgFcBGgACgDeIQAAAADGAXAEaAALAOAhAAAA
AIYYmwFyAAwA7yEAAAAAhhibAXIADQD+IQAAAACGCJcEKAAOACQiAAAAAIYIoQQ5AA4ASiIAAAAA
hgi3BDkADgBwIgAAAACGCM4EOQAOAJYiAAAAAIYI4wQ5AA4AvCIAAAAAhgj4BDkADgDiIgAAAACG
CAUFOQAOAAgjAAAAAMYAfwVaAA4AISMAAAAAxgCKBVoADgAsIwAAAADGAHAEaAAOAHglAAAAAJYA
tQWDAA8AGCYAAAAAhgDIBYsAEQB8JgAAAACGAOEFlAAVAKgmAAAAAIYA+gWaABcA1CYAAAAAhgAG
Bp8AGADEJwAAAACGABwGpQAZADArAAAAAIYAOAasABsAjCsAAAAAhgBWBqUAHgBMLQAAAACGGJsB
WgAgAFQtAAAAAIMYmwFaACAAXC0AAAAAkwjMBrwAIACVLQAAAACTCOAGwQAgAJwtAAAAAJMI7AbG
ACAApC0AAAAAlggQB9oAIQC3LQAAAACGGJsBWgAhAKstAAAAAJEYew/6AiEAAAABACQHAAACACsH
AAADAD8HAAABAEkHAAABAEkHAAABAE8HAAACAFcHAAADACQHAAAEAD8HAAABACQHAAABAGEHAAAB
AGUHAAABAGUHAAABAGEHAAABAG8HAAACAHYHAAABAG8HAAACAHYHAAADAIUHAAAEAJQHAAABAKQH
AAACAK4HAAABAKQHAAABALkHAAABAG8HAAACAMIHAAABAG8HAAACAMIHAAADANEHAAABAG8HAAAC
AOAHAAABAEkHYQCbAeQAaQCbAeQAcQCbAeQAeQCbAeQAgQCbAeQAiQCbAeQAkQCbAeQAmQCbAeQA
oQCbAeQAqQCbAeQAsQCbAekAuQCbAVoACQCbARMACQAkB+4ACQArB/IAKQClCfYACQCuCfsACQC3
CQEBCQC+CekAwQCbAeQAKQDgCQYBKQDpCQsBKQDyCRABCQAnAygACQAvAygAEQCbAVoAyQAUChUB
EQAbChwBGQCbAVoAEQCICiIB2QClCScBEQDJCi0B4QD2CjIBAQGbAVoAEQB/BVoAEQCKBVoAyQA5
C3gASQCbAVoAOQA/Cz0BCQFSC0EBOQBaC0YBEQF7C00BEQHyCVMByQCHCzkAyQCMC1kBGQGbAV8B
IQGxC1oAIQG3C2UBSQDEC2oBKQHPCzkAGQDPCzkAMQHPCzkAOQHqC3EByQCMC3UBEQBcDHwBQQFy
DIIBEQGCDI0BOQCLDFoAOQCZDF8BSQGvDDkAyQCMC5MBUQGbAeQASQDbDLYBQQD7DLwBaQEWDcMB
DACbAdIBYQGQDd0BgQGeDeMBQQDBDecBiQHdDe0BQQDoDTkADADyDfQBgQH2DSgAmQELDloADAAT
DvwBQQAfDuQASQApDu0BiQE5DiACoQGbAVoAoQFODjICoQFODkECoQGbAeQAYQFbDjUAoQE5DkkC
oQE/CzUAoQFlDlACyQBsDm0CyQB4DpoCQQCGDp8CQQCXDjkAoQGlDqUCqQGbAVoAsQH0Ds4CsQEP
D9cCUQCbAd0CyQGbAeoC2QGbAVoAIQCbAVoADgAUAHsALgAbAHYDLgBjAJwDLgALAP4CLgATAEYD
LgAjAHYDLgArAHYDLgAzAEYDLgA7AHwDLgBDAHYDLgBbAJMDwwATATgB4wDjAjgBIQELAzgBCQMD
A/ECKQMDA/ECmwEFAikCOwJYAnMCkQKtAuUCAgABAAUAEQAHABgACAAaAAAAOwM9AAAARwNCAAAA
WgM9AAAAaANCAAAAfQNGAAAAhQNCAAAAlANKAAAAngNCAAAArwNGAAAAwQNCAAAA2gNOAAAA5wNC
AAAA+wNOAAAACARCAAAAHAROAAAAMgRCAAAAEAVCAAAAFgVOAAAAKAVOAAAAOwVOAAAATAVOAAAA
XQVOAAAAZgVOAAAAfwbMAAAA+AbRAAAAHAffAAIAAgADAAEAAwADAAIABAAFAAEABQAFAAIABgAH
AAIABwAJAAIACAALAAIACQANAAIACgAPAAIACwARAAIADAATAAIADQAVAAIADgAXAAIADwAZAAIA
EAAbAAIAEQAdAAIAEgAfAAIAEwAhAAIAHAAjAAIAHQAlAAIAHgAnAAIAHwApAAIAIAArAAIAIQAt
AAIAIgAvAAIAMAAxAAIAMQAzAAEAMgAzAAIAMwA1AMkBBIAAAAEAAACmFulyAAAAAAAAegkAAAwA
AAAAAAAAAAAAAAEAvgAAAAAABAAAAAAAAAAAAAAACgAZAQAAAAAEAAAAAAAAAAAAAAAKACIBAAAA
AAwAAAAAAAAAAAAAAAEAXQEAAAAABAAAAAAAAAAAAAAACgCWBQAAAAAMAAAAAAAAAAAAAAABACwK
AAAAAAwAAAAAAAAAAAAAAAEA9gsAAAAAAAAAAAEAAACCDwAAAAAAAAA8TW9kdWxlPgBTQ19mZDBi
YWI2NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBVc2Vy
Q29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJlc291cmNlcwBTQ19m
ZDBiYWI2NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5n
cwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVj
dABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9y
AEJsb2JDb2x1bW4AZ2V0X0NyaXRlcmlhU1FMAHNldF9Dcml0ZXJpYVNRTABnZXRfQ3JpdGVyaWFT
UUxfSXNOdWxsAHNldF9Dcml0ZXJpYVNRTF9Jc051bGwAZ2V0X1hNTFNxbFF1ZXJ5RUMAZ2V0X1hN
TFNxbFF1ZXJ5RUNfSXNOdWxsAGdldF9EaW1FQ0lEAGdldF9EaW1FQ0lEX0lzTnVsbABnZXRfRGlt
UG9vbElEAGdldF9EaW1Qb29sSURfSXNOdWxsAGdldF9EaW1PcmdhbmlzYXRpb25JZABnZXRfRGlt
T3JnYW5pc2F0aW9uSWRfSXNOdWxsAGdldF9FQ1Bhc3NOb0NvZGUAZ2V0X0VDUGFzc05vQ29kZV9J
c051bGwAZ2V0X0NyaXRlcmlhTmFtZQBnZXRfQ3JpdGVyaWFOYW1lX0lzTnVsbABnZXRfQ3JpdGVy
aWFUYWJsZVR5cGVDb2RlAGdldF9Dcml0ZXJpYVRhYmxlVHlwZUNvZGVfSXNOdWxsAE5leHRSb3cA
RW5kT2ZSb3dzZXQAQ3JpdGVyaWFTUUwAQ3JpdGVyaWFTUUxfSXNOdWxsAFhNTFNxbFF1ZXJ5RUMA
WE1MU3FsUXVlcnlFQ19Jc051bGwARGltRUNJRABEaW1FQ0lEX0lzTnVsbABEaW1Qb29sSUQARGlt
UG9vbElEX0lzTnVsbABEaW1PcmdhbmlzYXRpb25JZABEaW1PcmdhbmlzYXRpb25JZF9Jc051bGwA
RUNQYXNzTm9Db2RlAEVDUGFzc05vQ29kZV9Jc051bGwAQ3JpdGVyaWFOYW1lAENyaXRlcmlhTmFt
ZV9Jc051bGwAQ3JpdGVyaWFUYWJsZVR5cGVDb2RlAENyaXRlcmlhVGFibGVUeXBlQ29kZV9Jc051
bGwAUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dwBQYXJlbnRDb21wb25lbnQAZ2V0X0RFQlVHAGdldF9EaW1PcmdhbmlzYXRpb25JRABnZXRfRGlt
UmVwb3J0aW5nRGF0ZUlEAGdldF9EaW1Tb3VyY2VUcnVzdElEAGdldF9EaW1UYXJnZXRUcnVzdElE
AGdldF9FQ1Bhc3NObwBnZXRfUG9vbElkAERFQlVHAERpbU9yZ2FuaXNhdGlvbklEAERpbVJlcG9y
dGluZ0RhdGVJRABEaW1Tb3VyY2VUcnVzdElEAERpbVRhcmdldFRydXN0SUQARUNQYXNzTm8AUG9v
bElkAF9FbmRPZkxpbmUAX0RFQlVHAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlhtbABY
bWxOb2RlAFhtbERvY3VtZW50AEdldFBhcmFtZXRlckJ5TmFtZQBVcGRhdGVQYXJhbWV0ZXJBdHRy
aWJ1dGUAR2V0T3BlcmF0b3JXaXRoUGFyYW1ldGVyAEdldE9wZXJhdG9yAFNlbGVjdGVkSXRlbXNU
b1N0cmluZwBHZXRUU1FMRGVjbGFyZUhlYWRlckZyb21YTUwAR2V0VFNRTEV4ZWN1dGFibGVRdWVy
eUZyb21YTUwAR2V0VFNRTFF1ZXJ5Qm9keUZyb21YTUwAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJj
ZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVz
b3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
Q3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVy
Q29sdW1uSW5kZXhlcwBPdXRwdXRNYXAAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUAUm93AENvbXBv
bmVudABYbWxEb2MAc1BhcmFtZXRlck5hbWUAc0F0dHJpYnV0ZU5hbWUAc0F0dHJpYnV0ZVZhbHVl
AHNPcGVyYXRvcgBzUGFyYW1ldGVyAHhtbFBhcmFtAHNMaW5lRGVsaW1pdGVyAHNRdWVyeU5vZGVQ
YXRoAHNOb2RlUGF0aABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJl
QXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGli
aWxpdHlBdHRyaWJ1dGUAU0NfZmQwYmFiNjcxZmY0NDYyNjg0NGQzYmM2OWEyZDgyYmUuY3Nwcm9q
AGdldF9JdGVtAHNldF9JdGVtAElzTnVsbABTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRp
b24AR2V0SW50NjQAR2V0SW50MzIAR2V0U3RyaW5nAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVx
dWFscwBHZXRDb2x1bW5JbmRleGVzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJsZXMxMDAA
Z2V0X1JlYWRPbmx5VmFyaWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFs
Q29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRW
YWx1ZVdpdGhDb250ZXh0AEJvb2xlYW4AU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRy
aWJ1dGUARW1wdHkAZ2V0X0xlbmd0aABDb252ZXJ0AFRvSW50MzIAR2V0QmxvYkRhdGEAU3lzdGVt
LlRleHQARW5jb2RpbmcAZ2V0X1VuaWNvZGUAVHJpbQBGb3JtYXQAU3lzdGVtLklPAE1lbW9yeVN0
cmVhbQBTdHJlYW0ARmx1c2gAc2V0X1Bvc2l0aW9uAExvYWQASW50NjQAVG9TdHJpbmcASW50MzIA
RW52aXJvbm1lbnQAZ2V0X05ld0xpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdy
YXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50
TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEZpcmVJbmZvcm1hdGlvbgBHZXRCeXRl
cwBSZXNldEJsb2JEYXRhAEFkZEJsb2JEYXRhAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBBcHBsaWNh
dGlvbkV4Y2VwdGlvbgBYbWxFbGVtZW50AGdldF9Eb2N1bWVudEVsZW1lbnQAWG1sTm9kZUxpc3QA
U2VsZWN0Tm9kZXMAU3RyaW5nQ29tcGFyZXIAZ2V0X0ludmFyaWFudEN1bHR1cmVJZ25vcmVDYXNl
AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgBJRXF1YWxpdHlDb21wYXJl
cmAxAFN5c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJy
ZW50AFhtbEF0dHJpYnV0ZUNvbGxlY3Rpb24AZ2V0X0F0dHJpYnV0ZXMAWG1sQXR0cmlidXRlAGdl
dF9JdGVtT2YAZ2V0X1ZhbHVlAEFkZABNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAFRyeUdl
dFZhbHVlAHNldF9WYWx1ZQBDcmVhdGVBdHRyaWJ1dGUAQXBwZW5kAFN0cmluZ0J1aWxkZXIAQXBw
ZW5kRm9ybWF0AGdldF9Db3VudABSZW1vdmUAb3BfRXF1YWxpdHkASXNOdWxsT3JFbXB0eQBTZWxl
Y3RTaW5nbGVOb2RlAGdldF9Jbm5lclRleHQAUmVwbGFjZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTQ19mZDBiYWI2NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5j
c3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAAtEAEUAQgBVAEcAACNEAGkA
bQBPAHIAZwBhAG4AaQBzAGEAdABpAG8AbgBJAEQAACVEAGkAbQBSAGUAcABvAHIAdABpAG4AZwBE
AGEAdABlAEkARAAAIUQAaQBtAFMAbwB1AHIAYwBlAFQAcgB1AHMAdABJAEQAACFEAGkAbQBUAGEA
cgBnAGUAdABUAHIAdQBzAHQASQBEAAARRQBDAFAAYQBzAHMATgBvAAANUABvAG8AbABJAGQAAFc8
AD8AeABtAGwAIAB2AGUAcgBzAGkAbwBuAD0AIgAxAC4AMAAiACAAZQBuAGMAbwBkAGkAbgBnAD0A
IgB1AHQAZgAtADEANgAiACAAPwA+AHsAMAB9AAEjRABpAG0ATwByAGcAYQBuAGkAcwBhAHQAaQBv
AG4ASQBkAAALVgBhAGwAdQBlAAAlRABpAG0AUgBlAHAAbwByAHQAaQBuAGcARABhAHQAZQBJAGQA
ABNEAGkAbQBQAG8AbwBsAEkAZAAAD0QAaQBtAEUAQwBJAGQAAAUNAAoAAA8vAC8AUQB1AGUAcgB5
AAA5ewAwAH0AIAB7ADEAfQAgAHsAMgB9ACAAewAzAH0AIAB7ADQAfQAgAHsANQB9ADoAIAB7ADYA
fQAAJUYAYQBjAHQATABvAGEAbgAgAEUAQwAgAFQAbwAgAFgATQBMAAABABN7ADAAfQB7ADEAfQB7
ADIAfQAAQy8ALwBQAGEAcgBhAG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUwBxAGwAUABhAHIA
YQBtAGUAdABlAHIAJwBdAAEJTgBhAG0AZQAAESAAewAwAH0AIAB7ADEAfQAACyAAewAwAH0AIAAA
IygAJwBuAG8AbgBlACcAKQAgAEEAbgBkACAAMQA9ADEAIAABKy4ALwAvAFMAZQBsAGUAYwB0AGUA
ZABJAHQAZQBtAHMALwBJAHQAZQBtAAADKAAAEU4AJwB7ADAAfQAnACwAIAABAykAABNTAHEAbABE
AGIAVAB5AHAAZQAAEUQAYQB0AGUAVABpAG0AZQAAD1YAYQByAEMAaABhAHIAABFOAFYAYQByAEMA
aABhAHIAAF9EAGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACAAPQAgAEMAbwBuAHYAZQBy
AHQAKAB7ADIAfQAsACAAJwB7ADMAfQAnACwAIAAxADIAMAApACAAewA0AH0AAWlEAGUAYwBsAGEA
cgBlACAAQAB7ADAAfQAgAHsAMQB9ACgAbQBhAHgAKQAgAD0AIABDAG8AbgB2AGUAcgB0ACgAewAy
AH0AKABtAGEAeAApACwAIAAnAHsAMwB9ACcAKQAgAHsANAB9AAFVRABlAGMAbABhAHIAZQAgAEAA
ewAwAH0AIAB7ADEAfQAgAD0AIABDAG8AbgB2AGUAcgB0ACgAewAyAH0ALAAgACcAewAzAH0AJwAp
ACAAewA0AH0AAUkvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAnAFIAZQBwAGwA
YQBjAGUATwBwAGUAcgBhAHQAbwByACcAXQABEU8AcABlAHIAYQB0AG8AcgAARS8ALwBQAGEAcgBh
AG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUgBlAHAAbABhAGMAZQBMAG8AbwBrAHUAcAAnAF0A
AX9TAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQAMwBiAGMANgA5
AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAbuzVsC03USZlLsmdAZeyzAAiJhF3NgIDMkQi3elxWGTTgiQkgAwES
FR0IEhkEIAASHQUgAQESHQMgAAIEIAEBAgMgAAoDIAAIAyAADgQoABIdAygAAgMoAAoDKAAIAygA
DgMGEhADBhIUAyAAAQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJAgYOBA0ACgACBgIHAAISIRIl
DgggBAISJQ4ODgUgAg4ODgQgAQ4OBSABDhIhBiACDhIlDgcgAw4SJQ4OAwYSKQMGEi0EAAASKQQA
ABItBQABARItBAgAEikECAASLQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBCABHAgF
IAIBCBwEIAECCAQgAQoIBCABCAgEIAEOCAYgAgIOEWkFIAEdCAgEIAASbQUgARJxHAQAABJ1BSAB
HBJ5BAEAAAADIAAJBAABCAkGIAIdBQgIBQAAEoCJBSABDh0FBQACDg4cBSABAR0FBCABAQoGIAEB
EoCRAwAADgYAAg4OHRwFIAASgKEKIAYBCA4ODggQAgUgAR0FDgcABA4OHBwcGgcQDgISJR0FDhKA
jQ4dBRKApQ4KCAodHAgKBSAAEoCtBiABEoCxDgUAABKAtQgVEoC5Ag4SIQogAQEVEoC9ARMABSAA
EoDBAyAAHAUgABKAxQYgARKAyQ4HIAIBEwATAQggAgITABATARoHBxIhEoCtEoCxFRKAuQIOEiES
IRKAwRKAzQggARKAyRKAyQgHAwISIRKAyQggAxKA0Q4cHAUHARKA0QcgAhKA0Q4cBiABEoDRDgcg
AhKA0QgIFAcHDhKA0RKAsRIhEoClEoDBEoDNBQACAg4OHQcMEoDREoCxEiEOEoClEoDBDh0cHRwd
HB0cEoDNCAcCEoDREoClBAABAg4FIAESIQ4HIAISgNEODiAHDQ4SIRKA0RKAsRIhDhIhDhKApRKA
wRKAzRKAwRKAzQgAARKA2RGA3QUgABKA4QcgAgEOEoDhBAcBEikGIAEBEYDpCAEAAgAAAAAAAwAA
AUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQ
Lk5FVCBGcmFtZXdvcmsgNC8BACpTQ19mZDBiYWI2NzFmZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5j
c3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQCsUwAAAAAAAAAAAADOUwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAwFMAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAPADAAAAAAAA
AAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQDp
cqYWAAABAOlyphY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARQAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAAMAAwADAANABiADAAAACAACsA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZgBkADAAYgBhAGIANgA3
ADEAZgBmADQANAA2ADIANgA4ADQANABkADMAYgBjADYAOQBhADIAZAA4ADIAYgBlAC4AYwBzAHAA
cgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcAOQA4
AC4AMgA5ADQAMQA3AAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGYA
ZAAwAGIAYQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAzAGIAYwA2ADkAYQAyAGQAOAAy
AGIAZQAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIA
aQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMgAAAIgALwABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYA
NAA0ADYAMgA2ADgANAA0AGQAMwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAu
AGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYAZAAwAGIA
YQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAzAGIAYwA2ADkAYQAyAGQAOAAyAGIAZQAu
AGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADUANwA5ADgALgAyADkANAAxADcAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADUANwA5ADgALgAyADkANAAxADcAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADgMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_fd0bab671ff44626844d3bc69a2d82be</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::DEBUG,User::DimOrganisationID,User::DimReportingDateID,User::DimSourceTrustID,User::DimTargetTrustID,User::ECPassNo,User::PoolId</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">31896aa71586e11e7ad3adeabb35dbf3</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[DimPoolID]"
                          cachedDataType="i4"
                          cachedName="DimPoolID"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimPoolID]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[DimOrganisationId]"
                          cachedDataType="i8"
                          cachedName="DimOrganisationId"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaTableTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTableTypeCode"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\FactLoanECResult\Apply EC For FactLoan.Paths[ECResult]"
                  endId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input]"
                  name="ECResult"
                  startId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult]" />
                <path
                  refId="Package\FactLoanECResult\Apply EC For FactLoan.Paths[OLE DB Source Output]"
                  endId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\FactLoanECResult\Apply EC For FactLoan.Paths[Output 0]"
                  endId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\FactLoanECResult\Delete FactLoan EC Results"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{C8C332DD-75AB-4386-A361-5EDEF1F957D4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete FactLoan EC Results"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{603E36D9-43AD-4C2F-BCF7-4E42DBB03E1C}"
              SQLTask:SqlStatementSource="delete&#x9;dbo.tblFactLoanECResult&#xA;From&#x9;dbo.tblFactLoanECResult FEC&#xA;Inner Join&#x9;dbo.tblDimEC DimEc on DimEc.DimECID = FEC.DimECID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  And DimEc.DimPoolID = FEC.DimPoolID&#xA;where FEC.DimPoolId = ? And DimEC.ECPassNoCode = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::PoolId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="8" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ECPassNo"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\FactLoanECResult.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{560F7464-8143-48D0-8DB1-9638ABF20D2A}"
          DTS:From="Package\FactLoanECResult\Delete FactLoan EC Results"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\FactLoanECResult\Apply EC For FactLoan" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FactLoanReturnResult"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{FE7AB0A5-E013-42DF-A441-C22651C83CF0}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="FactLoanReturnResult">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\FactLoanReturnResult\Apply Loan Return Result"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{06F8F646-4DA8-4044-8E47-FF2B8776FF50}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply Loan Return Result"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="100"
              defaultBufferSize="40485760"
              version="1">
              <components>
                <component
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Apply FactLoanReturnResult EC"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ECResultBuffer ECResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ECResultBuffer)
        {
            ECResultBuffer.SetEndOfRowset();
            ECResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ECResult"))
            {
                ECResultBuffer = new ECResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String OLEDBConnStringALR
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["OLEDBConnString_ALR"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringALR);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnabled)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            //MessageBox.Show(Row.CriteriaDescription.ToString());
            //MessageBox.Show(sQuery);
            try
            {
                String sQueryDelete = String.Format("Delete dbo.tblFactLoanReturnResult From dbo.tblFactLoanReturnResult Where DimPoolId = {0} And DimECId = {1}", Row.DimPoolID.ToString(), Row.DimECID.ToString());
                SqlCommand _cmd = new SqlCommand(sQueryDelete, _SqlConn);
                _cmd.ExecuteNonQuery();

                _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    ECResultBuffer.AddRow();
                    //ECResultBuffer.DimPoolId = (long)dr["DimPoolId"];
                    //ECResultBuffer.DimECId = (long)dr["DimECId"];
                    //ECResultBuffer.DimConsolidationId = (long)dr["DimConsolidationId"];

                    ECResultBuffer.DimPoolId = Convert.ToInt64(dr["DimPoolId"]);
                    ECResultBuffer.DimECId = Convert.ToInt64(dr["DimECId"]);
                    ECResultBuffer.DimLoanId = Convert.ToInt64(dr["DimLoanId"]);
                    //ECResultBuffer.ECPassNo = dr["LTVPassNo"].ToString();
                    
                    //ECResultBuffer.ECPassNo = Variables.ECPassNo;
                    //MessageBox.Show(dr["DimPoolId"].GetType().ToString() + "_" + dr["DimECId"].GetType().ToString() + "_" + dr["DimLoanId"].GetType().ToString());

                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply FactLoanReturn EC", sMsg, "", 0, ref bFireAgain);

            }
            catch (SqlException ex)
            {
                //TODO Logging
                //MessageBox.Show(ex.Message);
                throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply tblFactLoanReturnResult EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Boolean IsEnabled
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[5]);
        }
    }
    public bool IsEnabled_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int64 DimPoolID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[6]);
        }
    }
    public bool DimPoolID_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ECResultBuffer: ScriptBuffer

{
    public ECResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 DimPoolId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DimPoolId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimLoanId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DimLoanId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimECId
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DimECId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{19F0D577-5252-46F5-914D-D5AF9455E138}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace>
    <AssemblyName>SC_0DBC12549F2B4CFBBD8E64A22961AF3F</AssemblyName>
    <ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0DBC12549F2B4CFBBD8E64A22961AF3F.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA+pQlYAAAAAAAAAAOAAAiELAQsAACQAAAAIAAAAAAAAnkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhDAABTAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
QwAAAAAAAEgAAAACAAUAcCYAANgcAAABAAAAAAAAALglAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipSAnsOAAAKAnsPAAAKF5RvEgAACioiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EgAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEwAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvEgAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvFAAACioiAhsoEQAACipSAnsOAAAKAnsP
AAAKHJRvEwAACioiAhwoEQAACioeAigVAAAKKh4CKBYAAAoqKgIDBAUoDQAACio6AhYDjBcAAAEo
FwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKejoCFwOMFwAAASgXAAAKKloDLAgCFygYAAAKKnIB
AABwcxkAAAp6OgIYA4wXAAABKBcAAAoqWgMsCAIYKBgAAAoqcgEAAHBzGQAACnoeAigaAAAKKh4C
KBsAAAoqHgIoFgAACip+AigcAAAKAgJzJAAABn0BAAAEAgJzJQAABn0CAAAEKgADMAQATwAAAAAA
AAAEcp4AAHAabx0AAAosFQIFAgMoHgAACg4EcwEAAAZvIgAABgVvHwAACiwjAgJ7BAAABBdYfQQA
AAQCewQAAAQXMwwCbx4AAAYCKB8AAAYqBipuAnsDAAAELBICewMAAARvGgAABgIUfQMAAAQqAAAA
EzAFAD0AAAABAAARFgorLgQGlA4Ecq4AAHAoIAAACjMZAgUGmgIEBpQoHgAACg4EcxIAAAZ9AwAA
BAYXWAoGAzLOAm8hAAAGKgYqSisHAgNvIwAABgNvEAAABi3xKgYqOgIoIQAACgIDfQUAAAQqOgIo
IQAACgIDfQYAAAQqlgJ7BgAABG8iAAAKcsAAAHBvIwAACigkAAAKbyUAAAp0GQAAASqWAnsGAAAE
byIAAApy0gAAcG8jAAAKKCQAAApvJQAACnQZAAABKqICKCcAAAoCAnsCAAAEbycAAAZzKAAACn0H
AAAEAnsHAAAEbykAAAoqZgIoKgAACgJ7BwAABG8rAAAKAhR9BwAABCoAAAAbMAcAkAEAAAIAABEX
CnL6AABwCwNvDAAABjlNAQAAA28CAAAGFgNvAgAABm8sAAAKKC0AAApvLgAACgwoLwAACghvMAAA
Cm8xAAAKDXL8AABwA28OAAAGEwkSCSgyAAAKA28IAAAGEwoSCigyAAAKKDMAAAoTBBEEAnsHAAAE
czQAAAoTBREFbzUAAAomCQJ7BwAABHM0AAAKEwURBRZvNgAAChEFbzcAAAoTBhYTBytlAnsDAAAE
bxkAAAYCewMAAAQRBnLVAQBwbzgAAAooOQAACm8TAAAGAnsDAAAEEQZy6QEAcG84AAAKKDkAAApv
FwAABgJ7AwAABBEGcvkBAHBvOAAACig5AAAKbxUAAAYRBxdYEwcRBm86AAAKLZIRBm87AAAKFBMG
cg0CAHADbwoAAAZvPAAAChEHjCcAAAEoMwAACgsCKD0AAAog6AMAAHIhAgBwB3L6AABwFhIAbz4A
AAreNBMIEQh6clECAHADbwoAAAYoPwAACgsCKD0AAAog6AMAAHKjAgBwB3L6AABwFhIAbz4AAAoq
QRwAAAAAAABBAAAAGgEAAFsBAAAFAAAAKQAAAQYqHgIoHAAABioeAighAAAKKgAAEzACAC0AAAAD
AAARfggAAAQtIHLlAgBw0AgAAAIoQQAACm9CAAAKc0MAAAoKBoAIAAAEfggAAAQqGn4JAAAEKh4C
gAkAAAQqGn4KAAAEKi5zMgAABoAKAAAEKh4CKEYAAAoqAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAmAkAACN+AAAECgAA8AwAACNTdHJpbmdzAAAA
APQWAABoAwAAI1VTAFwaAAAQAAAAI0dVSUQAAABsGgAAbAIAACNCbG9iAAAAAAAAAAIAAAFXFaIB
CQEAAAD6JTMAFgAAAQAAADAAAAAJAAAACgAAADMAAAAaAAAARgAAAA8AAAADAAAABQAAABkAAAAa
AAAAAQAAAAcAAAABAAAAAAAKAAEAAAAAAAYABAHjAAYAEQHjAAoAMQEqAQ4ATQE4ARIAhgHjAAYA
lQHjABIAqQHjABYAjQV3BQoAzAW7BQoA/QXoBQoA8AbWBgoAGwcJBwoAMgcJBwoATwcJBwoAbgcJ
BwoAhwcJBwoAoAcJBwoAuwcJBwoA1gcJBwoA7wcJBwoAKAgICAoASAgICAoAuAgqAQoAzwgqAQoA
6QgqAQoA8AgqARoAgAlYCRoApwlYCQsAtwkAABoA5wlYCQYAEwrjABYATQo6CgoAcAoqAQoAmAqM
ChYAwgp3BRYAzQo6ChYA+gp3BRYAFgs6CgoAMAsqAR4AgwtaCxYAwgt3BQoA4gvPCwoA/wsqAQoA
BAwqAQoAKAwJBw4AVAw+DA4AbQw+DAoAggwICAAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEAAQAB
ABAAPwAAAAUAAQASAAEAEABOAAAACQABABwAAQAQAFwAAAANAAUAJAABABAAaAAAAA0ABgAlAAEA
EAByAAAAEAAHACgAAAAQAH0AhwANAAgALQAAARAAvQCHABEACgAxAAYAXABNAAYAaABRAAYAPwBV
AAEAkgRZAAEAGwV4AAEAGwV4AAEAmwWCABEA3AWGABEACQaKABEATQaoAFAgAAAAAIYYowETAAEA
WyAAAAAAhgi0AR0ABAB1IAAAAACGCMQBIgAEAH4gAAAAAIYI2wEmAAQAkyAAAAAAhgjzASIABACc
IAAAAACGCBICJgAEALEgAAAAAIYIJwIiAAQAuiAAAAAAhghDAioABADPIAAAAACGCE8CIgAEANgg
AAAAAIYIYgImAAQA7SAAAAAAhghzAiIABAD2IAAAAACGCIsCIgAEAAshAAAAAIYImQIiAAQAFCEA
AAAAhgiuAioABAApIQAAAACGCLwCIgAEADIhAAAAAIYA0QIiAAQAOiEAAAAAhgDZAiIABABCIQAA
AACGGKMBEwAEAE0hAAAAAIYIygM/AAcAXCEAAAAAhgjYA0QACABzIQAAAACGCO0DPwAJAIIhAAAA
AIYI+wNEAAoAmSEAAAAAhggQBD8ACwCoIQAAAACGCBwERAAMAL8hAAAAAIYALwRJAA0AxyEAAAAA
hgA2BEkADQDPIQAAAACGANkCIgANANchAAAAAIYYowFJAA0A+CEAAAAAxgChBFwADQBTIgAAAADG
Aa4ESQARAFUiAAAAAIEAvARJABEAdCIAAAAAxgDQBGYAEQC9IgAAAADGAdwESQAVAL8iAAAAAMYB
8ARyABUA0iIAAAAAxgEEBXIAFgDUIgAAAACGGKMBfAAXAOMiAAAAAIYYowF8ABgA8iIAAAAAhggr
BSYAGQAYIwAAAACGCDgFJgAZAD4jAAAAAMYApAVJABkAZyMAAAAAxgCvBUkAGQCEIwAAAADGAAQF
cgAZADwlAAAAAMYA3ARJABoAPiUAAAAAhhijAUkAGgBGJQAAAACDGKMBSQAaAFAlAAAAAJMIGQaO
ABoAiSUAAAAAkwgtBpMAGgCQJQAAAACTCDkGmAAaAJglAAAAAJYIXQasABsAqyUAAAAAhhijAUkA
GwCfJQAAAACRGJ0MqwEbAAAAAQBxBgAAAgB4BgAAAwCMBgAAAQBxBgAAAgB4BgAAAwCMBgAAAQCW
BgAAAQCWBgAAAQCWBgAAAQCWBgAAAQCWBgAAAQCWBgAAAQCcBgAAAgCkBgAAAwBxBgAABACMBgAA
AQCuBgAAAgC2BgAAAwDABgAABACMBgAAAQBxBgAAAQDIBgAAAQDMBgAAAQDMBgAAAQDIBgAAAQCW
BlkAowG2AGEAowG2AGkAowG2AHEAowG2AHkAowG2AIEAowG2AIkAowG2AJEAowG2AJkAowG2AKEA
owG2AKkAowG7ALEAowFJAAkAowETAAkAcQbAAAkAeAbEACkAigjIAAkAkwjNACkAmgjSACkApAjX
ACkArQjNAAkA0QIiAAkA2QIiAAkAvgjcAAkAxwi7AMEAowG2AAkALwRJAAkANgRJABEAowFJAMkA
AQniABEACAnpACkAGQkiABEAKQnvABkAowFJABEAkQn6ANkAigj/ABEA0gkFAeEA/wkKAfkAowFJ
ABEApAVJAEEAowG2AAEBWgpJABEArwVJAAEBXwpJADkAZQoVAQkBeAoZATkAgAoeAREBoQolAREB
mggrAckArQomALkAsgomAMkAuwoxARkBowE4ASEB1wo/ASEB5wq7ABkBCAtDATEBighJAQkBIwtO
ATEBKwsiADEBXwpJABkAsgomABEAnAtTAUEBsgtZAckAuwpkAVEBowFJAFkBFgx/AVkBMQyIAUkA
owGOAXEBowGbAYEBowFJACEAowFJAC4AGwAnAi4AYwBNAi4ACwCvAS4AEwD3AS4AIwAnAi4AKwAn
Ai4AMwD3AS4AOwAtAi4AQwAnAi4AWwBEAuMAMwEQAQMBAwIQAUEBKwIQAekCIwKiAQkDIwKiAfYA
agGWAQIAAQADAA8ABgAVAAgAFwAJABkAAADlAi4AAADxAjMAAAAEAzcAAAAYAzMAAAAzAzcAAABE
AzMAAABcAzsAAABkAzMAAABzAzcAAACAAzMAAACUAzMAAACeAzMAAACvAzsAAAC5AzMAAABFBDsA
AABPBDMAAABgBDsAAABqBDMAAAB7BDsAAACDBDMAAABPBTcAAABYBTcAAADMBZ4AAABFBqMAAABp
BrEAAgACAAMAAgADAAUAAgAEAAcAAgAFAAkAAgAGAAsAAgAHAA0AAgAIAA8AAgAJABEAAgAKABMA
AgALABUAAgAMABcAAgANABkAAgAOABsAAgAPAB0AAQATAB8AAQAUACEAAQAVACMAAQAWACUAAQAX
ACcAAQAYACkAAgAmACsAAgAnAC0AAgAuAC8AAgAvADEAAQAwADEAAgAxADMABIAAAAEAAAChFkdK
AAAAAAAAZggAAAwAAAAAAAAAAAAAAAEAxgAAAAAABAAAAAAAAAAAAAAACgAhAQAAAAAEAAAAAAAA
AAAAAAAKACoBAAAAAAwAAAAAAAAAAAAAAAEAZQEAAAAABAAAAAAAAAAAAAAACgBrBQAAAAAMAAAA
AAAAAAAAAAABADUJAAAAAAwAAAAAAAAAAAAAAAEANgsAAAAAAAAAAAEAAACkDAAAAAAAPE1vZHVs
ZT4AU0NfMERCQzEyNTQ5RjJCNENGQkJEOEU2NEEyMjk2MUFGM0YuZGxsAElucHV0MEJ1ZmZlcgBF
Q1Jlc3VsdEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRN
YWluAFJlc291cmNlcwBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2ou
UHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBP
dXRwdXROYW1lTWFwAC5jdG9yAEJsb2JDb2x1bW4AZ2V0X0NyaXRlcmlhU1FMAGdldF9Dcml0ZXJp
YVNRTF9Jc051bGwAZ2V0X0NyaXRlcmlhRGVzY3JpcHRpb24AZ2V0X0NyaXRlcmlhRGVzY3JpcHRp
b25fSXNOdWxsAGdldF9Dcml0ZXJpYVR5cGVDb2RlAGdldF9Dcml0ZXJpYVR5cGVDb2RlX0lzTnVs
bABnZXRfRGltRUNJRABnZXRfRGltRUNJRF9Jc051bGwAZ2V0X0NyaXRlcmlhTmFtZQBnZXRfQ3Jp
dGVyaWFOYW1lX0lzTnVsbABnZXRfSXNFbmFibGVkAGdldF9Jc0VuYWJsZWRfSXNOdWxsAGdldF9E
aW1Qb29sSUQAZ2V0X0RpbVBvb2xJRF9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABDcml0ZXJp
YVNRTABDcml0ZXJpYVNRTF9Jc051bGwAQ3JpdGVyaWFEZXNjcmlwdGlvbgBDcml0ZXJpYURlc2Ny
aXB0aW9uX0lzTnVsbABDcml0ZXJpYVR5cGVDb2RlAENyaXRlcmlhVHlwZUNvZGVfSXNOdWxsAERp
bUVDSUQARGltRUNJRF9Jc051bGwAQ3JpdGVyaWFOYW1lAENyaXRlcmlhTmFtZV9Jc051bGwASXNF
bmFibGVkAElzRW5hYmxlZF9Jc051bGwARGltUG9vbElEAERpbVBvb2xJRF9Jc051bGwAc2V0X0Rp
bVBvb2xJZABzZXRfRGltUG9vbElkX0lzTnVsbABzZXRfRGltTG9hbklkAHNldF9EaW1Mb2FuSWRf
SXNOdWxsAHNldF9EaW1FQ0lkAHNldF9EaW1FQ0lkX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dz
ZXQARGltUG9vbElkAERpbVBvb2xJZF9Jc051bGwARGltTG9hbklkAERpbUxvYW5JZF9Jc051bGwA
RGltRUNJZABEaW1FQ0lkX0lzTnVsbABJbnB1dHNGaW5pc2hlZABQcm9jZXNzSW5wdXQARmluaXNo
T3V0cHV0cwBNYXJrT3V0cHV0c0ZpbmlzaGVkAFByaW1lT3V0cHV0AENyZWF0ZU5ld091dHB1dFJv
d3MASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AFBhcmVudENvbXBv
bmVudABnZXRfRUNQYXNzTm8AZ2V0X09MRURCQ29ublN0cmluZ0FMUgBFQ1Bhc3NObwBPTEVEQkNv
bm5TdHJpbmdBTFIAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENvbm5lY3Rp
b24AX1NxbENvbm4AUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291
cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBy
ZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBCdWZm
ZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFtZQBPdXRwdXRz
AE91dHB1dElEcwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzBEQkMxMjU0OUYyQjRDRkJCRDhF
NjRBMjI5NjFBRjNGAGdldF9JdGVtAElzTnVsbABHZXRTdHJpbmcAR2V0SW50NjQAR2V0Qm9vbGVh
bgBJbnQ2NABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5n
AFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAZ2V0X0VuZE9mUm93c2V0
AEdldE91dHB1dElEAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRP
bmx5VmFyaWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABn
ZXRfRXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhD
b250ZXh0AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5EYXRh
LkNvbW1vbgBEYkNvbm5lY3Rpb24AT3BlbgBDbG9zZQBnZXRfTGVuZ3RoAENvbnZlcnQAVG9JbnQz
MgBHZXRCbG9iRGF0YQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfVW5pY29kZQBUcmltAFRvU3Ry
aW5nAEZvcm1hdABTcWxDb21tYW5kAERiQ29tbWFuZABFeGVjdXRlTm9uUXVlcnkAc2V0X0NvbW1h
bmRUaW1lb3V0AFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBEYkRhdGFSZWFkZXIAVG9JbnQ2
NABSZWFkAEludDMyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAw
AGdldF9Db21wb25lbnRNZXRhRGF0YQBGaXJlSW5mb3JtYXRpb24AU3FsRXhjZXB0aW9uAFN5c3Rl
bS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5D
b21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzc3NDc4MDJkNzU5ZDRkYmRh
ZWE4ZTUwOGE5MmMwYmQzLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAA
gJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBl
AHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQA
bwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAw
AAARRQBDAFIAZQBzAHUAbAB0AAARRQBDAFAAYQBzAHMATgBvAAAnTwBMAEUARABCAEMAbwBuAG4A
UwB0AHIAaQBuAGcAXwBBAEwAUgAAAQCA10QAZQBsAGUAdABlACAAZABiAG8ALgB0AGIAbABGAGEA
YwB0AEwAbwBhAG4AUgBlAHQAdQByAG4AUgBlAHMAdQBsAHQAIABGAHIAbwBtACAAZABiAG8ALgB0
AGIAbABGAGEAYwB0AEwAbwBhAG4AUgBlAHQAdQByAG4AUgBlAHMAdQBsAHQAIABXAGgAZQByAGUA
IABEAGkAbQBQAG8AbwBsAEkAZAAgAD0AIAB7ADAAfQAgAEEAbgBkACAARABpAG0ARQBDAEkAZAAg
AD0AIAB7ADEAfQAAE0QAaQBtAFAAbwBvAGwASQBkAAAPRABpAG0ARQBDAEkAZAAAE0QAaQBtAEwA
bwBhAG4ASQBkAAATewAwAH0AIAA6ACAAewAxAH0AAC9BAHAAcABsAHkAIABGAGEAYwB0AEwAbwBh
AG4AUgBlAHQAdQByAG4AIABFAEMAAFFFAEMAIAB7ADAAfQAgAGkAcwAgAG4AbwB0ACAAZQBuAGEA
YgBsAGUAZAAgAGEAbgBkACAAaQBzACAAbgBvAHQAIABhAHAAcABsAGkAZQBkAABBQQBwAHAAbAB5
ACAAdABiAGwARgBhAGMAdABMAG8AYQBuAFIAZQB0AHUAcgBuAFIAZQBzAHUAbAB0ACAARQBDAAB/
UwBDAF8ANwA3ADQANwA4ADAAMgBkADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5
ADIAYwAwAGIAZAAzAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAAAAAIiShTLmUWBKqGuIf/Z5cGQACImEXc2AgMyRCLd6XFYZNOCJCSADARIV
HQgSGQQgABIdAyAAAgMgAA4DIAAKBCgAEh0DKAACAygADgMoAAoEIAEBCgQgAQECAyAAAQMGEhQD
BhIYAwYSDAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEggDBhIJBSABARIJAwYSIQMGEiUD
BhIpBAAAEiUEAAASKQUAAQESKQQIABIlBAgAEikDBhIkBAAAEiQECAASJAQgAQEOBCABAQgDBhIV
AwYdCAQgARwIBCABAggEIAEOCAQgAQoIBSACAQgcBiACAg4RaQUgAR0ICAYAAggSGQ4DBwEIBCAA
Em0FIAEScRwEAAASdQUgARwSeQQBAAAAAyAACQQAAQgJBiACHQUICAUAABKAiQUgAQ4dBQYAAw4O
HBwGIAIBDhIhAyAACAUgABKAlQQgARwOBAABChwFIAASgKEKIAYBCA4ODggQAgUAAg4OHBQHCwIO
HQUODhKAjRKAlQgSgKUKCggAARKArRGAsQUgABKAtQcgAgEOEoC1BAcBEiUGIAEBEYC9CAEAAgAA
AAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJj
MGJkMy5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAXBDAAAAAAAAAAAAAI5DAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACAQwAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAEdKoRYAAAEAR0qhFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0AGIA
MAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3ADcANAA3
ADgAMAAyAGQANwA1ADkAZAA0AGQAYgBkAGEAZQBhADgAZQA1ADAAOABhADkAMgBjADAAYgBkADMA
LgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADUANwA5ADMALgAxADkAMAAxADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBDAF8AMABEAEIAQwAxADIANQA0ADkARgAyAEIANABDAEYAQgBCAEQAOABFADYANABBADIAMgA5
ADYAMQBBAEYAMwBGAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADIAAAB4ACgAAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMABEAEIAQwAxADIANQA0ADkARgAyAEIANABDAEYA
QgBCAEQAOABFADYANABBADIAMgA5ADYAMQBBAEYAMwBGAC4AZABsAGwAAAB4ACsAAQBQAHIAbwBk
AHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcANwA0ADcAOAAwADIAZAA3ADUAOQBkADQAZABiAGQA
YQBlAGEAOABlADUAMAA4AGEAOQAyAGMAMABiAGQAMwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANwA5ADMALgAxADkAMAAxADUA
AAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUANwA5
ADMALgAxADkAMAAxADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAKAzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0dbc12549f2b4cfbbd8e64a22961af3f</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ECPassNo,User::OLEDBConnString_ALR</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">42970d2c7daa8c96115f8e7b09937ec8</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaDescription]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[IsEnabled]"
                          cachedDataType="bool"
                          cachedName="IsEnabled"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[IsEnabled]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0].Columns[DimPoolID]"
                          cachedDataType="i4"
                          cachedName="DimPoolID"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimPoolID]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult]"
                      hasSideEffects="true"
                      name="ECResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimPoolId]"
                          dataType="i8"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimPoolId]"
                          name="DimPoolId" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimLoanId]"
                          dataType="i8"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimLoanId]"
                          name="DimLoanId" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimECId]"
                          dataType="i8"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimECId]"
                          name="DimECId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="FactLoanReturnResult"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select 	DimPoolID	
	, DimECID
	, CriteriaName
	, CriteriaDescription
	, CriteriaSetId
	, CriteriaSetTypeCode
	, CriteriaTypeCode
	, IsEnabled
	, ECPassNoCode
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, CriteriaTableTypeCode
	, SequenceNo
	, DimOrganisationId
                ,cast(null as nvarchar(max)) as CriteriaSQL
from tblDimEC
where DimPoolId = ? and CriteriaTableTypeCode = 'dbo.tblFactLoanReturnResult' and ECPassNoCode = ? and IsEnabled = 1
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0",{F7498697-94B9-4899-9B71-5E7C3EAB7D62};"Parameter1",{47A65516-366C-46E6-A597-923EEA41A566};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimPoolID]"
                          name="DimPoolID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimECID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimECID]"
                          name="DimECID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[IsEnabled]"
                          name="IsEnabled"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          dataType="i8"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[IsEnabled]"
                          dataType="bool"
                          name="IsEnabled" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTableTypeCode" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          dataType="i8"
                          name="DimOrganisationId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          dataType="i4"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[DimPoolID]"
                          name="DimPoolID" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          dataType="i8"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          name="DimECID" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          dataType="bool"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[IsEnabled]"
                          name="IsEnabled" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaTableTypeCode]"
                          name="CriteriaTableTypeCode" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="FactLoanReturnResult EC Results to ALR"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[tblFactLoanReturnResult]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimPoolId]"
                          cachedDataType="i8"
                          cachedName="DimPoolId"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimPoolId]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimECId]"
                          cachedDataType="i8"
                          cachedName="DimECId"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimECId]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimLoanId]"
                          cachedDataType="i8"
                          cachedName="DimLoanId"
                          externalMetadataColumnId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimLoanID]"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult].Columns[DimLoanId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimPoolID]"
                          dataType="i4"
                          name="DimPoolID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          dataType="i4"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimLoanID]"
                          dataType="i4"
                          name="DimLoanID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="FactLoanReturnResult EC XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.IO;
using System.Collections.Generic;
using System.Windows.Forms;
//using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.DEBUG;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string sMsg = "";
        bool bFireAgain = true;

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "DimOrganisationId", "Value", Row.DimOrganisationId.ToString());
            UpdateParameterAttribute(xmlDoc, "DimReportingDateId", "Value", Variables.DimReportingDateID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimPoolId", "Value", Row.DimPoolID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimSourceTrustID", "Value", Variables.DimSourceTrustID.ToString());
            UpdateParameterAttribute(xmlDoc, "DimTargetTrustID", "Value", Variables.DimTargetTrustID.ToString());

            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            //MessageBox.Show(sQuery);
            if (_DEBUG)
            {
                sMsg = string.Format("{0} {1} {2} {3} {4} {5}: {6}", Row.DimPoolID.ToString(), Row.DimECID.ToString(), Row.CriteriaName, Row.CriteriaTableTypeCode, Row.ECPassNoCode, Environment.NewLine, sQuery);
                ComponentMetaData.FireInformation(1000, "FactLoanReturn EC To XML", sMsg, "", 0, ref bFireAgain);
            }
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);

        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {

        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;

        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public static bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public static string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public static string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public static string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("N'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public static string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public static string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
        set
        {
            this[0] = value;
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[2]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 DimPoolID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool DimPoolID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int64 DimOrganisationId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[4]);
        }
    }
    public bool DimOrganisationId_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String CriteriaTableTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool CriteriaTableTypeCode_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimOrganisationID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimOrganisationID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimSourceTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimSourceTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimTargetTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimTargetTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PoolId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PoolId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace>
    <AssemblyName>SC_5C75C8535AE1416F8EDEDDE9B61BEF32</AssemblyName>
    <ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{05CFCC06-B564-479D-8FE2-BDA934A1D05F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_5C75C8535AE1416F8EDEDDE9B61BEF32.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKocSFYAAAAAAAAAAOAAAiELAQsAADQAAAAIAAAAAAAAnlMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhTAABTAAAAAGAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApDMAAAAgAAAANAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAYAAAAAYAAAA2AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
UwAAAAAAAEgAAAACAAUAaC4AAOAkAAABAAAAAAAAALAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASomAhYDKBEAAAoqIgIWKBIAAAoqWgMsCAIWKBMAAAoqcgEAAHBzFAAACnpmAnsOAAAKAnsPAAAK
F5RvEAAACnQHAAABKiICFygSAAAKKlICew4AAAoCew8AAAoYlG8VAAAKKiICGCgSAAAKKlICew4A
AAoCew8AAAoZlG8VAAAKKiICGSgSAAAKKlICew4AAAoCew8AAAoalG8VAAAKKiICGigSAAAKKlIC
ew4AAAoCew8AAAoblG8WAAAKKiICGygSAAAKKlICew4AAAoCew8AAAoclG8WAAAKKiICHCgSAAAK
KlICew4AAAoCew8AAAodlG8WAAAKKiICHSgSAAAKKh4CKBcAAAoqHgIoGAAACip+AigZAAAKAgJz
GgAABn0BAAAEAgJzGwAABn0CAAAEKpIEcp4AAHAabxoAAAosFQIFAgMoGwAACg4EcwEAAAZvGAAA
BipKKwcCA28ZAAAGA28UAAAGLfEqBio6AigcAAAKAgN9AwAABCo6AigcAAAKAgN9BAAABCqWAnsE
AAAEbx0AAApyrgAAcG8eAAAKKB8AAApvIAAACqUfAAABKpYCewQAAARvHQAACnK6AABwbx4AAAoo
HwAACm8gAAAKdBkAAAEqlgJ7BAAABG8dAAAKct4AAHBvHgAACigfAAAKbyAAAAp0GQAAASqWAnsE
AAAEbx0AAApyBAEAcG8eAAAKKB8AAApvIAAACnQZAAABKpYCewQAAARvHQAACnImAQBwbx4AAAoo
HwAACm8gAAAKdBkAAAEqlgJ7BAAABG8dAAAKckgBAHBvHgAACigfAAAKbyAAAAp0GQAAASqWAnsE
AAAEbx0AAApyWgEAcG8eAAAKKB8AAApvIAAACnQZAAABKmICKCIAAAoCAnsCAAAEbxwAAAZ9BgAA
BCoeAigjAAAKKgAAABswBwAaAgAAAQAAEXJoAQBwChcLcyQAAAoMA28GAAAGFgNvBgAABm8lAAAK
KCYAAApvJwAACg1yagEAcCgoAAAKCW8pAAAKbyoAAAooKwAAChMECXMsAAAKEwURBW8tAAAKEQUW
am8uAAAKCBEFby8AAAoIcsIBAHBy5gEAcANvDAAABhMKEgooMAAACignAAAGJghy8gEAcHLmAQBw
AnsCAAAEbx4AAAZvMQAACignAAAGJghyGAIAcHLmAQBwA28KAAAGEwsSCygwAAAKKCcAAAYmCHIs
AgBwcuYBAHADbwgAAAYTDBIMKDAAAAooJwAABiYIcgQBAHBy5gEAcAJ7AgAABG8fAAAGbzEAAAoo
JwAABiYIciYBAHBy5gEAcAJ7AgAABG8gAAAGbzEAAAooJwAABiYIcjwCAHByQgIAcCgsAAAGEwYC
ewYAAAQ5hgAAAHJSAgBwHY0DAAABEw0RDRYDbwoAAAYTDhIOKDAAAAqiEQ0XA28IAAAGEw8SDygw
AAAKohENGANvEAAABqIRDRkDbxIAAAaiEQ0aA28OAAAGohENGygyAAAKohENHBEGohENKDMAAAoK
Aig0AAAKIOgDAAByjAIAcAZyaAEAcBYSAW81AAAKKCgAAAoRBm82AAAKEwcDbwIAAAZvNwAACgNv
AgAABhEHbzgAAAreJBMIcr4CAHARBCgyAAAKEQhvOQAACig6AAAKEwkRCXM7AAAKeioAAEEcAAAA
AAAARwAAAK4BAAD1AQAAJAAAACgAAAEbMAMAggAAAAIAABEUCgJvPAAACgsHctICAHBvPQAACgwo
PgAACnM/AAAKDQhvQAAAChMFKywRBW9BAAAKdAgAAAETBAkRBG9CAAAKchYDAHBvQwAACm9EAAAK
EQRvRQAAChEFb0YAAAoty94VEQV1MgAAARMGEQYsBxEGb0cAAArcCQMSAG9IAAAKJgYqAAABEAAA
AgAoADlhABUAAAAAEzACAFMAAAADAAARFgoCAygmAAAGCwctAgYqB29CAAAKBG9DAAAKLBYHb0IA
AAoEb0MAAAoFb0kAAAoXCiseAgRvSgAACgwIBW9JAAAKB29CAAAKCG9LAAAKJhcKBioAEzAEACAA
AAAEAAARc0wAAAoKBnIgAwBwAm8qAAAKA29NAAAKJgZvMQAACioTMAMAHwAAAAQAABFzTAAACgoG
cjIDAHACbyoAAApvTgAACiYGbzEAAAoqABswBADHAAAABQAAEXI+AwBwCn5PAAAKc1AAAAoLAi0C
BioCcmIDAHBvPQAACgwIOZYAAAAIb1EAAAoWPooAAAAHco4DAHBvUgAACiYIb0AAAAoTBSszEQVv
QQAACnQIAAABDQdykgMAcAlvQgAACnLmAQBwb0MAAApvRAAACm8xAAAKb04AAAomEQVvRgAACi3E
3hURBXUyAAABEwYRBiwHEQZvRwAACtwHB29TAAAKGFkYb1QAAApypAMAcG9SAAAKJgdvMQAACgre
BRMEEQR6BioAARwAAAIASABAiAAVAAAAAAAAFgCqwAAFKAAAARswBQApAwAABgAAEXNMAAAKCgIt
BwZvMQAACioCctICAHBvPQAACgsHOfkCAAAHb0AAAAoTBTjJAgAAEQVvQQAACnQIAAABDH5PAAAK
DQhvQgAACnKoAwBwb0MAAApvRAAACm8xAAAKJRMGOfoBAAARBnK8AwBwKFUAAAotJxEGcs4DAHAo
VQAACjqtAAAAEQZy3gMAcChVAAAKOjMBAAA4xQEAAHLwAwBwG40DAAABEwcRBxYIb0IAAApyFgMA
cG9DAAAKb0QAAApvMQAACqIRBxcIb0IAAApyqAMAcG9DAAAKb0QAAApvMQAACqIRBxgIb0IAAApy
qAMAcG9DAAAKb0QAAApvMQAACqIRBxkIb0IAAApy5gEAcG9DAAAKb0QAAApvMQAACqIRBxoDohEH
KDMAAAoNOMABAAByUAQAcBuNAwAAARMIEQgWCG9CAAAKchYDAHBvQwAACm9EAAAKbzEAAAqiEQgX
CG9CAAAKcqgDAHBvQwAACm9EAAAKbzEAAAqiEQgYCG9CAAAKcqgDAHBvQwAACm9EAAAKbzEAAAqi
EQgZCG9CAAAKcuYBAHBvQwAACm9EAAAKbzEAAAqiEQgaA6IRCCgzAAAKDTgpAQAAclAEAHAbjQMA
AAETCREJFghvQgAACnIWAwBwb0MAAApvRAAACm8xAAAKohEJFwhvQgAACnKoAwBwb0MAAApvRAAA
Cm8xAAAKohEJGAhvQgAACnKoAwBwb0MAAApvRAAACm8xAAAKohEJGQhvQgAACnLmAQBwb0MAAApv
RAAACm8xAAAKohEJGgOiEQkoMwAACg04kgAAAHK6BABwG40DAAABEwoRChYIb0IAAApyFgMAcG9D
AAAKb0QAAApvMQAACqIRChcIb0IAAApyqAMAcG9DAAAKb0QAAApvMQAACqIRChgIb0IAAApyqAMA
cG9DAAAKb0QAAApvMQAACqIRChkIb0IAAApy5gEAcG9DAAAKb0QAAApvMQAACqIRChoDohEKKDMA
AAoNBglvUgAACiYRBW9GAAAKOiv9///eFREFdTIAAAETCxELLAcRC29HAAAK3N4FEwQRBHoGbzEA
AAoqAAAAQTQAAAIAAAAqAAAA3AIAAAYDAAAVAAAAAAAAAAAAAAAQAAAADQMAAB0DAAAFAAAAKAAA
ARswAwA8AAAABwAAEXNMAAAKCgItBwZvMQAACioGAgMoKwAABm9SAAAKJgYCckICAHAoLQAABm9S
AAAKJt4DCwd6Bm8xAAAKKgEQAAAAABAAIjIAAygAAAEbMAMAZQEAAAgAABF+TwAACgoCLQoDKFYA
AAosAgYqAgNvVwAACgsHOTsBAAAHb1gAAAoKBnNQAAAKDAJyEAUAcG89AAAKDQksfglvQAAAChMJ
K1QRCW9BAAAKdAgAAAETBBEEb0IAAApyWgUAcG9DAAAKb0QAAApvMQAACigpAAAGEwUIEQRvQgAA
CnIWAwBwb0MAAApvRAAACm8xAAAKEQVvWQAACiYRCW9GAAAKLaPeFREJdTIAAAETChEKLAcRCm9H
AAAK3BQNAnJsBQBwbz0AAAoNCTmFAAAACW9AAAAKEwsrWxELb0EAAAp0CAAAARMGEQZvQgAACnJa
BQBwb0MAAApvRAAACm8xAAAKEQYoKgAABigoAAAGEwcIEQZvQgAACnIWAwBwb0MAAApvRAAACm8x
AAAKEQdvWQAACiYRC29GAAAKLZzeFRELdTIAAAETDBEMLAcRDG9HAAAK3AhvMQAACgreBRMIEQh6
BioAAABBTAAAAgAAAEYAAABhAAAApwAAABUAAAAAAAAAAgAAANgAAABoAAAAQAEAABUAAAAAAAAA
AAAAABMAAABLAQAAXgEAAAUAAAAoAAABHgIoFgAABioeAigcAAAKKhMwAgAtAAAACQAAEX4HAAAE
LSBysgUAcNAHAAACKFsAAApvXAAACnNdAAAKCgaABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+
CQAABCouczQAAAaACQAABCoeAihgAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAzAoAACN+AAA4CwAAsA8AACNTdHJpbmdzAAAAAOgaAAA0BgAAI1VT
ABwhAAAQAAAAI0dVSUQAAAAsIQAAtAMAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQEAAAD6JTMAFgAA
AQAAADoAAAAIAAAACQAAADUAAAAgAAAAYAAAAAEAAAAPAAAACQAAAAQAAAAaAAAAHQAAAAEAAAAB
AAAABwAAAAEAAAAAAAoAAQAAAAAABgD1ANQABgACAdQACgAiARsBDgA+ASkBEgB3AdQABgCGAdQA
EgCaAdQAFgCaBY8FFgCiBY8FCgB4BmcGCgCpBpQGCgD9B+MHCgAoCBYICgA/CBYICgBcCBYICgB7
CBYICgCUCBYICgCtCBYICgDICBYICgDjCBYICgD8CBYICgA1CRUJCgBVCRUJCgC4CRsBCgDlCRsB
CgDsCRsBGgBgCjgKGgCHCjgKCwCXCgAAGgDHCjgKCgDzChsBBgD7CtQACgAtCxsBCgBVC0kLCgCA
C3YLCgCNC3YLCgCsCxsBCgC7CxsBHgAgDPcLCgCCDBsBCgCYDBsBFgCtDI8FFgDMDI8FCgDkDBsB
CgAtDRINCgA6DRINCgBhDU4NFgCHDY8FFgCtDY8FCgDcDRsBCgAdDkkLCgCjDpAOCgDADhsBCgDF
DhsBCgDpDhYIDgAVD/8ODgAuD/8OCgBDDxUJAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEA
EAA/AAAACQABABYAAQAQAE0AAAANAAMAGgABABAAWQAAAA0ABAAbAAEAEABjAAAADAAFACMAAAAQ
AG4AeAANAAcALwAAARAArgB4ABEACQAzAAYATQBKAAYAWQBOAAEAgARmAAEAgARmAFGAZgVwAAEA
cQV4ABEAiAasABEAtQawABEA+QbOAFAgAAAAAIYYlAETAAEAWyAAAAAAhgilAR0ABAB1IAAAAACG
CLUBIgAEAH8gAAAAAIYIxQEoAAUAiCAAAAAAhgjcASwABQCfIAAAAACGCPMBHQAGALkgAAAAAIYI
BQIoAAYAwiAAAAAAhggeAjEABgDXIAAAAACGCCoCKAAGAOAgAAAAAIYIPQIxAAYA9SAAAAAAhghL
AigABgD+IAAAAACGCGACMQAGABMhAAAAAIYIdgIoAAYAHCEAAAAAhgiTAjUABgAxIQAAAACGCKQC
KAAGADohAAAAAIYIvAI1AAYATyEAAAAAhgjNAigABgBYIQAAAACGCOUCNQAGAG0hAAAAAIYI/wIo
AAYAdiEAAAAAhgAgAygABgB+IQAAAACGACgDKAAGAIYhAAAAAIYYlAFSAAYApiEAAAAAxgBIBFYA
BgDLIQAAAADGAVUEYAAKAN4hAAAAAMYBaQRgAAsA4CEAAAAAhhiUAWoADADvIQAAAACGGJQBagAN
AP4hAAAAAIYIkAQoAA4AJCIAAAAAhgiaBDUADgBKIgAAAACGCLAENQAOAHAiAAAAAIYIxwQ1AA4A
liIAAAAAhgjcBDUADgC8IgAAAACGCPEENQAOAOIiAAAAAIYI/gQ1AA4ACCMAAAAAxgB4BVIADgAh
IwAAAADGAIMFUgAOACwjAAAAAMYAaQRgAA4AcCUAAAAAlgCuBXsADwAQJgAAAACWAMEFgwARAHAm
AAAAAJYA2gWMABUAnCYAAAAAlgDzBZIAFwDIJgAAAACWAP8FlwAYALgnAAAAAJYAFQadABkAJCsA
AAAAlgAxBqQAGwB8KwAAAACWAE8GnQAeADwtAAAAAIYYlAFSACAARC0AAAAAgxiUAVIAIABMLQAA
AACTCMUGtAAgAIUtAAAAAJMI2Qa5ACAAjC0AAAAAkwjlBr4AIACULQAAAACWCAkH0gAhAKctAAAA
AIYYlAFSACEAmy0AAAAAkRheD/ECIQAAAAEAHQcAAAIAJAcAAAMAOAcAAAEAQgcAAAEAQgcAAAEA
SAcAAAIAUAcAAAMAHQcAAAQAOAcAAAEAHQcAAAEAWgcAAAEAXgcAAAEAXgcAAAEAWgcAAAEAaAcA
AAIAbwcAAAEAaAcAAAIAbwcAAAMAfgcAAAQAjQcAAAEAnQcAAAIApwcAAAEAnQcAAAEAsgcAAAEA
aAcAAAIAuwcAAAEAaAcAAAIAuwcAAAMAygcAAAEAaAcAAAIA2QcAAAEAQgdhAJQB3ABpAJQB3ABx
AJQB3AB5AJQB3ACBAJQB3ACJAJQB3ACRAJQB3ACZAJQB3AChAJQB3ACpAJQB3ACxAJQB4QC5AJQB
UgAJAJQBEwAJAB0H5gAJACQH6gApAJcJ7gAJAKAJ8wAJAKkJ+QAJALAJ4QDBAJQB3AApANIJ/gAp
ANsJAwEJACADKAAJACgDKAARAJQBUgDJAP0JCAERAAQKDwEZAJQBUgARAHEKFQHZAJcJGgERALIK
IAHhAN8KJQEBAZQBUgARAHgFUgARAIMFUgBJAJQBUgA5ACILMAEJATULNAE5AD0LOQERAV4LQAER
AdsJRgHJAGoLNQDJAG8LTAEZAZQBUgEhAZQLUgAhAZoLWAFJAKcLXQEpAbILNQAZALILNQAxAccL
ZAHJAG8LaAERADkMbwE5AU8MdQERAV8MgAE5AGgMUgA5AHYMUgFBAYwMNQDJAG8LhgFJAZQB3ABJ
ALgMqQFBANgMrwFhAfMMtgEMAJQBxQFZAW0N0AF5AXsN1gFBAJ4N2gGBAboN4AFBAMUNNQAMAM8N
5wF5AdMNKACRAegNUgAMAPAN7wFBAPwN3ABJAAYO4AGBARYOEwKZAZQBUgCZASsOJQKZASsONALJ
ADgOcACZAZQB3ABZAT4OPAKZARYOQAKZASILPAKZAUgORwLJAE8OZALJAFsOkQJBAGkOlgJBAHoO
NQCZAYgOnAKhAZQBUgCpAdcOxQKpAfIOzgJRAJQB1ALBAZQB4QLRAZQBUgAhAJQBUgAOABQAcwAu
ABsAbQMuAGMAkwMuAAsA9QIuABMAPQMuACMAbQMuACsAbQMuADMAPQMuADsAcwMuAEMAbQMuAFsA
igPDAAsBKwHjANMCKwEhAfsCKwEJA/MC6AIpA/MC6AKOAfgBHAIuAk8CagKIAqQC3AICAAEABQAR
AAcAGAAIABoAAAA0AzkAAABAAz4AAABTAzkAAABhAz4AAAB2A0IAAAB+Az4AAACNA0IAAACXAz4A
AACoA0IAAAC6Az4AAADTA0YAAADgAz4AAAD0A0YAAAABBD4AAAAVBEYAAAArBD4AAAAJBT4AAAAP
BUYAAAAhBUYAAAA0BUYAAABFBUYAAABWBUYAAABfBUYAAAB4BsQAAADxBskAAAAVB9cAAgACAAMA
AQADAAMAAgAEAAUAAQAFAAUAAgAGAAcAAgAHAAkAAgAIAAsAAgAJAA0AAgAKAA8AAgALABEAAgAM
ABMAAgANABUAAgAOABcAAgAPABkAAgAQABsAAgARAB0AAgASAB8AAgATACEAAgAcACMAAgAdACUA
AgAeACcAAgAfACkAAgAgACsAAgAhAC0AAgAiAC8AAgAwADEAAgAxADMAAQAyADMAAgAzADUAvAEE
gAAAAQAAAKUWFWEAAAAAAABzCQAADAAAAAAAAAAAAAAAAQC3AAAAAAAEAAAAAAAAAAAAAAAKABIB
AAAAAAQAAAAAAAAAAAAAAAoAGwEAAAAADAAAAAAAAAAAAAAAAQBWAQAAAAAEAAAAAAAAAAAAAAAK
AI8FAAAAAAwAAAAAAAAAAAAAAAEAFQoAAAAADAAAAAAAAAAAAAAAAQDTCwAAAAAAAAAAAQAAAGUP
AAAAAAA8TW9kdWxlPgBTQ181Qzc1Qzg1MzVBRTE0MTZGOEVERURERTlCNjFCRUYzMi5kbGwASW5w
dXQwQnVmZmVyAFVzZXJDb21wb25lbnQAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFNjcmlwdE1haW4A
UmVzb3VyY2VzAFNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNzcHJvai5Qcm9w
ZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0QnVmZmVyAFNjcmlwdENvbXBvbmVudABtc2Nvcmxp
YgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1
dE5hbWVNYXAALmN0b3IAQmxvYkNvbHVtbgBnZXRfQ3JpdGVyaWFTUUwAc2V0X0NyaXRlcmlhU1FM
AGdldF9Dcml0ZXJpYVNRTF9Jc051bGwAc2V0X0NyaXRlcmlhU1FMX0lzTnVsbABnZXRfWE1MU3Fs
UXVlcnlFQwBnZXRfWE1MU3FsUXVlcnlFQ19Jc051bGwAZ2V0X0RpbUVDSUQAZ2V0X0RpbUVDSURf
SXNOdWxsAGdldF9EaW1Qb29sSUQAZ2V0X0RpbVBvb2xJRF9Jc051bGwAZ2V0X0RpbU9yZ2FuaXNh
dGlvbklkAGdldF9EaW1PcmdhbmlzYXRpb25JZF9Jc051bGwAZ2V0X0VDUGFzc05vQ29kZQBnZXRf
RUNQYXNzTm9Db2RlX0lzTnVsbABnZXRfQ3JpdGVyaWFOYW1lAGdldF9Dcml0ZXJpYU5hbWVfSXNO
dWxsAGdldF9Dcml0ZXJpYVRhYmxlVHlwZUNvZGUAZ2V0X0NyaXRlcmlhVGFibGVUeXBlQ29kZV9J
c051bGwATmV4dFJvdwBFbmRPZlJvd3NldABDcml0ZXJpYVNRTABDcml0ZXJpYVNRTF9Jc051bGwA
WE1MU3FsUXVlcnlFQwBYTUxTcWxRdWVyeUVDX0lzTnVsbABEaW1FQ0lEAERpbUVDSURfSXNOdWxs
AERpbVBvb2xJRABEaW1Qb29sSURfSXNOdWxsAERpbU9yZ2FuaXNhdGlvbklkAERpbU9yZ2FuaXNh
dGlvbklkX0lzTnVsbABFQ1Bhc3NOb0NvZGUARUNQYXNzTm9Db2RlX0lzTnVsbABDcml0ZXJpYU5h
bWUAQ3JpdGVyaWFOYW1lX0lzTnVsbABDcml0ZXJpYVRhYmxlVHlwZUNvZGUAQ3JpdGVyaWFUYWJs
ZVR5cGVDb2RlX0lzTnVsbABQcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBf
UHJvY2Vzc0lucHV0Um93AFBhcmVudENvbXBvbmVudABnZXRfREVCVUcAZ2V0X0RpbU9yZ2FuaXNh
dGlvbklEAGdldF9EaW1SZXBvcnRpbmdEYXRlSUQAZ2V0X0RpbVNvdXJjZVRydXN0SUQAZ2V0X0Rp
bVRhcmdldFRydXN0SUQAZ2V0X0VDUGFzc05vAGdldF9Qb29sSWQAREVCVUcARGltT3JnYW5pc2F0
aW9uSUQARGltUmVwb3J0aW5nRGF0ZUlEAERpbVNvdXJjZVRydXN0SUQARGltVGFyZ2V0VHJ1c3RJ
RABFQ1Bhc3NObwBQb29sSWQAX0VuZE9mTGluZQBfREVCVUcAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBTeXN0ZW0uWG1sAFhtbE5vZGUAWG1sRG9jdW1lbnQAR2V0UGFyYW1ldGVyQnlOYW1lAFVwZGF0
ZVBhcmFtZXRlckF0dHJpYnV0ZQBHZXRPcGVyYXRvcldpdGhQYXJhbWV0ZXIAR2V0T3BlcmF0b3IA
U2VsZWN0ZWRJdGVtc1RvU3RyaW5nAEdldFRTUUxEZWNsYXJlSGVhZGVyRnJvbVhNTABHZXRUU1FM
RXhlY3V0YWJsZVF1ZXJ5RnJvbVhNTABHZXRUU1FMUXVlcnlCb2R5RnJvbVhNTABTeXN0ZW0uUmVz
b3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBD
dWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0
AEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0
TmFtZQBSb3cAQ29tcG9uZW50AFhtbERvYwBzUGFyYW1ldGVyTmFtZQBzQXR0cmlidXRlTmFtZQBz
QXR0cmlidXRlVmFsdWUAc09wZXJhdG9yAHNQYXJhbWV0ZXIAeG1sUGFyYW0Ac0xpbmVEZWxpbWl0
ZXIAc1F1ZXJ5Tm9kZVBhdGgAc05vZGVQYXRoAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ181Qzc1Qzg1MzVBRTE0MTZGOEVERURERTlC
NjFCRUYzMgBnZXRfSXRlbQBzZXRfSXRlbQBJc051bGwAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAEdldEludDY0AEdldFN0cmluZwBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVh
bHMAR2V0Q29sdW1uSW5kZXhlcwBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRTVmFyaWFibGVzMTAwAGdl
dF9SZWFkT25seVZhcmlhYmxlcwBJRFRTVmFyaWFibGUxMDAAU2NyaXB0Q29tcG9uZW50RXZhbENv
bnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0VmFs
dWVXaXRoQ29udGV4dABCb29sZWFuAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAGdldF9MZW5ndGgAQ29udmVydABUb0ludDMyAEdldEJsb2JEYXRhAFN5c3RlbS5UZXh0AEVu
Y29kaW5nAGdldF9Vbmljb2RlAFRyaW0ARm9ybWF0AFN5c3RlbS5JTwBNZW1vcnlTdHJlYW0AU3Ry
ZWFtAEZsdXNoAHNldF9Qb3NpdGlvbgBMb2FkAEludDY0AFRvU3RyaW5nAEVudmlyb25tZW50AGdl
dF9OZXdMaW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdl
dF9Db21wb25lbnRNZXRhRGF0YQBGaXJlSW5mb3JtYXRpb24AR2V0Qnl0ZXMAUmVzZXRCbG9iRGF0
YQBBZGRCbG9iRGF0YQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAQXBwbGljYXRpb25FeGNlcHRpb24A
WG1sRWxlbWVudABnZXRfRG9jdW1lbnRFbGVtZW50AFhtbE5vZGVMaXN0AFNlbGVjdE5vZGVzAFN0
cmluZ0NvbXBhcmVyAGdldF9JbnZhcmlhbnRDdWx0dXJlSWdub3JlQ2FzZQBTeXN0ZW0uQ29sbGVj
dGlvbnMuR2VuZXJpYwBEaWN0aW9uYXJ5YDIASUVxdWFsaXR5Q29tcGFyZXJgMQBTeXN0ZW0uQ29s
bGVjdGlvbnMASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABYbWxBdHRyaWJ1
dGVDb2xsZWN0aW9uAGdldF9BdHRyaWJ1dGVzAFhtbEF0dHJpYnV0ZQBnZXRfSXRlbU9mAGdldF9W
YWx1ZQBBZGQATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBUcnlHZXRWYWx1ZQBzZXRfVmFs
dWUAQ3JlYXRlQXR0cmlidXRlAEFwcGVuZABTdHJpbmdCdWlsZGVyAEFwcGVuZEZvcm1hdABFbXB0
eQBnZXRfQ291bnQAUmVtb3ZlAG9wX0VxdWFsaXR5AElzTnVsbE9yRW1wdHkAU2VsZWN0U2luZ2xl
Tm9kZQBnZXRfSW5uZXJUZXh0AFJlcGxhY2UAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQAuY2N0b3IAU0NfZmQwYmFiNjcxZmY0NDYyNjg0NGQzYmM2OWEyZDgyYmUuY3Nwcm9qLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAC0QARQBCAFUARwAAI0QAaQBtAE8AcgBn
AGEAbgBpAHMAYQB0AGkAbwBuAEkARAAAJUQAaQBtAFIAZQBwAG8AcgB0AGkAbgBnAEQAYQB0AGUA
SQBEAAAhRABpAG0AUwBvAHUAcgBjAGUAVAByAHUAcwB0AEkARAAAIUQAaQBtAFQAYQByAGcAZQB0
AFQAcgB1AHMAdABJAEQAABFFAEMAUABhAHMAcwBOAG8AAA1QAG8AbwBsAEkAZAAAAQBXPAA/AHgA
bQBsACAAdgBlAHIAcwBpAG8AbgA9ACIAMQAuADAAIgAgAGUAbgBjAG8AZABpAG4AZwA9ACIAdQB0
AGYALQAxADYAIgAgAD8APgB7ADAAfQABI0QAaQBtAE8AcgBnAGEAbgBpAHMAYQB0AGkAbwBuAEkA
ZAAAC1YAYQBsAHUAZQAAJUQAaQBtAFIAZQBwAG8AcgB0AGkAbgBnAEQAYQB0AGUASQBkAAATRABp
AG0AUABvAG8AbABJAGQAAA9EAGkAbQBFAEMASQBkAAAFDQAKAAAPLwAvAFEAdQBlAHIAeQAAOXsA
MAB9ACAAewAxAH0AIAB7ADIAfQAgAHsAMwB9ACAAewA0AH0AIAB7ADUAfQA6ACAAewA2AH0AADFG
AGEAYwB0AEwAbwBhAG4AUgBlAHQAdQByAG4AIABFAEMAIABUAG8AIABYAE0ATAAAE3sAMAB9AHsA
MQB9AHsAMgB9AABDLwAvAFAAYQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABlAD0AJwBTAHEAbABQ
AGEAcgBhAG0AZQB0AGUAcgAnAF0AAQlOAGEAbQBlAAARIAB7ADAAfQAgAHsAMQB9AAALIAB7ADAA
fQAgAAAjKAAnAG4AbwBuAGUAJwApACAAQQBuAGQAIAAxAD0AMQAgAAErLgAvAC8AUwBlAGwAZQBj
AHQAZQBkAEkAdABlAG0AcwAvAEkAdABlAG0AAAMoAAARTgAnAHsAMAB9ACcALAAgAAEDKQAAE1MA
cQBsAEQAYgBUAHkAcABlAAARRABhAHQAZQBUAGkAbQBlAAAPVgBhAHIAQwBoAGEAcgAAEU4AVgBh
AHIAQwBoAGEAcgAAX0QAZQBjAGwAYQByAGUAIABAAHsAMAB9ACAAewAxAH0AIAA9ACAAQwBvAG4A
dgBlAHIAdAAoAHsAMgB9ACwAIAAnAHsAMwB9ACcALAAgADEAMgAwACkAIAB7ADQAfQABaUQAZQBj
AGwAYQByAGUAIABAAHsAMAB9ACAAewAxAH0AKABtAGEAeAApACAAPQAgAEMAbwBuAHYAZQByAHQA
KAB7ADIAfQAoAG0AYQB4ACkALAAgACcAewAzAH0AJwApACAAewA0AH0AAVVEAGUAYwBsAGEAcgBl
ACAAQAB7ADAAfQAgAHsAMQB9ACAAPQAgAEMAbwBuAHYAZQByAHQAKAB7ADIAfQAsACAAJwB7ADMA
fQAnACkAIAB7ADQAfQABSS8ALwBQAGEAcgBhAG0AZQB0AGUAcgBbAEAAVAB5AHAAZQA9ACcAUgBl
AHAAbABhAGMAZQBPAHAAZQByAGEAdABvAHIAJwBdAAERTwBwAGUAcgBhAHQAbwByAABFLwAvAFAA
YQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABlAD0AJwBSAGUAcABsAGEAYwBlAEwAbwBvAGsAdQBw
ACcAXQABf1MAQwBfAGYAZAAwAGIAYQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAzAGIA
YwA2ADkAYQAyAGQAOAAyAGIAZQAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAACaQ9MsK2bxMox4FIBkWGqQACImEXc2AgMyRCLd6XFYZNOCJ
CSADARIVHQgSGQQgABIdBSABARIdAyAAAgQgAQECAyAACgMgAA4EKAASHQMoAAIDKAAKAygADgMG
EhADBhIUAyAAAQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJAgYOBA0ACgACBgIHAAISIRIlDggA
BAISJQ4ODgUAAg4ODgQAAQ4OBQABDhIhBgACDhIlDgcAAw4SJQ4OAwYSKQMGEi0EAAASKQQAABIt
BQABARItBAgAEikECAASLQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBCABHAgFIAIB
CBwEIAECCAQgAQoIBCABDggGIAICDhFpBSABHQgIBCAAEm0FIAEScRwEAAASdQUgARwSeQQBAAAA
AyAACQQAAQgJBiACHQUICAUAABKAiQUgAQ4dBQUAAg4OHAUgAQEdBQQgAQEKBiABARKAkQMAAA4G
AAIODh0cBSAAEoCdCiAGAQgODg4IEAIFIAEdBQ4HAAQODhwcHBoHEA4CEiUdBQ4SgI0OHQUSgKEO
CgoKHRwKCgUgABKAqQYgARKArQ4FAAASgLEIFRKAtQIOEiEKIAEBFRKAuQETAAUgABKAvQMgABwF
IAASgMEGIAESgMUOByACARMAEwEIIAICEwAQEwEaBwcSIRKAqRKArRUSgLUCDhIhEiESgL0SgMkI
IAESgMUSgMUIBwMCEiESgMUIIAMSgM0OHBwFBwESgM0HIAISgM0OHAMgAAgGIAESgM0OByACEoDN
CAgUBwcOEoDNEoCtEiESgKESgL0SgMkFAAICDg4dBwwSgM0SgK0SIQ4SgKESgL0OHRwdHB0cHRwS
gMkIBwISgM0SgKEEAAECDgUgARIhDgcgAhKAzQ4OIAcNDhIhEoDNEoCtEiEOEiEOEoChEoC9EoDJ
EoC9EoDJCAABEoDVEYDZBSAAEoDdByACAQ4SgN0EBwESKQYgAQERgOUIAQACAAAAAAADAAABRwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0LwEAKlNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNzcHJv
agAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEyAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBAABwUwAAAAAAAAAAAACOUwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
gFMAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAANADAAAAAAAA
AAAAANADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAV
YaUWAAABABVhpRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQwAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAMAwAAAQAwADAAMAAwADAANABiADAAAACAACsA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZgBkADAAYgBhAGIANgA3
ADEAZgBmADQANAA2ADIANgA4ADQANABkADMAYgBjADYAOQBhADIAZAA4ADIAYgBlAC4AYwBzAHAA
cgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADcAOQA3
AC4AMgA0ADgANQAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUA
QwA3ADUAQwA4ADUAMwA1AEEARQAxADQAMQA2AEYAOABFAEQARQBEAEQARQA5AEIANgAxAEIARQBG
ADMAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAyAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAQwBfADUAQwA3ADUAQwA4ADUAMwA1AEEARQAxADQAMQA2AEYAOABFAEQA
RQBEAEQARQA5AEIANgAxAEIARQBGADMAMgAuAGQAbABsAAAAeAArAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYANAA0ADYAMgA2ADgANAA0AGQA
MwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAOQA3AC4AMgA0ADgANQAzAAAAAABIAA8A
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAOQA3AC4AMgA0
ADgANQAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAACgMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_5c75c8535ae1416f8ededde9b61bef32</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::DEBUG,User::DimOrganisationID,User::DimReportingDateID,User::DimSourceTrustID,User::DimTargetTrustID,User::ECPassNo,User::PoolId</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">31896aa71586e11e7ad3adeabb35dbf3</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          usageType="readWrite" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[DimPoolID]"
                          cachedDataType="i4"
                          cachedName="DimPoolID"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimPoolID]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[DimOrganisationId]"
                          cachedDataType="i8"
                          cachedName="DimOrganisationId"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[DimOrganisationId]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0].Columns[CriteriaTableTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTableTypeCode"
                          lineageId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output].Columns[CriteriaTableTypeCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result.Paths[ECResult]"
                  endId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR.Inputs[OLE DB Destination Input]"
                  name="ECResult"
                  startId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Outputs[ECResult]" />
                <path
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result.Paths[OLE DB Source Output]"
                  endId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\FactLoanReturnResult\Apply Loan Return Result.Paths[Output 0]"
                  endId="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Package Initialization"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:DTSID="{00E95A9D-771A-426A-AF50-3235F8C2A9C1}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Package Initialization"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{B6CEFC91-BB41-4F84-96C2-95702376933E}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d00adcc592cb4d0f81f18b8103908f33"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::LogPath,User::OLEDBConnString_ALR">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="st_d00adcc592cb4d0f81f18b8103908f33.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_d00adcc592cb4d0f81f18b8103908f33.csproj</RootNamespace>
    <AssemblyName>ST_d00adcc592cb4d0f81f18b8103908f33.csproj</AssemblyName>
    <ProjectGuid>{F9E2208F-D363-4B2A-9A77-2C13975665FC}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
//using System.Windows.Forms;
using System.IO;

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            string sMsg = null;
            string sLogPath = Dts.Variables["LogPath"].Value.ToString();

            if (!Directory.Exists(sLogPath))
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                sMsg = string.Format("Package Init: Log Path {0} does not exist", sLogPath);
                throw new Exception(sMsg);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_d00adcc592cb4d0f81f18b8103908f33</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_d00adcc592cb4d0f81f18b8103908f33</msb:DisplayName>
		<msb:ProjectId>{355691DD-1AAA-44F4-8DF6-D9EA005FF1BA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_d00adcc592cb4d0f81f18b8103908f33.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Settings.get_Default():ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Sett" +
    "ings")]

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d00adcc592cb4d0f81f18b8103908f33.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d00adcc592cb4d0f81f18b8103908f33.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d00adcc592cb4d0f81f18b8103908f33.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANUdaFYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA7i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJguAABTAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LgAAAAAAAEgAAAACAAUA4CEAALgMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBWAAAAAgAAERQKAigWAAAKbxcAAApygQAAcG8YAAAKbxkAAApv
GgAACgsHKBsAAAotHwIoFgAAChdvHAAACnKRAABwBygdAAAKCgZzHgAACnoCKBYAAAoWbxwAAAoq
HgIoHwAACioAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADkAwAAI34AAFAEAAD8BQAAI1N0cmluZ3MAAAAATAoAAOgAAAAjVVMANAsAABAAAAAjR1VJRAAA
AEQLAAB0AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIAAAAAUAAAAGAAAA
CQAAAAEAAAAfAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGANYAzwAKAPIA3QAOAFIBKQEGAG4BzwAGAIQBcwEGALUBoAEGAGwCUgIGAJcChQIGAK4C
hQIGAMsChQIGAOoChQIGAAMDhQIGABwDhQIGADcDhQIGAFIDhQIGAGsDhQIGAKQDhAMGAMQDhAMG
APUD4gMGABIEzwAGABcEzwAGADsEhQIKAGcEUQQKAIAEUQQGAJUEhAMOALcEKQEOANkEKQESADIF
EgUSAEoFEgUGAHkFbwUGAJkFzwAGAKcFzwAAAAAAAQAAAAAAAQABAAAAEAA5AEMABQABAAEAAAEQ
AHkAQwAJAAMABQABABAAggCNAA0ABAAIAAMBAAC4AAAAEQAEAAoAEQCUARMAEQDBARcAEQALAjkA
BgY0AkcAVoA8AkoAVoBEAkoAUCAAAAAAgxjRARsAAQBYIAAAAACTCNcBHwABAJEgAAAAAJMI6wEk
AAEAmCAAAAAAkwj3ASkAAQCgIAAAAACWCBsCPQACALMgAAAAAIYY0QEbAAIApyAAAAAAkRiwBIkA
AgC8IAAAAACGAC8CGwACAB4hAAAAAIYY0QEbAAIAAAABAEwCOQDRAVgAQQDRAVgASQDRAVgAUQDR
AVgAWQDRAVgAYQDRAVgAaQDRAVgAcQDRAVgAeQDRAVgAgQDRAVgAiQDRAV0AkQDRARsAmQDRARsA
CQDRARsAoQApBGIAoQBEBGkAKQDRAW4AuQDRAXoAyQDRARsAEQDRARsA0QDRARsAGQDrBI0A2QA8
BZIA4QBTBZcA6QBcBZ0ACQBmBaEA8QCDBaUA2QCKBV0A+QCgBaoAAQHRAVgAGQDRARsACAAUAE4A
CAAYAFMAKQCTAIAALgAbAC0BLgAjAC0BLgBjAFMBLgALALUALgATAP0ALgAzAP0ALgArAC0BLgA7
ADMBLgBDAC0BLgBbAEoBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCwAAIAAQADAAMAAACEAS8A
AAADAjQAAAAnAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAC9FqqPAAAAAAAAjQAA
AAQAAAAAAAAAAAAAAAEAxgAAAAAABAAAAAAAAAAAAAAAAQDPAAAAAAAMAAAAAAAAAAAAAAAKAAoB
AAAAAAwAAAAAAAAAAAAAAAoA8wQAAAAAAAAAAAEAAACxBQAABQAEAAAAAAAAPE1vZHVsZT4AU1Rf
ZDAwYWRjYzU5MmNiNGQwZjgxZjE4YjgxMDM5MDhmMzMuY3Nwcm9qLmRsbABSZXNvdXJjZXMAU1Rf
ZDAwYWRjYzU5MmNiNGQwZjgxZjE4YjgxMDM5MDhmMzMuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGlu
Z3MAU2NyaXB0TWFpbgBTVF9kMDBhZGNjNTkyY2I0ZDBmODFmMThiODEwMzkwOGYzMy5jc3Byb2oA
U2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9u
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNl
TWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3Rv
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVm
YXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFp
bHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0
cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJ
U1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVl
AFRvU3RyaW5nAFN5c3RlbS5JTwBEaXJlY3RvcnkARXhpc3RzAHNldF9UYXNrUmVzdWx0AFN0cmlu
ZwBGb3JtYXQARXhjZXB0aW9uAFNUX2QwMGFkY2M1OTJjYjRkMGY4MWYxOGI4MTAzOTA4ZjMzLmNz
cHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAB/UwBUAF8AZAAwADAAYQBkAGMA
YwA1ADkAMgBjAGIANABkADAAZgA4ADEAZgAxADgAYgA4ADEAMAAzADkAMAA4AGYAMwAzAC4AYwBz
AHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAA9MAG8A
ZwBQAGEAdABoAABTUABhAGMAawBhAGcAZQAgAEkAbgBpAHQAOgAgAEwAbwBnACAAUABhAHQAaAAg
AHsAMAB9ACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AAAAAAA0x3/Cy95aTKPZ9HOZfFSj
AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZ
AwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIB
DhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBAABAg4F
AAIODhwEBwIODkcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTVF9kMDBhZGNjNTkyY2I0ZDBmODFmMThiODEw
MzkwOGYzMy5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAwC4AAAAAAAAAAAAA3i4AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAANAuAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPADAAAAAAAAAAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCqj70WAAABAKqPvRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAA
MAAwADAANABiADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZAAwADAAYQBkAGMAYwA1ADkAMgBjAGIANABkADAAZgA4ADEAZgAxADgAYgA4ADEAMAAzADkA
MAA4AGYAMwAzAC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA1ADgAMgAxAC4AMwA2ADcANwA4AAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAVABfAGQAMAAwAGEAZABjAGMANQA5ADIAYwBiADQAZAAwAGYAOAAxAGYAMQA4
AGIAOAAxADAAMwA5ADAAOABmADMAMwAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwA
ZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAw
ADEAMgAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBkADAA
MABhAGQAYwBjADUAOQAyAGMAYgA0AGQAMABmADgAMQBmADEAOABiADgAMQAwADMAOQAwADgAZgAz
ADMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGQAMAAwAGEAZABjAGMANQA5ADIAYwBiADQAZAAwAGYAOAAxAGYAMQA4AGIAOAAx
ADAAMwA5ADAAOABmADMAMwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAyADEALgAzADYANwA3ADgAAAAAAEgADwABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAyADEALgAzADYANwA3ADgA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update ApplyECDate"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6CEA4F24-037C-42AD-823D-A5E2C674CE42}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update ApplyECDate"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{603E36D9-43AD-4C2F-BCF7-4E42DBB03E1C}"
          SQLTask:SqlStatementSource="update tblDimPool&#xA;set ApplyECDate = GETDATE()&#xA;where DimPoolID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::PoolId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{85BED77A-5A19-41B0-9571-41E5A7993DFF}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\FactLoanECResult" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{ADD5DB04-1E56-4FDD-9E02-F4BEDD08E0D2}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\FactCustomerECResult" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{ED84C22E-37DC-420B-9AFF-673E83C1BD0B}"
      DTS:From="Package\FactCustomerECResult"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Update ApplyECDate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{AF486983-4121-4D42-B2BF-2A55532B166D}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\FactLoanReturnResult" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{BF284E12-116A-424D-8908-06A661E5362A}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\FactLoanCustomerECResult" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{7F835A45-803B-4F17-9241-9E3719C7DE70}"
      DTS:From="Package\FactLoanReturnResult"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Update ApplyECDate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{93701FBB-8BD1-4084-A266-0D546943472A}"
      DTS:From="Package\FactLoanECResult"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Update ApplyECDate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{2B591CB0-6054-4242-8DB3-48575CF14664}"
      DTS:From="Package\FactLoanCustomerECResult"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Update ApplyECDate" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="207,42"
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer"
          TopLeft="36,90.1320754716981" />
        <NodeLayout
          Size="230,42"
          Id="Package\FactCustomerECResult\Delete FactCustomer EC Results"
          TopLeft="38.9811320754717,8.47169811320755" />
        <EdgeLayout
          Id="Package\FactCustomerECResult.PrecedenceConstraints[Constraint]"
          TopLeft="153.981132075472,50.4716981132076">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.4811320754717,39.6603773584906"
              Start="0,0"
              End="-14.4811320754717,32.1603773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8301886792453" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.8301886792453"
                    Point2="0,19.8301886792453"
                    Point3="-4,19.8301886792453" />
                  <mssgle:LineSegment
                    End="-10.4811320754717,19.8301886792453" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.4811320754717,19.8301886792453"
                    Point2="-14.4811320754717,19.8301886792453"
                    Point3="-14.4811320754717,23.8301886792453" />
                  <mssgle:LineSegment
                    End="-14.4811320754717,32.1603773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="274,189"
          Size="274,233"
          Id="Package\FactCustomerECResult"
          TopLeft="882.084905660377,216.047169811321" />
        <NodeLayout
          Size="230,42"
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer"
          TopLeft="7.66037735849056,8.47169811320755" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="260,146"
          Size="260,190"
          Id="Package\FactLoanCustomerECResult"
          TopLeft="574.27358490566,167.047169811321" />
        <NodeLayout
          Size="192,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan"
          TopLeft="11.8867924528302,82.1320754716981" />
        <NodeLayout
          Size="192,44"
          Id="Package\FactLoanECResult\Delete FactLoan EC Results"
          TopLeft="9.88679245283015,8.47169811320755" />
        <EdgeLayout
          Id="Package\FactLoanECResult.PrecedenceConstraints[Constraint]"
          TopLeft="105.735849056604,52.3962264150943">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2,29.7358490566038"
              Start="0,0"
              End="2,22.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8679245283019" />
                  <mssgle:LineSegment
                    End="2,14.8679245283019" />
                  <mssgle:LineSegment
                    End="2,22.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="220,143"
          Size="220,187"
          Id="Package\FactLoanECResult"
          TopLeft="144.084905660377,51.084905660377" />
        <NodeLayout
          Size="220,44"
          Id="Package\FactLoanReturnResult\Apply Loan Return Result"
          TopLeft="7.66037735849056,8.47169811320754" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="242,141"
          Size="242,185"
          Id="Package\FactLoanReturnResult"
          TopLeft="297.537735849057,270.028301886792" />
        <NodeLayout
          Size="223,44"
          Id="Package\Package Initialization"
          TopLeft="790.556603773585,5.5" />
        <NodeLayout
          Size="236,44"
          Id="Package\Update ApplyECDate"
          TopLeft="733.915094339623,661.047169811321" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="790.556603773585,27.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-426.471698113208,117.084905660377"
              Start="0,0"
              End="-418.971698113208,117.084905660377">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-389.235849056604,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-389.235849056604,0"
                    Point2="-393.235849056604,0"
                    Point3="-393.235849056604,4" />
                  <mssgle:LineSegment
                    End="-393.235849056604,113.084905660377" />
                  <mssgle:CubicBezierSegment
                    Point1="-393.235849056604,113.084905660377"
                    Point2="-393.235849056604,117.084905660377"
                    Point3="-397.235849056604,117.084905660377" />
                  <mssgle:LineSegment
                    End="-418.971698113208,117.084905660377" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="955.806603773585,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.278301886792,166.547169811321"
              Start="0,0"
              End="63.278301886792,159.047169811321">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.827763997659" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.827763997659"
                    Point2="0,56.827763997659"
                    Point3="4,56.827763997659" />
                  <mssgle:LineSegment
                    End="59.278301886792,56.827763997659" />
                  <mssgle:CubicBezierSegment
                    Point1="59.278301886792,56.827763997659"
                    Point2="63.278301886792,56.827763997659"
                    Point3="63.278301886792,60.827763997659" />
                  <mssgle:LineSegment
                    End="63.278301886792,159.047169811321" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="1019.08490566038,449.047169811321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-98.769811320754,212"
              Start="0,0"
              End="-98.769811320754,204.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,145.260143198091" />
                  <mssgle:CubicBezierSegment
                    Point1="0,145.260143198091"
                    Point2="0,149.260143198091"
                    Point3="-4,149.260143198091" />
                  <mssgle:LineSegment
                    End="-94.769811320754,149.260143198091" />
                  <mssgle:CubicBezierSegment
                    Point1="-94.769811320754,149.260143198091"
                    Point2="-98.769811320754,149.260143198091"
                    Point3="-98.769811320754,153.260143198091" />
                  <mssgle:LineSegment
                    End="-98.769811320754,204.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="866.223270440252,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-447.685534591195,220.528301886792"
              Start="0,0"
              End="-447.685534591195,213.028301886792">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1539172365125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.1539172365125"
                    Point2="0,37.1539172365125"
                    Point3="-4,37.1539172365125" />
                  <mssgle:LineSegment
                    End="-443.685534591195,37.1539172365125" />
                  <mssgle:CubicBezierSegment
                    Point1="-443.685534591195,37.1539172365125"
                    Point2="-447.685534591195,37.1539172365125"
                    Point3="-447.685534591195,41.1539172365125" />
                  <mssgle:LineSegment
                    End="-447.685534591195,213.028301886792" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="937.889937106918,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-233.616352201258,117.547169811321"
              Start="0,0"
              End="-233.616352201258,110.047169811321">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5212957206944" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.5212957206944"
                    Point2="0,47.5212957206944"
                    Point3="-4,47.5212957206944" />
                  <mssgle:LineSegment
                    End="-229.616352201258,47.5212957206944" />
                  <mssgle:CubicBezierSegment
                    Point1="-229.616352201258,47.5212957206944"
                    Point2="-233.616352201258,47.5212957206944"
                    Point3="-233.616352201258,51.5212957206944" />
                  <mssgle:LineSegment
                    End="-233.616352201258,110.047169811321" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="418.537735849057,455.028301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="433.377358490566,206.018867924529"
              Start="0,0"
              End="433.377358490566,198.518867924529">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,99.0094339622645" />
                  <mssgle:CubicBezierSegment
                    Point1="0,99.0094339622645"
                    Point2="0,103.009433962265"
                    Point3="4,103.009433962265" />
                  <mssgle:LineSegment
                    End="429.377358490566,103.009433962265" />
                  <mssgle:CubicBezierSegment
                    Point1="429.377358490566,103.009433962265"
                    Point2="433.377358490566,103.009433962265"
                    Point3="433.377358490566,107.009433962265" />
                  <mssgle:LineSegment
                    End="433.377358490566,198.518867924529" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="254.084905660377,238.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="540.830188679246,422.962264150944"
              Start="0,0"
              End="540.830188679246,415.462264150944">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,274.824285864868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,274.824285864868"
                    Point2="0,278.824285864868"
                    Point3="4,278.824285864868" />
                  <mssgle:LineSegment
                    End="536.830188679246,278.824285864868" />
                  <mssgle:CubicBezierSegment
                    Point1="536.830188679246,278.824285864868"
                    Point2="540.830188679246,278.824285864868"
                    Point3="540.830188679246,282.824285864868" />
                  <mssgle:LineSegment
                    End="540.830188679246,415.462264150944" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="704.27358490566,357.047169811321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="204.641509433963,304"
              Start="0,0"
              End="204.641509433963,296.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,196.402234636872" />
                  <mssgle:CubicBezierSegment
                    Point1="0,196.402234636872"
                    Point2="0,200.402234636872"
                    Point3="4,200.402234636872" />
                  <mssgle:LineSegment
                    End="200.641509433963,200.402234636872" />
                  <mssgle:CubicBezierSegment
                    Point1="200.641509433963,200.402234636872"
                    Point2="204.641509433963,200.402234636872"
                    Point3="204.641509433963,204.402234636872" />
                  <mssgle:LineSegment
                    End="204.641509433963,296.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\FactCustomerECResult\Apply EC For FactCustomer">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="231,42"
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR"
          TopLeft="5.50000000000003,311.5" />
        <NodeLayout
          Size="181,42"
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR"
          TopLeft="30,5.5" />
        <NodeLayout
          Size="217,42"
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC XML to SQL"
          TopLeft="12,107.5" />
        <NodeLayout
          Size="189,42"
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer\Apply FactCustomer EC"
          TopLeft="26.5,209.5" />
        <EdgeLayout
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer.Paths[Output 0]"
          TopLeft="120.75,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer.Paths[OLE DB Source Output]"
          TopLeft="120.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactCustomerECResult\Apply EC For FactCustomer.Paths[ECResult]"
          TopLeft="121,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC Results to ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FactCustomerECResult\Apply EC For FactCustomer\FactCustomer EC ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="281,42"
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC XML to SQL"
          TopLeft="5.5,85.122641509434" />
        <NodeLayout
          Size="208,42"
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="253,42"
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\Apply FactLoanCustomerECResult EC"
          TopLeft="5.5,164.745283018868" />
        <NodeLayout
          Size="295,42"
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR"
          TopLeft="5.5,244.367924528302" />
        <EdgeLayout
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer.Paths[Output 0]"
          TopLeft="146,127.122641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,37.622641509434"
              Start="0,0"
              End="-14,30.122641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.811320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.811320754717"
                    Point2="0,18.811320754717"
                    Point3="-4,18.811320754717" />
                  <mssgle:LineSegment
                    End="-10,18.811320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="-10,18.811320754717"
                    Point2="-14,18.811320754717"
                    Point3="-14,22.811320754717" />
                  <mssgle:LineSegment
                    End="-14,30.122641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer.Paths[OLE DB Source Output]"
          TopLeft="109.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.5,37.622641509434"
              Start="0,0"
              End="36.5,30.122641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.811320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.811320754717"
                    Point2="0,18.811320754717"
                    Point3="4,18.811320754717" />
                  <mssgle:LineSegment
                    End="32.5,18.811320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="32.5,18.811320754717"
                    Point2="36.5,18.811320754717"
                    Point3="36.5,22.811320754717" />
                  <mssgle:LineSegment
                    End="36.5,30.122641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer.Paths[ECResult]"
          TopLeft="132,206.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21,37.622641509434"
              Start="0,0"
              End="21,30.122641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.811320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.811320754717"
                    Point2="0,18.811320754717"
                    Point3="4,18.811320754717" />
                  <mssgle:LineSegment
                    End="17,18.811320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="17,18.811320754717"
                    Point2="21,18.811320754717"
                    Point3="21,22.811320754717" />
                  <mssgle:LineSegment
                    End="21,30.122641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanCustomerECResult\Apply EC For FactLoanCustomer\FactLoanCustomerECResult EC Results to ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FactLoanECResult\Apply EC For FactLoan">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="206,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR"
          TopLeft="5.5,274.443396226415" />
        <NodeLayout
          Size="178,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR"
          TopLeft="17.5,5.5" />
        <NodeLayout
          Size="185,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL"
          TopLeft="13.9905660377358,87.1603773584906" />
        <NodeLayout
          Size="190,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC"
          TopLeft="11.5,168.820754716981" />
        <EdgeLayout
          Id="Package\FactLoanECResult\Apply EC For FactLoan.Paths[Output 0]"
          TopLeft="106.330188679245,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.7358490566038"
              Start="0,0"
              End="0,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanECResult\Apply EC For FactLoan.Paths[OLE DB Source Output]"
          TopLeft="106.330188679245,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.7358490566038"
              Start="0,0"
              End="0,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanECResult\Apply EC For FactLoan.Paths[ECResult]"
          TopLeft="106.330188679245,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2,61.6981132075471"
              Start="0,0"
              End="2,54.1981132075471">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.8301886792453" />
                  <mssgle:LineSegment
                    End="2,30.8301886792453" />
                  <mssgle:LineSegment
                    End="2,54.1981132075471" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FactLoanReturnResult\Apply Loan Return Result">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="258,44"
          Id="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC XML to SQL"
          TopLeft="5.5,90.1037735849057" />
        <NodeLayout
          Size="181,44"
          Id="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult"
          TopLeft="43.9528301886793,5.5" />
        <NodeLayout
          Size="231,44"
          Id="Package\FactLoanReturnResult\Apply Loan Return Result\Apply FactLoanReturnResult EC"
          TopLeft="18.9716981132076,174.707547169811" />
        <NodeLayout
          Size="232,44"
          Id="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR"
          TopLeft="18.4811320754717,259.311320754717" />
        <EdgeLayout
          Id="Package\FactLoanReturnResult\Apply Loan Return Result.Paths[Output 0]"
          TopLeft="134.292452830189,134.028301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.6792452830189"
              Start="0,0"
              End="0,33.1792452830189">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1792452830189" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanReturnResult\Apply Loan Return Result.Paths[OLE DB Source Output]"
          TopLeft="134.292452830189,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.6792452830189"
              Start="0,0"
              End="0,33.1792452830189">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1792452830189" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanReturnResult\Apply Loan Return Result.Paths[ECResult]"
          TopLeft="134.292452830189,218.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.6792452830189"
              Start="0,0"
              End="0,33.1792452830189">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1792452830189" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanReturnResult\Apply Loan Return Result\FactLoanReturnResult EC Results to ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>