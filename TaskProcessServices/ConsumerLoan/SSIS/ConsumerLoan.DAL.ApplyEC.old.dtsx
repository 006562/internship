<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/2/2012 2:49:17 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AU2104SDVDEV23"
  DTS:CreatorName="TSYDEV\tfs_L048057"
  DTS:DTSID="{D2CD395C-1634-487B-AD50-0E0715CFC688}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="3081"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="ConsumerLoan DAL ApplyEC"
  DTS:PackageType="5"
  DTS:VersionBuild="393"
  DTS:VersionGUID="{C8A6F4B9-0DE8-4E9A-88DB-E1A0BC3B416D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ApplyEC.log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{0010ABD2-C457-49E3-9075-05794D7966FD}"
      DTS:ObjectName="ApplyEC.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogPath] + @[System::PackageName] + "_" +  (DT_WSTR, 4)DATEPART("yyyy", @[System::StartTime]) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mm", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("dd", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("hh", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mi", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("ss", @[System::StartTime]), 2)  +  ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="E:\TSSWCFServices\TaskProcessServices\Poolcut\SecuritisationFiles\LogConsumerLoan DAL ApplyEC_20160611110856.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[IncludedAuditLoans]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{8A472381-DD4F-49C3-94FE-EBAA107BC597}"
      DTS:ObjectName="IncludedAuditLoans">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="20"
              DTS:IndexPosition="1"
              DTS:ObjectName="DimLoanID"
              DTS:DTSID="{2E02705F-94FB-48DC-A44E-F1E81D28592B}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_TargetPool]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{C9472AF5-DC00-4F03-B85C-3F76BBDE250E}"
      DTS:ObjectName="OLEDB_TargetPool">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::OLEDBNativeConnString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=MSSQL;Initial Catalog=SFM_DAL_ConsumerLoan;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="ApplyEC.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{39771EF7-052F-4D68-A4D0-D9C0874B3645}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0E39CEA8-1E31-419A-A297-2033DE85120D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DEBUG">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7598F545-5ED1-4753-BC99-7EC57978A61B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimOrganisationID">
      <DTS:VariableValue
        DTS:DataType="8">2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1AD8376-AC98-4C1B-8942-6590D31949FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimReportingDateID">
      <DTS:VariableValue
        DTS:DataType="8">20150403</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9B121C7F-BBB7-4041-983A-A760062452A9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimSourceTrustID">
      <DTS:VariableValue
        DTS:DataType="8">23</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6269FE9A-A751-437C-8687-10AA128DA314}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DimTargetTrustID">
      <DTS:VariableValue
        DTS:DataType="8">50</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A0C6A24-7D89-4F02-B162-02F389AC5188}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ECPassNo">
      <DTS:VariableValue
        DTS:DataType="8">ECPass1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DC5585F5-534D-4D1A-9CCB-69BF7B1B3BF3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ECRunningDB">
      <DTS:VariableValue
        DTS:DataType="8">SFM_DAL_ConsumerLoan</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A796767-66A2-4C6B-8C11-C7EE8AE9DC80}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ECRunningServer">
      <DTS:VariableValue
        DTS:DataType="8">MSSQL</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2FA51DB0-0048-4EFC-9A2D-4208DE6FFE1B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select  replace(&quot;+&quot;cast('&quot;+@ReportingDate+&quot;' as date)&quot;+&quot;,'-','') as DimReportingDateID&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GetReportingDateID">
      <DTS:VariableValue
        DTS:DataType="8">select  replace(cast('2016-6-01' as date),'-','') as DimReportingDateID</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C617C1C0-0BDB-46F0-B985-6C0DC8E64650}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\TSSWCFServices\TaskProcessServices\Poolcut\SecuritisationFiles\Log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{648D2632-7598-448E-ADE8-DABF619289B2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::ECRunningServer]  + &quot;;Initial Catalog=&quot; + @[User::ECRunningDB] +  &quot;;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBConnString_ALR">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=MSSQL;Initial Catalog=SFM_DAL_ConsumerLoan;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B08C9AB-F2FD-4BE8-AADE-81D61008B6D9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::ECRunningServer]  + &quot;;Initial Catalog=&quot;+ @[User::ECRunningDB]  +&quot;;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OLEDBNativeConnString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=MSSQL;Initial Catalog=SFM_DAL_ConsumerLoan;Provider=SQLNCLI10.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E829266F-E397-484B-B2C8-92C091111CBE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PoolId">
      <DTS:VariableValue
        DTS:DataType="8">10170</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{843A92F4-E266-4CE7-BCC7-35A92A175266}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportingDate">
      <DTS:VariableValue
        DTS:DataType="8">2016-6-01</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,13,OnInformation</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">0</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">0</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">0</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">0</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{39771EF7-052F-4D68-A4D0-D9C0874B3645}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\FactLoanECResult"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DC20029A-BDE7-4B8B-9765-B7AE0C75D1FB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="FactLoanECResult">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{39771EF7-052F-4D68-A4D0-D9C0874B3645}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\FactLoanECResult\Apply EC For FactLoan"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{543423A6-416D-4311-90F2-4F0400BD85D6}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply EC For FactLoan"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{39771EF7-052F-4D68-A4D0-D9C0874B3645}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              defaultBufferMaxRows="100"
              defaultBufferSize="40485760"
              version="1">
              <components>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Apply FactLoan EC"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ECResultBuffer ECResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ECResultBuffer)
        {
            ECResultBuffer.SetEndOfRowset();
            ECResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ECResult"))
            {
                ECResultBuffer = new ECResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String OLEDBConnStringALR
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["OLEDBConnString_ALR"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _SqlConn = new SqlConnection(Variables.OLEDBConnStringALR);
        _SqlConn.Open();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
        _SqlConn.Close();
        _SqlConn = null;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";

        if (Row.IsEnable)
        {
            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            string sECId = string.Empty;
            //MessageBox.Show(Row.CriteriaDescription.ToString());
            //MessageBox.Show(sQuery);
            try
            {
                SqlCommand _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    ECResultBuffer.AddRow();
                    
                    //ECResultBuffer.DimPoolId = (long)dr["DimPoolId"];
                    //ECResultBuffer.DimECId = (long)dr["DimECId"];
                    //ECResultBuffer.DimLoanId = (int)dr["DimLoanId"];

                    //ECResultBuffer.DimPoolId = Convert.ToInt64(dr["DimPoolId"]);
                    ECResultBuffer.Score = Convert.ToDouble(dr["Score"]);
                    ECResultBuffer.DimECId = Convert.ToInt64(dr["DimECId"]);
                    ECResultBuffer.AccountNo = Convert.ToInt64(dr["AccountNo"]);
                    //ECResultBuffer.Score = Convert.ToInt32(dr["Score"]);
                    
                    sECId = dr["DimECId"].GetType().ToString();
                    //MessageBox.Show(dr["DimPoolId"].GetType().ToString() + "_" + dr["DimECId"].GetType().ToString() + "_" + dr["DimLoanId"].GetType().ToString());

                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply FactLoan EC", sMsg, "", 0, ref bFireAgain);
            }
            catch (Exception ex)
            {
                //TODO Logging
                string sEx = string.Format("Failed ECId:{0}, Query:{1}{2}{3}", sECId, sQuery, Environment.NewLine, ex.Message);
                throw new ApplicationException(sEx);
                //MessageBox.Show(ex.Message);
                //throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply FactLoan EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Boolean IsEnable
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[3]);
        }
    }
    public bool IsEnable_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ECResultBuffer: ScriptBuffer

{
    public ECResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Double Score
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Score_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 AccountNo
    {
        set
        {
            this[1] = value;
        }
    }
    public bool AccountNo_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 DimECId
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DimECId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Settings.get_Default():SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Sett" +
    "ings")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:CodeName>
		<msb:DisplayName>sc_7747802d759d4dbdaea8e508a92c0bd3</msb:DisplayName>
		<msb:ProjectId>{E633D982-285F-4757-B3F6-72D72D93CAA3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_7747802d759d4dbdaea8e508a92c0bd3.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_7747802d759d4dbdaea8e508a92c0bd3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</RootNamespace>
    <AssemblyName>SC_7747802d759d4dbdaea8e508a92c0bd3.csproj</AssemblyName>
    <ProjectGuid>{2951B9B0-1020-4476-80D7-776AB2942E51}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7747802d759d4dbdaea8e508a92c0bd3.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
HgKACQAABCoafgoAAAQqLnMrAAAGgAoAAAQqHgIoSwAACioAAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAUCQAAI34AAIAJAAAYDAAAI1N0cmluZ3MA
AAAAmBUAAGgCAAAjVVMAABgAABAAAAAjR1VJRAAAABAYAACMAgAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAMwAAAAkAAAAKAAAALAAAABoAAABLAAAADwAAAAMAAAAFAAAAEgAA
ABMAAAABAAAABwAAAAEAAAAAAAoAAQAAAAAABgALAeoABgAYAeoACgA4ATEBDgBUAT8BEgCNAeoA
BgCcAeoAEgCwAeoAFgBsBFYECgCrBJoECgDcBMcECgDPBbUFCgD6BegFCgARBugFCgAuBugFCgBN
BugFCgBmBugFCgB/BugFCgCaBugFCgC1BugFCgDOBugFCgAHB+cGCgAnB+cGCgCeBzEBCgC2BzEB
CgDQBzEBCgDWBzEBCgDdBzEBGgBtCEUIGgCUCEUICwCkCAAAGgDUCEUIBgAACeoAFgA6CScJCgBd
CTEBCgCFCXkJFgClCVYEFgCwCScJFgDNCVYEFgDpCScJCgAHCjEBCgAiCjEBHgB8ClMKCgC7CjEB
CgDTCjEBCgDpCjEBCgARC/4KCgAuCzEBCgBSC+gFDgB+C2gLDgCXC2gLCgCsC+cGAAAAAAEAAAAA
AAEAAQABABAAOQAAAAUAAQABAAEAEABGAAAABQABAAwAAQAQAFUAAAAJAAEAFgABABAAYwAAAA0A
BQAeAAEAEABvAAAADQAGAB8AAQAQAHkAAAAQAAcAIQAAABAAhACOAA0ACAAmAAABEADEAI4AEQAK
ACoABgBjAFYABgBvAFoABgBGAF4AAQCHA2IAAQAQBIEAAQAQBIEAAQB6BIsAEQC7BI8AEQDoBJMA
EQAsBbEAUCAAAAAAhhiqARMAAQBbIAAAAACGCLsBHQAEAHUgAAAAAIYIywEiAAQAfiAAAAAAhgji
ASYABACTIAAAAACGCO4BIgAEAJwgAAAAAIYIAQIqAAQAsSAAAAAAhggSAiIABAC6IAAAAACGCCoC
IgAEAM8gAAAAAIYINwIiAAQA2CAAAAAAhgBLAiIABADgIAAAAACGAFMCIgAEAOggAAAAAIYYqgET
AAQA8yAAAAAAhgjPAj8ABwACIQAAAACGCNkCRAAIABkhAAAAAIYI6gJJAAkAKCEAAAAAhgj4AkQA
CgA/IQAAAACGCA0DSQALAE4hAAAAAIYIGQNEAAwAZSEAAAAAhgAsA04ADQBtIQAAAACGADMDTgAN
AHUhAAAAAIYAUwIiAA0AfSEAAAAAhhiqAU4ADQCgIQAAAADGAJYDZQANAPshAAAAAMYBowNOABEA
/SEAAAAAgQCxA04AEQAcIgAAAADGAMUDbwARAGUiAAAAAMYB0QNOABUAZyIAAAAAxgHlA3sAFQB6
IgAAAADGAfkDewAWAHwiAAAAAIYYqgGFABcAiyIAAAAAhhiqAYUAGACaIgAAAACGCCAEKgAZAMAi
AAAAAMYAgwROABkA6SIAAAAAxgCOBE4AGQAEIwAAAADGAPkDewAZAMwkAAAAAMYA0QNOABoAziQA
AAAAhhiqAU4AGgDWJAAAAACDGKoBTgAaAOAkAAAAAJMI+ASXABoAGSUAAAAAkwgMBZwAGgAgJQAA
AACTCBgFoQAaACglAAAAAJYIPAW1ABsAOyUAAAAAhhiqAU4AGwAvJQAAAACRGMcLygEbAAAAAQBQ
BQAAAgBXBQAAAwBrBQAAAQBQBQAAAgBXBQAAAwBrBQAAAQB1BQAAAQB1BQAAAQB1BQAAAQB1BQAA
AQB1BQAAAQB1BQAAAQB7BQAAAgCDBQAAAwBQBQAABABrBQAAAQCNBQAAAgCVBQAAAwCfBQAABABr
BQAAAQBQBQAAAQCnBQAAAQCrBQAAAQCrBQAAAQCnBQAAAQB1BVkAqgG/AGEAqgG/AGkAqgG/AHEA
qgG/AHkAqgG/AIEAqgG/AIkAqgG/AJEAqgG/AJkAqgG/AKEAqgG/AKkAqgHEALEAqgFOAAkAqgET
AAkAUAXJAAkAVwXNACkAcAfRAAkAeQfWACkAgAfbACkAiQfgACkAkwfWAAkASwIiAAkAUwIiAAkA
pQflAAkArgfEAMEAqgG/AAkALANOAAkAMwNOABEAqgFOANEA7gfrABEA9QfyACkABggiABEAFgj4
ABkAqgFOABEAfggDAeEAcAcIAREAvwgOAekA7AgTAQEBqgFOABEAgwROAEEAqgG/AAkBRwlOABEA
jgROAAkBTAlOADkAUgkeAREBZQkiATkAbQknARkBjgkuARkBiQc0AdEAmgkqANEAnwk6ASEBqgE9
ASkBugnEACEB2wlEATkBcAdKAREB9glPAREB/wlUARkADApZARkAFAoqADkBHQoiADkBTAlOANEA
KApfAREAlQpmAVEBqwpsAVkBxwp3AWEB3QoqANEAKAp7AWkBqgG/ANEAKAqCAXEBqgFOAEEBQAue
AUEBWwunAUkAqgGtAYkBqgG6AZkBqgFOACEAqgFOAC4AGwBGAi4AYwBsAi4ACwDOAS4AEwAWAi4A
IwBGAi4AKwBGAi4AMwAWAi4AOwBMAi4AQwBGAi4AWwBjAuMAMwEZAQMBKwIZAUEBUwIZAQkCSwLB
ASkCSwLBAf8AiAG1AQIAAQADAAkABgAPAAgAEAAJABIAAABfAi4AAABrAjMAAAB+AjcAAACGAjMA
AACVAjsAAACiAjMAAAC2AjMAAAC/AjMAAABCA1IAAABIAzMAAABVAzcAAABfAzMAAABwAzcAAAB4
AzMAAAA3BDsAAACrBKcAAAAkBawAAABIBboAAgACAAMAAgADAAUAAgAEAAcAAgAFAAkAAgAGAAsA
AgAHAA0AAgAIAA8AAgAJABEAAQANABMAAQAOABUAAQAPABcAAQAQABkAAQARABsAAQASAB0AAgAg
AB8AAgAnACEAAgAoACMAAQApACMAAgAqACUABIAAAAEAAAB2F7JPAAAAAAAARQcAAAwAAAAAAAAA
AAAAAAEAzQAAAAAABAAAAAAAAAAAAAAACgAoAQAAAAAEAAAAAAAAAAAAAAAKADEBAAAAAAwAAAAA
AAAAAAAAAAEAbAEAAAAABAAAAAAAAAAAAAAACgBKBAAAAAAMAAAAAAAAAAAAAAABACIIAAAAAAwA
AAAAAAAAAAAAAAEALwoAAAAAAAAAAAEAAADOCwAAAAAAAAA8TW9kdWxlPgBTQ183NzQ3ODAyZDc1
OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBFQ1Jlc3VsdEJ1
ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJlc291
cmNlcwBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2ouUHJvcGVydGll
cwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lz
dGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1l
TWFwAC5jdG9yAEJsb2JDb2x1bW4AZ2V0X0NyaXRlcmlhU1FMAGdldF9Dcml0ZXJpYVNRTF9Jc051
bGwAZ2V0X0RpbUVDSUQAZ2V0X0RpbUVDSURfSXNOdWxsAGdldF9Dcml0ZXJpYU5hbWUAZ2V0X0Ny
aXRlcmlhTmFtZV9Jc051bGwAZ2V0X0lzRW5hYmxlAGdldF9Jc0VuYWJsZV9Jc051bGwATmV4dFJv
dwBFbmRPZlJvd3NldABDcml0ZXJpYVNRTABDcml0ZXJpYVNRTF9Jc051bGwARGltRUNJRABEaW1F
Q0lEX0lzTnVsbABDcml0ZXJpYU5hbWUAQ3JpdGVyaWFOYW1lX0lzTnVsbABJc0VuYWJsZQBJc0Vu
YWJsZV9Jc051bGwAc2V0X1Njb3JlAHNldF9TY29yZV9Jc051bGwAc2V0X0FjY291bnRObwBzZXRf
QWNjb3VudE5vX0lzTnVsbABzZXRfRGltRUNJZABzZXRfRGltRUNJZF9Jc051bGwAQWRkUm93AFNl
dEVuZE9mUm93c2V0AFNjb3JlAFNjb3JlX0lzTnVsbABBY2NvdW50Tm8AQWNjb3VudE5vX0lzTnVs
bABEaW1FQ0lkAERpbUVDSWRfSXNOdWxsAElucHV0c0ZpbmlzaGVkAFByb2Nlc3NJbnB1dABGaW5p
c2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0
Um93cwBJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFyZW50Q29t
cG9uZW50AGdldF9PTEVEQkNvbm5TdHJpbmdBTFIAT0xFREJDb25uU3RyaW5nQUxSAFN5c3RlbS5E
YXRhAFN5c3RlbS5EYXRhLlNxbENsaWVudABTcWxDb25uZWN0aW9uAF9TcWxDb25uAFByZUV4ZWN1
dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABCdWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRw
dXRNYXAAdmFsdWUASW5wdXRJRABJbnB1dE5hbWUAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBS
b3cAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVB
dHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVhOGU1MDhhOTJjMGJkMy5jc3Byb2oA
Z2V0X0l0ZW0ASXNOdWxsAEdldEludDY0AEdldFN0cmluZwBHZXRCb29sZWFuAERvdWJsZQBzZXRf
SXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ASW50NjQAU3RyaW5nAFN0cmlu
Z0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91
dHB1dElEAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRPbmx5VmFy
aWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZh
bHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhDb250ZXh0
AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5EYXRhLkNvbW1v
bgBEYkNvbm5lY3Rpb24AT3BlbgBDbG9zZQBnZXRfTGVuZ3RoAENvbnZlcnQAVG9JbnQzMgBHZXRC
bG9iRGF0YQBTeXN0ZW0uVGV4dABFbmNvZGluZwBnZXRfVW5pY29kZQBUcmltAEVtcHR5AFNxbENv
bW1hbmQARGJDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABTcWxEYXRhUmVhZGVyAEV4ZWN1dGVS
ZWFkZXIARGJEYXRhUmVhZGVyAFRvRG91YmxlAFRvSW50NjQAVHlwZQBHZXRUeXBlAFRvU3RyaW5n
AFJlYWQASW50MzIARm9ybWF0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFE
YXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBGaXJlSW5mb3JtYXRpb24ARW52aXJvbm1lbnQA
Z2V0X05ld0xpbmUARXhjZXB0aW9uAGdldF9NZXNzYWdlAEFwcGxpY2F0aW9uRXhjZXB0aW9uAFN5
c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ183NzQ3ODAyZDc1OWQ0ZGJkYWVh
OGU1MDhhOTJjMGJkMy5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFF
AEMAUgBlAHMAdQBsAHQAACdPAEwARQBEAEIAQwBvAG4AbgBTAHQAcgBpAG4AZwBfAEEATABSAAAB
AAtTAGMAbwByAGUAAA9EAGkAbQBFAEMASQBkAAATQQBjAGMAbwB1AG4AdABOAG8AABN7ADAAfQAg
ADoAIAB7ADEAfQAAI0EAcABwAGwAeQAgAEYAYQBjAHQATABvAGEAbgAgAEUAQwAAQUYAYQBpAGwA
ZQBkACAARQBDAEkAZAA6AHsAMAB9ACwAIABRAHUAZQByAHkAOgB7ADEAfQB7ADIAfQB7ADMAfQAA
UUUAQwAgAHsAMAB9ACAAaQBzACAAbgBvAHQAIABlAG4AYQBiAGwAZQBkACAAYQBuAGQAIABpAHMA
IABuAG8AdAAgAGEAcABwAGwAaQBlAGQAAH9TAEMAXwA3ADcANAA3ADgAMAAyAGQANwA1ADkAZAA0
AGQAYgBkAGEAZQBhADgAZQA1ADAAOABhADkAMgBjADAAYgBkADMALgBjAHMAcAByAG8AagAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAXzGd/GeBmS6H12TqPbHLk
AAiJhF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkEIAASHQMgAAIDIAAKAyAADgQoABIdAygAAgMo
AAoDKAAOBCABAQ0EIAEBAgQgAQEKAyAAAQMoAA0DBhIUAwYSGAMGEgwCBggJIAQBCA4SFRIZCyAE
AQgdCB0SFRIZBSABARIIAwYSCQUgAQESCQMGEiEDBhIlAwYSKQQAABIlBAAAEikFAAEBEikECAAS
JQQIABIpAwYSJAQAABIkBAgAEiQEIAEBDgQgAQEIAwYSFQMGHQgEIAEcCAQgAQIIBCABCggEIAEO
CAUgAgEIHAYgAgIOEW0FIAEdCAgGAAIIEhkOAwcBCAQgABJxBSABEnUcBAAAEnkFIAEcEn0EAQAA
AAMgAAkEAAEICQYgAh0FCAgFAAASgI0FIAEOHQUCBg4GIAIBDhIhBSAAEoCZBCABHA4EAAENHAQA
AQocBSAAEoChBgADDg4cHAUgABKAqQogBgEIDg4OCBACAwAADgYAAg4OHRwFAAIODhwVBwsCDh0F
Dg4SgJESgJkIEoCxDh0cCAABEoChEYC9BSAAEoDBByACAQ4SgMEEBwESJQYgAQERgMkIAQACAAAA
AAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNDXzc3NDc4MDJkNzU5ZDRkYmRhZWE4ZTUwOGE5MmMw
YmQzLmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEyAAAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBAMRAAAAAAAAAAAAAAN5AAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADQQAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
APADAAAAAAAAAAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQCyT3YXAAABALJPdhc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAAMAAwADAANABi
ADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANwA3ADQA
NwA4ADAAMgBkADcANQA5AGQANABkAGIAZABhAGUAYQA4AGUANQAwADgAYQA5ADIAYwAwAGIAZAAz
AC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADAAMAA2AC4AMgAwADQAMAAyAAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAQwBfADcANwA0ADcAOAAwADIAZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEA
OQAyAGMAMABiAGQAMwAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMgAAAIgA
LwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA3ADcANAA3ADgAMAAy
AGQANwA1ADkAZAA0AGQAYgBkAGEAZQBhADgAZQA1ADAAOABhADkAMgBjADAAYgBkADMALgBjAHMA
cAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBf
ADcANwA0ADcAOAAwADIAZAA3ADUAOQBkADQAZABiAGQAYQBlAGEAOABlADUAMAA4AGEAOQAyAGMA
MABiAGQAMwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMAAwADYALgAyADAANAAwADIAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMAAwADYALgAyADAANAAwADIAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADwMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7747802d759d4dbdaea8e508a92c0bd3</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::OLEDBConnString_ALR</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">f8474f69f8eb70600f9cee5f65893fc2</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0].Columns[IsEnable]"
                          cachedDataType="bool"
                          cachedName="IsEnable"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnable]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult]"
                      hasSideEffects="true"
                      name="ECResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[Score]"
                          dataType="r8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[Score]"
                          name="Score" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[AccountNo]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[AccountNo]"
                          name="AccountNo" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimECId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimECId]"
                          mappedColumnId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC"
                          name="DimECId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="FactLoan EC ALR"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select     [CriteriaId] as   DimECID
	, CriteriaName
	, CriteriaDescription
	,CriteriaSetId
	, IsEnable
                  ,[ECPassNo]
	, XMLSqlQueryEC
	, XMLSqlQueryDrillThrough
	, SequenceNo
	, DimOrganisationId
                ,cast(null as nvarchar(max)) as CriteriaSQL
from [CreditRating].[Criteria]
where IsEnable = 1 and DimOrganisationId=?
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{7598F545-5ED1-4753-BC99-7EC57978A61B};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]"
                          name="DimECID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnable]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[IsEnable]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnable]"
                          name="IsEnable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNo]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[ECPassNo]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNo]"
                          name="ECPassNo"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimECID]"
                          dataType="i8"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          name="XMLSqlQueryDrillThrough" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[DimOrganisationId]"
                          dataType="i4"
                          name="DimOrganisationId" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[IsEnable]"
                          dataType="bool"
                          name="IsEnable" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].ExternalColumns[ECPassNo]"
                          dataType="i8"
                          name="ECPassNo" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimECID]"
                          name="DimECID" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[IsEnable]"
                          dataType="bool"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[IsEnable]"
                          name="IsEnable" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ECPassNo]"
                          dataType="i8"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ECPassNo]"
                          name="ECPassNo" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          dataType="nText"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryDrillThrough]"
                          name="XMLSqlQueryDrillThrough" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[DimOrganisationId]"
                          name="DimOrganisationId" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="FactLoan EC Results to ALR"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[CreditRating].[tblFactLoanECScore]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TargetPool]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TargetPool]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].Columns[DimECId]"
                          cachedDataType="i8"
                          cachedName="DimECId"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[DimECId]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].Columns[Score]"
                          cachedDataType="r8"
                          cachedName="Score"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[Score]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[Score]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].Columns[AccountNo]"
                          cachedDataType="i8"
                          cachedName="AccountNo"
                          externalMetadataColumnId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[AccountNo]"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult].Columns[AccountNo]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[DimECID]"
                          dataType="i4"
                          name="DimECID" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[AccountNo]"
                          dataType="wstr"
                          length="100"
                          name="AccountNo" />
                        <externalMetadataColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input].ExternalColumns[Score]"
                          dataType="numeric"
                          name="Score"
                          precision="19"
                          scale="4" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="FactLoan EC XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fd0bab671ff44626844d3bc69a2d82be.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.Windows.Forms;
using System.IO;
using System.Windows.Forms;
using System.Collections.Generic;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.DEBUG;
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string sMsg = string.Empty;
        bool bFireAgain = true;

        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}",System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        //MessageBox.Show(sXML);
        try
        {
            //xmlDoc.LoadXml(sXML);
            MemoryStream ms = new MemoryStream(byteXML);
            ms.Flush();
            ms.Position = 0;
            xmlDoc.Load(ms);
            // Update with latest default parameters
            UpdateParameterAttribute(xmlDoc, "DimOrganisationId", "Value", Row.DimOrganisationId.ToString());
            //MessageBox.Show("DimOrganisationId");
            UpdateParameterAttribute(xmlDoc, "DimReportingDateId", "Value", Variables.DimReportingDateID.ToString());
            //MessageBox.Show("DimReportingDateId");
            //MessageBox.Show("DimPoolId");
            UpdateParameterAttribute(xmlDoc, "DimECId", "Value", Row.DimECID.ToString());
            //MessageBox.Show("DimECId");
 
            //MessageBox.Show("DimSourceTrustID");
            //MessageBox.Show("DimTargetTrustID");

            //update Row.XMLSqlQueryEC in case we log the actual xml doc/ sql script
            //sXML = xmlDoc.InnerXml;
            //byteXML = System.Text.Encoding.Unicode.GetBytes(sXML);
            //Row.XMLSqlQueryEC.ResetBlobData();
            //Row.XMLSqlQueryEC.AddBlobData(byteXML);

            string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
            if (_DEBUG)
            {
                sMsg = string.Format("{0}  {1}: {2}", Row.DimECID.ToString(), Row.CriteriaName, Environment.NewLine, sQuery);
                ComponentMetaData.FireInformation(1000, "FactLoan EC To XML", sMsg, "", 0, ref bFireAgain);
            }
            byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
            //MessageBox.Show(sQuery.Length.ToString());
            Row.CriteriaSQL.ResetBlobData();
            Row.CriteriaSQL.AddBlobData(byteSQL);
        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public static XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {
        
        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);
        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;
        
        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;
        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("N'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));
        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sbResult.ToString();
    }

    public string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

        }
        catch (Exception ex)
        {
            throw ex;
        }
        return sSQLStatement;
    }
    #endregion


}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int64 DimECID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool DimECID_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int64 DimOrganisationId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[2]);
        }
    }
    public bool DimOrganisationId_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[3]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int64 CriteriaSetId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaSetId_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String CriteriaDescription
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaDescription_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int64 ECPassNo
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[7]);
        }
    }
    public bool ECPassNo_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Boolean IsEnable
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[8]);
        }
    }
    public bool IsEnable_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimOrganisationID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimOrganisationID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimReportingDateID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimReportingDateID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimSourceTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimSourceTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String DimTargetTrustID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["DimTargetTrustID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ECPassNo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ECPassNo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PoolId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PoolId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_fd0bab671ff44626844d3bc69a2d82be.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</RootNamespace>
    <AssemblyName>SC_fd0bab671ff44626844d3bc69a2d82be.csproj</AssemblyName>
    <ProjectGuid>{3177C9BB-C440-47E3-909D-6F3C1FBCBFD9}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:CodeName>
		<msb:DisplayName>sc_fd0bab671ff44626844d3bc69a2d82be</msb:DisplayName>
		<msb:ProjectId>{36F1B1D2-0E76-41ED-BF1F-006D3D4807A7}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_fd0bab671ff44626844d3bc69a2d82be.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Settings.get_Default():SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Sett" +
    "ings")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fd0bab671ff44626844d3bc69a2d82be.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_fd0bab671ff44626844d3bc69a2d82be.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AAAKLZreFRELdTEAAAETDBEMLAcRDG9GAAAK3AhvMAAACgreBRMIEQh6BipBTAAAAgAAAEYAAABi
AAAAqAAAABUAAAAAAAAAAgAAANkAAABqAAAAQwEAABUAAAAAAAAAAAAAABMAAABOAQAAYQEAAAUA
AAAnAAABHgIoFgAABioeAigaAAAKKhMwAgAtAAAACQAAEX4HAAAELSBy1wQAcNAHAAACKFkAAApv
WgAACnNbAAAKCgaABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCouczQAAAaACQAABCoe
AiheAAAKKgAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAALwKAAAjfgAAKAsAAJQPAAAjU3RyaW5ncwAAAAC8GgAAWAUAACNVUwAUIAAAEAAAACNHVUlE
AAAAJCAAAKADAAAjQmxvYgAAAAAAAAACAAABVx2iCQkBAAAA+iUzABYAAAEAAAA5AAAACAAAAAkA
AAA1AAAAHgAAAF4AAAABAAAADwAAAAkAAAAEAAAAHAAAAB0AAAABAAAAAQAAAAcAAAABAAAAAAAK
AAEAAAAAAAYA/ADbAAYACQHbAAoAKQEiAQ4ARQEwARIAfgHbAAYAjQHbABIAoQHbABYAlgWLBRYA
ngWLBQoAdAZjBgoApQaQBgoA+QffBwoAJAgSCAoAOwgSCAoAWAgSCAoAdwgSCAoAkAgSCAoAqQgS
CAoAxAgSCAoA3wgSCAoA+AgSCAoAMQkRCQoAUQkRCQoAyAkiAQoAzwkiARoAQwobChoAagobCgsA
egoAABoAqgobCgoA1goiAQYA3grbAAoAFgsiAQoAPgsyCwoAaQtfCwoAdgtfCwoAlQsiAQoApAsi
AR4ACQzgCwoAawwiAQoAgQwiARYAlgyLBRYAtQyLBQoAzQwiAQoAFg37DAoAIw37DAoASg03DRYA
cA2LBRYAlg2LBQoAxQ0iAQoABg4yCwoAhg5zDgoAow4iAQoAqA4iAQoAzA4SCA4A+A7iDg4AEQ/i
DgoAJg8RCQAAAAABAAAAAAABAAEAAQAQADkAAAAFAAEAAQABABAARgAAAAkAAQAWAAEAEABUAAAA
DQADABoAAQAQAGAAAAANAAQAGwABABAAagAAAAwABQAjAAAAEAB1AH8ADQAHAC8AAAEQALUAfwAR
AAkAMwAGAFQAPwAGAGAAQwABAJIEWwABAJIEWwBRgGIFZQABAG0FbQARAIQGoQARALEGpQARAPUG
wwBQIAAAAACGGJsBEwABAFsgAAAAAIYIrAEdAAQAdSAAAAAAhgi+ASIABAB+IAAAAACGCNcBJgAE
AJMgAAAAAIYI4wEiAAQAnCAAAAAAhgj2ASYABACxIAAAAACGCAwCIgAEALogAAAAAIYIKQIdAAQA
1CAAAAAAhgg5AiIABADdIAAAAACGCFACJgAEAPIgAAAAAIYIYgIiAAQA+yAAAAAAhgh7AioABAAQ
IQAAAACGCJMCIgAEABkhAAAAAIYIsgIqAAQALiEAAAAAhgjDAiIABAA3IQAAAACGCNsCJgAEAEwh
AAAAAIYI6AIiAAQAVSEAAAAAhgj8AiIABABqIQAAAACGCAkDIgAEAHMhAAAAAIYAHQMiAAQAeyEA
AAAAhgAlAyIABACDIQAAAACGGJsBRwAEAKMhAAAAAMYAWgRLAAQAyCEAAAAAxgFnBFUACADbIQAA
AADGAXsEVQAJAN0hAAAAAIYYmwFfAAoA7CEAAAAAhhibAV8ACwD7IQAAAACGCKIEIgAMACEiAAAA
AIYIrAQqAAwARyIAAAAAhgjCBCoADABtIgAAAACGCNkEKgAMAJMiAAAAAIYI7gQqAAwAuSIAAAAA
hgjbAioADADfIgAAAACGCAMFKgAMAAUjAAAAAMYAdAVHAAwAHiMAAAAAxgB/BUcADAAoIwAAAADG
AHsEVQAMAOQkAAAAAJYAqgVwAA0AhCUAAAAAhgC9BXgADwDoJQAAAACGANYFgQATABQmAAAAAIYA
7wWHABUAQCYAAAAAhgD7BYwAFgAwJwAAAACGABEGkgAXAJwqAAAAAIYALQaZABkA+CoAAAAAhgBL
BpIAHAC4LAAAAACGGJsBRwAeAMAsAAAAAIMYmwFHAB4AyCwAAAAAkwjBBqkAHgABLQAAAACTCNUG
rgAeAAgtAAAAAJMI4QazAB4AEC0AAAAAlggFB8cAHwAjLQAAAACGGJsBRwAfABctAAAAAJEYQQ/e
Ah8AAAABABkHAAACACAHAAADADQHAAABAD4HAAACAEYHAAADABkHAAAEADQHAAABABkHAAABAFAH
AAABAFQHAAABAFQHAAABAFAHAAABAF4HAAACAGUHAAABAF4HAAACAGUHAAADAHQHAAAEAIMHAAAB
AJMHAAACAJ0HAAABAJMHAAABAKgHAAABAF4HAAACALEHAAABAF4HAAACALEHAAADAMAHAAABAF4H
AAACAM8HAAABANkHYQCbAdEAaQCbAdEAcQCbAdEAeQCbAdEAgQCbAdEAiQCbAdEAkQCbAdEAmQCb
AdEAoQCbAdEAqQCbAdEAsQCbAdYAuQCbAUcACQCbARMACQAZB9sACQAgB98AKQCaCeMACQCjCegA
KQCqCe0AKQCzCfIAKQC9CegACQAdAyIACQAlAyIAEQCbAUcAwQDgCfcAEQDnCf4AGQCbAUcAEQBU
CgQB0QCaCQkBEQCVCg8B2QDCChQB+QCbAUcAEQB0BUcAEQB/BUcAwQAFC2UASQCbAUcAOQALCx8B
AQEeCyMBOQAmCygBCQFHCy8BCQGzCTUBwQBTCyoAwQBYCzsBEQGbAUEBGQF9C0cAGQGDC0cBSQCQ
C0wBIQGbCyoAGQCbCyoAKQGwC1MBwQBYC1cBEQAiDF4BMQE4DGQBCQFIDG8BOQBRDEcAOQBfDEEB
OQF1DCoAwQBYC3UBQQGbAdEASQChDJYBQQDBDJwBWQHcDKMBDACbAbIBUQFWDb0BcQFkDcMBQQCH
DccBeQGjDc0BQQCuDSoADAC4DdQBcQG8DSIAiQHRDUcADADZDdwBQQDlDdEASQDvDc0BeQH/DQAC
kQGbAUcAkQEUDhICkQEUDiECkQGbAdEAUQEhDikCkQH/DS0CkQELCykCkQErDjQCwQAyDlECwQA+
Dn4CQQBMDoMCQQBdDioAkQFrDokCmQGbAUcAoQG6DrICoQHVDrsCUQCbAcECuQGbAc4CyQGbAUcA
IQCbAUcADgAUAGgALgAbAFoDLgBjAIADLgALAOICLgATACoDLgAjAFoDLgArAFoDLgAzACoDLgA7
AGADLgBDAFoDLgBbAHcDwwD7ABoB4wDDAhoBIQHrAhoBSQPjAtUCaQPjAtUCfQHlAQkCGwI8AlcC
dQKRAskCAgABAAUAEwAHABoACAAcAAAAMQMuAAAAPwMzAAAAVAM3AAAAXAMzAAAAawM3AAAAfQMz
AAAAlgMuAAAAogMzAAAAtQM3AAAAwwMzAAAA2AM7AAAA7AMzAAAABwQ7AAAAFAQzAAAAKAQ3AAAA
MQQzAAAAQQQzAAAASgQzAAAADgUzAAAAFAU7AAAAJgU7AAAAOQU7AAAASgU7AAAAKAQ7AAAAWwU7
AAAAdAa5AAAA7Qa+AAAAEQfMAAIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIA
CAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAh
AAIAEgAjAAIAEwAlAAIAHAAnAAIAHQApAAIAHgArAAIAHwAtAAIAIAAvAAIAIQAxAAIAIgAzAAIA
MAA1AAIAMQA3AAEAMgA3AAIAMwA5AKkBBIAAAAEAAAB2F4lPAAAAAAAAbwkAAAwAAAAAAAAAAAAA
AAEAvgAAAAAABAAAAAAAAAAAAAAACgAZAQAAAAAEAAAAAAAAAAAAAAAKACIBAAAAAAwAAAAAAAAA
AAAAAAEAXQEAAAAABAAAAAAAAAAAAAAACgCLBQAAAAAMAAAAAAAAAAAAAAABAPgJAAAAAAwAAAAA
AAAAAAAAAAEAvAsAAAAAAAAAAAEAAABIDwAAAAAAAAA8TW9kdWxlPgBTQ19mZDBiYWI2NzFmZjQ0
NjI2ODQ0ZDNiYzY5YTJkODJiZS5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBVc2VyQ29tcG9uZW50
AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJlc291cmNlcwBTQ19mZDBiYWI2NzFm
ZjQ0NjI2ODQ0ZDNiYzY5YTJkODJiZS5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNj
cmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0u
Q29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9yAEJsb2JDb2x1
bW4AZ2V0X1hNTFNxbFF1ZXJ5RUMAZ2V0X1hNTFNxbFF1ZXJ5RUNfSXNOdWxsAGdldF9EaW1FQ0lE
AGdldF9EaW1FQ0lEX0lzTnVsbABnZXRfRGltT3JnYW5pc2F0aW9uSWQAZ2V0X0RpbU9yZ2FuaXNh
dGlvbklkX0lzTnVsbABnZXRfQ3JpdGVyaWFTUUwAZ2V0X0NyaXRlcmlhU1FMX0lzTnVsbABnZXRf
Q3JpdGVyaWFTZXRJZABnZXRfQ3JpdGVyaWFTZXRJZF9Jc051bGwAZ2V0X0NyaXRlcmlhRGVzY3Jp
cHRpb24AZ2V0X0NyaXRlcmlhRGVzY3JpcHRpb25fSXNOdWxsAGdldF9Dcml0ZXJpYU5hbWUAZ2V0
X0NyaXRlcmlhTmFtZV9Jc051bGwAZ2V0X0VDUGFzc05vAGdldF9FQ1Bhc3NOb19Jc051bGwAZ2V0
X0lzRW5hYmxlAGdldF9Jc0VuYWJsZV9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABYTUxTcWxR
dWVyeUVDAFhNTFNxbFF1ZXJ5RUNfSXNOdWxsAERpbUVDSUQARGltRUNJRF9Jc051bGwARGltT3Jn
YW5pc2F0aW9uSWQARGltT3JnYW5pc2F0aW9uSWRfSXNOdWxsAENyaXRlcmlhU1FMAENyaXRlcmlh
U1FMX0lzTnVsbABDcml0ZXJpYVNldElkAENyaXRlcmlhU2V0SWRfSXNOdWxsAENyaXRlcmlhRGVz
Y3JpcHRpb24AQ3JpdGVyaWFEZXNjcmlwdGlvbl9Jc051bGwAQ3JpdGVyaWFOYW1lAENyaXRlcmlh
TmFtZV9Jc051bGwARUNQYXNzTm8ARUNQYXNzTm9fSXNOdWxsAElzRW5hYmxlAElzRW5hYmxlX0lz
TnVsbABQcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AFBhcmVudENvbXBvbmVudABnZXRfREVCVUcAZ2V0X0RpbU9yZ2FuaXNhdGlvbklEAGdldF9E
aW1SZXBvcnRpbmdEYXRlSUQAZ2V0X0RpbVNvdXJjZVRydXN0SUQAZ2V0X0RpbVRhcmdldFRydXN0
SUQAZ2V0X1Bvb2xJZABERUJVRwBEaW1PcmdhbmlzYXRpb25JRABEaW1SZXBvcnRpbmdEYXRlSUQA
RGltU291cmNlVHJ1c3RJRABEaW1UYXJnZXRUcnVzdElEAFBvb2xJZABfRW5kT2ZMaW5lAF9ERUJV
RwBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFN5c3RlbS5YbWwAWG1sTm9kZQBYbWxEb2N1bWVudABH
ZXRQYXJhbWV0ZXJCeU5hbWUAVXBkYXRlUGFyYW1ldGVyQXR0cmlidXRlAEdldE9wZXJhdG9yV2l0
aFBhcmFtZXRlcgBHZXRPcGVyYXRvcgBTZWxlY3RlZEl0ZW1zVG9TdHJpbmcAR2V0VFNRTERlY2xh
cmVIZWFkZXJGcm9tWE1MAEdldFRTUUxFeGVjdXRhYmxlUXVlcnlGcm9tWE1MAEdldFRTUUxRdWVy
eUJvZHlGcm9tWE1MAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFu
AFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3Rh
bmNlAGdldF9EZWZhdWx0AERlZmF1bHQAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAT3V0cHV0
TWFwAElucHV0SUQASW5wdXROYW1lAFJvdwBDb21wb25lbnQAWG1sRG9jAHNQYXJhbWV0ZXJOYW1l
AHNBdHRyaWJ1dGVOYW1lAHNBdHRyaWJ1dGVWYWx1ZQBzT3BlcmF0b3IAc1BhcmFtZXRlcgB4bWxQ
YXJhbQBzTGluZURlbGltaXRlcgBzUXVlcnlOb2RlUGF0aABzTm9kZVBhdGgAdmFsdWUAU3lzdGVt
LlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxl
Y3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
QXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZl
cnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDX2Zk
MGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNzcHJvagBnZXRfSXRlbQBJc051bGwAR2V0
SW50NjQAR2V0U3RyaW5nAEdldEJvb2xlYW4AU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxz
AEdldENvbHVtbkluZGV4ZXMATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU1ZhcmlhYmxlczEwMABnZXRf
UmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAFNjcmlwdENvbXBvbmVudEV2YWxDb250
ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVl
V2l0aENvbnRleHQAQm9vbGVhbgBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0
ZQBFbXB0eQBnZXRfTGVuZ3RoAENvbnZlcnQAVG9JbnQzMgBHZXRCbG9iRGF0YQBTeXN0ZW0uVGV4
dABFbmNvZGluZwBnZXRfVW5pY29kZQBUcmltAEZvcm1hdABTeXN0ZW0uSU8ATWVtb3J5U3RyZWFt
AFN0cmVhbQBGbHVzaABzZXRfUG9zaXRpb24ATG9hZABJbnQ2NABUb1N0cmluZwBFbnZpcm9ubWVu
dABnZXRfTmV3TGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25lbnRNZXRhRGF0YTEw
MABnZXRfQ29tcG9uZW50TWV0YURhdGEARmlyZUluZm9ybWF0aW9uAEdldEJ5dGVzAFJlc2V0Qmxv
YkRhdGEAQWRkQmxvYkRhdGEARXhjZXB0aW9uAGdldF9NZXNzYWdlAEFwcGxpY2F0aW9uRXhjZXB0
aW9uAFhtbEVsZW1lbnQAZ2V0X0RvY3VtZW50RWxlbWVudABYbWxOb2RlTGlzdABTZWxlY3ROb2Rl
cwBTdHJpbmdDb21wYXJlcgBnZXRfSW52YXJpYW50Q3VsdHVyZUlnbm9yZUNhc2UAU3lzdGVtLkNv
bGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFyeWAyAElFcXVhbGl0eUNvbXBhcmVyYDEAU3lzdGVt
LkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAWG1sQXR0
cmlidXRlQ29sbGVjdGlvbgBnZXRfQXR0cmlidXRlcwBYbWxBdHRyaWJ1dGUAZ2V0X0l0ZW1PZgBn
ZXRfVmFsdWUAQWRkAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAVHJ5R2V0VmFsdWUAc2V0
X1ZhbHVlAENyZWF0ZUF0dHJpYnV0ZQBBcHBlbmQAU3RyaW5nQnVpbGRlcgBBcHBlbmRGb3JtYXQA
Z2V0X0NvdW50AFJlbW92ZQBvcF9FcXVhbGl0eQBJc051bGxPckVtcHR5AFNlbGVjdFNpbmdsZU5v
ZGUAZ2V0X0lubmVyVGV4dABSZXBsYWNlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNzcHJvai5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAD0kAbgBwAHUAdAAgADAAAAtEAEUAQgBVAEcA
ACNEAGkAbQBPAHIAZwBhAG4AaQBzAGEAdABpAG8AbgBJAEQAACVEAGkAbQBSAGUAcABvAHIAdABp
AG4AZwBEAGEAdABlAEkARAAAIUQAaQBtAFMAbwB1AHIAYwBlAFQAcgB1AHMAdABJAEQAACFEAGkA
bQBUAGEAcgBnAGUAdABUAHIAdQBzAHQASQBEAAARRQBDAFAAYQBzAHMATgBvAAANUABvAG8AbABJ
AGQAAFc8AD8AeABtAGwAIAB2AGUAcgBzAGkAbwBuAD0AIgAxAC4AMAAiACAAZQBuAGMAbwBkAGkA
bgBnAD0AIgB1AHQAZgAtADEANgAiACAAPwA+AHsAMAB9AAEjRABpAG0ATwByAGcAYQBuAGkAcwBh
AHQAaQBvAG4ASQBkAAALVgBhAGwAdQBlAAAlRABpAG0AUgBlAHAAbwByAHQAaQBuAGcARABhAHQA
ZQBJAGQAAA9EAGkAbQBFAEMASQBkAAAFDQAKAAAPLwAvAFEAdQBlAHIAeQAAG3sAMAB9ACAAIAB7
ADEAfQA6ACAAewAyAH0AACVGAGEAYwB0AEwAbwBhAG4AIABFAEMAIABUAG8AIABYAE0ATAAAAQAT
ewAwAH0AewAxAH0AewAyAH0AAEMvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAn
AFMAcQBsAFAAYQByAGEAbQBlAHQAZQByACcAXQABCU4AYQBtAGUAABEgAHsAMAB9ACAAewAxAH0A
AAsgAHsAMAB9ACAAACMoACcAbgBvAG4AZQAnACkAIABBAG4AZAAgADEAPQAxACAAASsuAC8ALwBT
AGUAbABlAGMAdABlAGQASQB0AGUAbQBzAC8ASQB0AGUAbQAAAygAABFOACcAewAwAH0AJwAsACAA
AQMpAAATUwBxAGwARABiAFQAeQBwAGUAABFEAGEAdABlAFQAaQBtAGUAAA9WAGEAcgBDAGgAYQBy
AAARTgBWAGEAcgBDAGgAYQByAABfRABlAGMAbABhAHIAZQAgAEAAewAwAH0AIAB7ADEAfQAgAD0A
IABDAG8AbgB2AGUAcgB0ACgAewAyAH0ALAAgACcAewAzAH0AJwAsACAAMQAyADAAKQAgAHsANAB9
AAFpRABlAGMAbABhAHIAZQAgAEAAewAwAH0AIAB7ADEAfQAoAG0AYQB4ACkAIAA9ACAAQwBvAG4A
dgBlAHIAdAAoAHsAMgB9ACgAbQBhAHgAKQAsACAAJwB7ADMAfQAnACkAIAB7ADQAfQABVUQAZQBj
AGwAYQByAGUAIABAAHsAMAB9ACAAewAxAH0AIAA9ACAAQwBvAG4AdgBlAHIAdAAoAHsAMgB9ACwA
IAAnAHsAMwB9ACcAKQAgAHsANAB9AAFJLwAvAFAAYQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABl
AD0AJwBSAGUAcABsAGEAYwBlAE8AcABlAHIAYQB0AG8AcgAnAF0AARFPAHAAZQByAGEAdABvAHIA
AEUvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAnAFIAZQBwAGwAYQBjAGUATABv
AG8AawB1AHAAJwBdAAF/UwBDAF8AZgBkADAAYgBhAGIANgA3ADEAZgBmADQANAA2ADIANgA4ADQA
NABkADMAYgBjADYAOQBhADIAZAA4ADIAYgBlAC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAfl27ue6l8RLDLAEPw0hnQAAiJhF3NgIDMkQi3
elxWGTTgiQkgAwESFR0IEhkEIAASHQMgAAIDIAAKAyAADgQoABIdAygAAgMoAAoDKAAOAwYSEAMG
EhQDIAABCSAEAQgOEhUSGQUgAQESCAMGEgkFIAEBEgkCBg4EDQAKAAIGAgcAAhIhEiUOCCAEAhIl
Dg4OBSACDg4OBCABDg4FIAEOEiEGIAIOEiUOByADDhIlDg4DBhIpAwYSLQQAABIpBAAAEi0FAAEB
Ei0ECAASKQQIABItAwYSIAQAABIgBAgAEiAEIAEBDgQgAQEIAwYSFQMGHQgEIAEcCAQgAQIIBCAB
CggEIAEOCAYgAgIOEWUFIAEdCAgEIAASaQUgARJtHAQAABJxBSABHBJ1BAEAAAADIAAJBAABCAkG
IAIdBQgIBQAAEoCFBSABDh0FBQACDg4cBSABAR0FBCABAQoGIAEBEoCNAwAADgYAAg4OHRwFIAAS
gJkKIAYBCA4ODggQAgUgAR0FDgcABA4OHBwcGAcODgISJR0FDhKAiQ4dBRKAnQ4KCh0cCgUgABKA
pQYgARKAqQ4FAAASgK0IFRKAsQIOEiEKIAEBFRKAtQETAAUgABKAuQMgABwFIAASgL0GIAESgMEO
ByACARMAEwEIIAICEwAQEwEaBwcSIRKApRKAqRUSgLECDhIhEiESgLkSgMUIIAESgMESgMEIBwMC
EiESgMEIIAMSgMkOHBwFBwESgMkHIAISgMkOHAMgAAgGIAESgMkOByACEoDJCAgUBwcOEoDJEoCp
EiESgJ0SgLkSgMUFAAICDg4dBwwSgMkSgKkSIQ4SgJ0SgLkOHRwdHB0cHRwSgMUIBwISgMkSgJ0E
AAECDgUgARIhDgcgAhKAyQ4OIAcNDhIhEoDJEoCpEiEOEiEOEoCdEoC5EoDFEoC5EoDFCAABEoDR
EYDVBSAAEoDZByACAQ4SgNkEBwESKQYgAQERgOEIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
LwEAKlNDX2ZkMGJhYjY3MWZmNDQ2MjY4NDRkM2JjNjlhMmQ4MmJlLmNzcHJvagAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDEyAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBANRRAAAAAAAAAAAAAO5RAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgUQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAPADAAAAAAAA
AAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQCJ
T3YXAAABAIlPdhc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARQAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAAMAAwADAANABiADAAAACAACsA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AZgBkADAAYgBhAGIANgA3
ADEAZgBmADQANAA2ADIANgA4ADQANABkADMAYgBjADYAOQBhADIAZAA4ADIAYgBlAC4AYwBzAHAA
cgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADAAMAA2
AC4AMgAwADMANgAxAAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGYA
ZAAwAGIAYQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAzAGIAYwA2ADkAYQAyAGQAOAAy
AGIAZQAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIA
aQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMgAAAIgALwABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBmAGQAMABiAGEAYgA2ADcAMQBmAGYA
NAA0ADYAMgA2ADgANAA0AGQAMwBiAGMANgA5AGEAMgBkADgAMgBiAGUALgBjAHMAcAByAG8AagAu
AGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYAZAAwAGIA
YQBiADYANwAxAGYAZgA0ADQANgAyADYAOAA0ADQAZAAzAGIAYwA2ADkAYQAyAGQAOAAyAGIAZQAu
AGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMAAwADYALgAyADAAMwA2ADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMAAwADYALgAyADAAMwA2ADEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_fd0bab671ff44626844d3bc69a2d82be</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::DEBUG,User::DimOrganisationID,User::DimReportingDateID,User::DimSourceTrustID,User::DimTargetTrustID,User::ECPassNo,User::PoolId</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">c46a6e223fb6c39b00011813feabd40a</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[DimECID]"
                          cachedDataType="i8"
                          cachedName="DimECID"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimECID]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[DimOrganisationId]"
                          cachedDataType="i8"
                          cachedName="DimOrganisationId"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[DimOrganisationId]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaSetId]"
                          cachedDataType="i8"
                          cachedName="CriteriaSetId"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaSetId]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaDescription]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaDescription"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaDescription]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[ECPassNo]"
                          cachedDataType="i8"
                          cachedName="ECPassNo"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[ECPassNo]" />
                        <inputColumn
                          refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0].Columns[IsEnable]"
                          cachedDataType="bool"
                          cachedName="IsEnable"
                          lineageId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output].Columns[IsEnable]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\FactLoanECResult\Apply EC For FactLoan.Paths[ECResult]"
                  endId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR.Inputs[OLE DB Destination Input]"
                  name="ECResult"
                  startId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Outputs[ECResult]" />
                <path
                  refId="Package\FactLoanECResult\Apply EC For FactLoan.Paths[OLE DB Source Output]"
                  endId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Inputs[Input 0]"
                  name="OLE DB Source Output"
                  startId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\FactLoanECResult\Apply EC For FactLoan.Paths[Output 0]"
                  endId="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\FactLoanECResult\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{66310BEC-F3A7-412E-9296-4F206E44D48E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C9472AF5-DC00-4F03-B85C-3F76BBDE250E}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="truncate table [CreditRating].[tblFactLoanECScore]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\FactLoanECResult\Execute SQL Task 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ECD1640F-CDE9-4240-A726-3FA6E15DBBDF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C9472AF5-DC00-4F03-B85C-3F76BBDE250E}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::GetReportingDateID"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="DimReportingDateID"
                SQLTask:DtsVariableName="User::DimReportingDateID" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\FactLoanECResult.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{BDA4019F-5E5A-48B8-AE17-264EBBEE5432}"
          DTS:From="Package\FactLoanECResult\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\FactLoanECResult\Apply EC For FactLoan" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\FactLoanECResult.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{AFC6D4BF-02EA-41B1-997D-5EA7D0413581}"
          DTS:From="Package\FactLoanECResult\Execute SQL Task 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\FactLoanECResult\Execute SQL Task" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Package Initialization"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:DTSID="{13BFB971-BA06-43BA-B9B8-CD7A1F76720F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Package Initialization"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{39771EF7-052F-4D68-A4D0-D9C0874B3645}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d00adcc592cb4d0f81f18b8103908f33"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::LogPath,User::OLEDBConnString_ALR">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Settings.get_Default():ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Sett" +
    "ings")]

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="st_d00adcc592cb4d0f81f18b8103908f33.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_d00adcc592cb4d0f81f18b8103908f33.csproj</RootNamespace>
    <AssemblyName>ST_d00adcc592cb4d0f81f18b8103908f33.csproj</AssemblyName>
    <ProjectGuid>{F9E2208F-D363-4B2A-9A77-2C13975665FC}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
//using System.Windows.Forms;
using System.IO;

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            string sMsg = null;
            string sLogPath = Dts.Variables["LogPath"].Value.ToString();

            if (!Directory.Exists(sLogPath))
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                sMsg = string.Format("Package Init: Log Path {0} does not exist", sLogPath);
                throw new Exception(sMsg);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_d00adcc592cb4d0f81f18b8103908f33</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_d00adcc592cb4d0f81f18b8103908f33</msb:DisplayName>
		<msb:ProjectId>{355691DD-1AAA-44F4-8DF6-D9EA005FF1BA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_d00adcc592cb4d0f81f18b8103908f33.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d00adcc592cb4d0f81f18b8103908f33.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d00adcc592cb4d0f81f18b8103908f33.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d00adcc592cb4d0f81f18b8103908f33.csproj.dll">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
CAAYAFMAKQCTAIAALgAbAC0BLgAjAC0BLgBjAFMBLgALALUALgATAP0ALgAzAP0ALgArAC0BLgA7
ADMBLgBDAC0BLgBbAEoBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCwAAIAAQADAAMAAACEAS8A
AAADAjQAAAAnAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAC9FqqPAAAAAAAAjQAA
AAQAAAAAAAAAAAAAAAEAxgAAAAAABAAAAAAAAAAAAAAAAQDPAAAAAAAMAAAAAAAAAAAAAAAKAAoB
AAAAAAwAAAAAAAAAAAAAAAoA8wQAAAAAAAAAAAEAAACxBQAABQAEAAAAAAAAPE1vZHVsZT4AU1Rf
ZDAwYWRjYzU5MmNiNGQwZjgxZjE4YjgxMDM5MDhmMzMuY3Nwcm9qLmRsbABSZXNvdXJjZXMAU1Rf
ZDAwYWRjYzU5MmNiNGQwZjgxZjE4YjgxMDM5MDhmMzMuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGlu
Z3MAU2NyaXB0TWFpbgBTVF9kMDBhZGNjNTkyY2I0ZDBmODFmMThiODEwMzkwOGYzMy5jc3Byb2oA
U2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9u
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNl
TWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3Rv
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVm
YXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFp
bHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0
cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJ
U1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMA
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVl
AFRvU3RyaW5nAFN5c3RlbS5JTwBEaXJlY3RvcnkARXhpc3RzAHNldF9UYXNrUmVzdWx0AFN0cmlu
ZwBGb3JtYXQARXhjZXB0aW9uAFNUX2QwMGFkY2M1OTJjYjRkMGY4MWYxOGI4MTAzOTA4ZjMzLmNz
cHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAB/UwBUAF8AZAAwADAAYQBkAGMA
YwA1ADkAMgBjAGIANABkADAAZgA4ADEAZgAxADgAYgA4ADEAMAAzADkAMAA4AGYAMwAzAC4AYwBz
AHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAA9MAG8A
ZwBQAGEAdABoAABTUABhAGMAawBhAGcAZQAgAEkAbgBpAHQAOgAgAEwAbwBnACAAUABhAHQAaAAg
AHsAMAB9ACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AAAAAAA0x3/Cy95aTKPZ9HOZfFSj
AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZ
AwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIB
DhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBAABAg4F
AAIODhwEBwIODkcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTVF9kMDBhZGNjNTkyY2I0ZDBmODFmMThiODEw
MzkwOGYzMy5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMgAACAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAAwC4AAAAAAAAAAAAA3i4AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAANAuAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAAPADAAAAAAAAAAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCqj70WAAABAKqPvRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAA
MAAwADAANABiADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZAAwADAAYQBkAGMAYwA1ADkAMgBjAGIANABkADAAZgA4ADEAZgAxADgAYgA4ADEAMAAzADkA
MAA4AGYAMwAzAC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA1ADgAMgAxAC4AMwA2ADcANwA4AAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAVABfAGQAMAAwAGEAZABjAGMANQA5ADIAYwBiADQAZAAwAGYAOAAxAGYAMQA4
AGIAOAAxADAAMwA5ADAAOABmADMAMwAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwA
ZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAw
ADEAMgAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBkADAA
MABhAGQAYwBjADUAOQAyAGMAYgA0AGQAMABmADgAMQBmADEAOABiADgAMQAwADMAOQAwADgAZgAz
ADMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGQAMAAwAGEAZABjAGMANQA5ADIAYwBiADQAZAAwAGYAOAAxAGYAMQA4AGIAOAAx
ADAAMwA5ADAAOABmADMAMwAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAyADEALgAzADYANwA3ADgAAAAAAEgADwABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAAyADEALgAzADYANwA3ADgA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADwPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F1DE3A24-93C5-45C0-8531-BEC2811DD8E2}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\FactLoanECResult" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="185,42"
          Id="Package\FactLoanECResult\Apply EC For FactLoan"
          TopLeft="31.8867924528302,153.132075471698" />
        <NodeLayout
          Size="163,42"
          Id="Package\FactLoanECResult\Execute SQL Task"
          TopLeft="36,84" />
        <NodeLayout
          Size="172,42"
          Id="Package\FactLoanECResult\Execute SQL Task 1"
          TopLeft="35,13" />
        <EdgeLayout
          Id="Package\FactLoanECResult.PrecedenceConstraints[Constraint]"
          TopLeft="120.943396226415,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.1320754716981"
              Start="0,0"
              End="0,19.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanECResult.PrecedenceConstraints[Constraint 1]"
          TopLeft="119.25,55">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="277,250"
          Size="277,294"
          Id="Package\FactLoanECResult"
          TopLeft="144.084905660377,51.084905660377" />
        <NodeLayout
          Size="223,44"
          Id="Package\Package Initialization"
          TopLeft="790.556603773585,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="790.556603773585,27.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-369.471698113208,170.584905660377"
              Start="0,0"
              End="-361.971698113208,170.584905660377">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-180.735849056604,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-180.735849056604,0"
                    Point2="-184.735849056604,0"
                    Point3="-184.735849056604,4" />
                  <mssgle:LineSegment
                    End="-184.735849056604,166.584905660377" />
                  <mssgle:CubicBezierSegment
                    Point1="-184.735849056604,166.584905660377"
                    Point2="-184.735849056604,170.584905660377"
                    Point3="-188.735849056604,170.584905660377" />
                  <mssgle:LineSegment
                    End="-361.971698113208,170.584905660377" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\FactLoanECResult\Apply EC For FactLoan">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195,42"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC XML to SQL"
          TopLeft="13.9905660377358,87.1603773584906" />
        <NodeLayout
          Size="166,42"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\Apply FactLoan EC"
          TopLeft="11.5,169.820754716981" />
        <NodeLayout
          Size="178,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR"
          TopLeft="17.5,5.5" />
        <NodeLayout
          Size="206,44"
          Id="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR"
          TopLeft="5.5,274.443396226415" />
        <EdgeLayout
          Id="Package\FactLoanECResult\Apply EC For FactLoan.Paths[Output 0]"
          TopLeft="111.490566037736,129.160377358491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.9905660377358,40.6603773584904"
              Start="0,0"
              End="-16.9905660377358,33.1603773584904">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3301886792452" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3301886792452"
                    Point2="0,20.3301886792452"
                    Point3="-4,20.3301886792452" />
                  <mssgle:LineSegment
                    End="-12.9905660377358,20.3301886792452" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.9905660377358,20.3301886792452"
                    Point2="-16.9905660377358,20.3301886792452"
                    Point3="-16.9905660377358,24.3301886792452" />
                  <mssgle:LineSegment
                    End="-16.9905660377358,33.1603773584904" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanECResult\Apply EC For FactLoan.Paths[OLE DB Source Output]"
          TopLeft="108.995283018868,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.6603773584906"
              Start="0,0"
              End="0,30.1603773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.1603773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FactLoanECResult\Apply EC For FactLoan.Paths[ECResult]"
          TopLeft="94.5,211.820754716981">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14,62.622641509434"
              Start="0,0"
              End="14,55.122641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.311320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.311320754717"
                    Point2="0,31.311320754717"
                    Point3="4,31.311320754717" />
                  <mssgle:LineSegment
                    End="10,31.311320754717" />
                  <mssgle:CubicBezierSegment
                    Point1="10,31.311320754717"
                    Point2="14,31.311320754717"
                    Point3="14,35.311320754717" />
                  <mssgle:LineSegment
                    End="14,55.122641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FactLoanECResult\Apply EC For FactLoan\FactLoan EC Results to ALR">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>