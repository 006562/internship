<?xml version="1.0" encoding="utf-8" ?>
<main>
  <Parameters>
    <Parameter Name='DBName'	Type='SqlParameter' Value='DAL_SEC_ALR' SqlDbType='VarChar' TableName='DL'  />
  </Parameters>
  <Query>
    <![CDATA[
Declare @vchSQL  varchar(max)
Declare @bigsql varchar(max)

set @vchSQL = 'use [' + @DBName + ']
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N''[dbo].[Usp_GetRatingAgencyReport_Supplementary_Security]'') AND type in (N''P'', N''PC''))
DROP PROCEDURE [dbo].[Usp_GetRatingAgencyReport_Supplementary_Security]
'
exec (@vchSQL)

--**************************************************
--USP_GetRatingAgencyReport_Supplementary_Security
--**************************************************
Set @vchSQL ='CREATE PROCEDURE [dbo].[Usp_GetRatingAgencyReport_Supplementary_Security]  
	@PoolId  varchar(10)
,	@LTVPassNo varchar(10)
,	@PivotCount  tinyint = null

AS  

BEGIN  

SET NOCOUNT ON

declare @SQL nvarchar(Max)
declare @SeqNo int = 1
declare @DimPoolId bigint
set @DimPoolId = CAST(@PoolId as bigint)
 
SET @SQL = N''''
declare @Temp table (DimPoolId bigint not null,
                     DimConsolidationID bigint not null,
                     DimLoanId bigint not null,
                     SeqNo int not null,
                     DimSecurityId bigint,
                     DebtChargePosition varchar(20),
                     IsIncluded bit null,
                     LoanSecurityDirectLinkage tinyint null
                     --, PRIMARY KEY(DimConsolidationID, DimLoanId, DimSecurityId)
                     )

insert @Temp
select FC.DimPoolID, FC.DimConsolidationID,  FCL.DimLoanId,
ROW_NUMBER() OVER (PARTITION BY fls.DimLoanID ORDER BY  fs.IsIncluded DESC, fs.SecurityValuationAmt DESC, fls.SecurityNo DESC) as SeqNo,
FLS.DimSecurityId, FLS.DebtChargePosition, fs.IsIncluded, fls.IsIncluded
from tblFactConsolidation FC
inner join tblFactConsolidationLoan FCL on FC.DimPoolID = FCL.DimPoolID
                                           and FC.DimConsolidationID = FCL.DimConsolidationID
                                           and FC.LTVPassNo = FCL.LTVPassNo
Left outer JOIN dbo.tblFactLoanSecurity FLS ON FCL.DimPoolId = FLS.DimPoolId And FCL.DimLoanId = FLS.DimLoanId
Left outer join dbo.tblFactSecurity FS on FCL.DimPoolID = FS.DimPoolID and FLS.DimSecurityID = FS.DimSecurityID
 where FC.DimPoolID = '''' + @PoolId + '''' and FC.LTVPassNo = '''''''''''' + @LTVPassNo + ''''''''''''''''
 
-- print @SQL

If @PivotCount is NULL or @PivotCount = 0
   select @PivotCount = MAX(SecurityCount)
   from
   (select fcl.DimLoanID, COUNT(DimSecurityId) as SecurityCount
    from tblFactConsolidationLoan fcl
    inner join tblFactLoanSecurity fls on fcl.DimPoolID = fls.DimPoolID and fcl.DimLoanId = fls.DimLoanID
    where fcl.DimPoolID = @DimPoolId and fcl.LTVPassNo = @LTVPassNo
    group by fcl.DimLoanId) x
 
 print @PivotCount
 SET @SQL = @SQL + N''''
 
 
;WITH x
AS
(
    select T.DimConsolidationID, T.DimLoanId, T.DimSecurityId, SeqNo,
           DS.SecurityNo, DS.PropertyTypeDesc, DS.PostCode, DS.Suburb, DS.State, DS.Region, DS.Nature, DS.OccupancyPurposeDesc,
           DS.ValuationType, FS.SecurityValuationAmt, FS.SecurityValuationDate, DS.Type, DS.Tenure, T.DebtChargePosition, ds.MortgageNumber,
           DS.CountryCode, T.IsIncluded, T.LoanSecurityDirectLinkage
    from @Temp T
    left outer join tblFactSecurity FS on T.DimPoolID = FS.DimPoolID and T.DimSecurityId = FS.DimSecurityID
    left outer join tblDimSecurity DS on FS.DimPoolID = DS.DimPoolID and FS.DimSecurityId = DS.DimSecurityID
)

   SELECT
    CONVERT(datetime, cast(fc.DimReportingDateId as varchar), 112) as ReportingDate
   ,dl.OrganisationCode
   ,dt.TrustID
   ,dls.SoldSecuritisationNo as SoldSecuritisationNumber
   ,fc.DimPoolId as PoolCutID
   ,fc.ConsolidationNo as PostConsolidationID
   ,fl.AccountNo
   ,dl.LoanStatus
   ,fl.CurrentPrincipalBalance
   ''''
--   print @SQL
   declare @SQL1 nvarchar(Max)
   declare @SQL2 nvarchar(Max) = N''''''''
   declare @SQL3 nvarchar(Max)
   declare @SQL4 nvarchar(Max)
   declare @SQL5 nvarchar(Max) = N''''''''
      
   SET @SQL1 = N''''
   , t$.SecurityNo as Security$_SecurityNumber
   , CASE
        WHEN t$.SecurityNo is not null THEN IsNull(t$.LoanSecurityDirectLinkage, 0)
        ELSE null
     END as Security$_LoanSecurityDirectLinkage
   , t$.PropertyTypeDesc as Security$_PropertyTypeDescription
   , CASE
        WHEN dl.OrganisationCode = ''''''''NZD'''''''' THEN t$.Tenure
        ELSE null
     END as Security$_TenureCode
   , CASE
        WHEN dl.OrganisationCode = ''''''''AUS'''''''' THEN t$.Nature
        ELSE null
     END as Security$_Nature
   , CASE
        WHEN dl.OrganisationCode = ''''''''AUS'''''''' THEN t$.OccupancyPurposeDesc
        ELSE null
     END as Security$_OccupancyPurposeDescription
   , t$.PostCode as Security$_PostCode
   , t$.Suburb as Security$_Suburb
   , t$.State as Security$_State
   , t$.Region as Security$_Region
   , cast(t$.SecurityValuationAmt as decimal(15, 4)) as Security$_ValuationAmount
   , t$.SecurityValuationDate as Security$_ValuationDate
   , t$.ValuationType as Security$_ValuationType
   , t$.Type as Security$_SecurityType
   , t$.MortgageNumber as Security$_MortgageNumber   
   , t$.DebtChargePosition as Security$_SecurityDebtChargePosition
   , t$.CountryCode as Security$_CountryCode
   , t$.IsIncluded as Security$_VALID_FLAG''''

SET @SQL3 = N''''
FROM dbo.tblFactConsolidation FC
INNER JOIN dbo.tblFactConsolidationLoan FCL ON FC.DimPoolId=FCL.DimPoolId And FC.DimConsolidationId=FCL.DimConsolidationId And FC.LTVPassNo=FCL.LTVPassNo
inner JOIN dbo.tblFactLoan FL ON FCL.DimLoanId=FL.DimLoanId And FCL.DimPoolId=FL.DimPoolId
inner JOIN dbo.tblDimLoan DL ON FL.DimLoanId=DL.DimLoanId And FL.DimPoolId=DL.DimPoolId
inner JOIN dbo.view_DimTrust dt on fl.DimTrustID = dt.DimTrustID
left outer join dbo.tblDimLoanSupplementary dls on dl.DimLoanID = dls.DimLoanID
''''

SET @SQL4 = N''''
left hash join
(select * from x where x.SeqNo = $) t$ on fc.DimConsolidationID = t$.DimConsolidationID and dl.DimLoanId = t$.DimLoanId
''''
   
   WHILE (@SeqNo <= @PivotCount)
      begin
         SET @SQL2 = @SQL2 + REPLACE(@SQL1, ''''$'''', cast(@SeqNo as nvarchar))
         SET @SQL5 = @SQL5 + REPLACE(@SQL4, ''''$'''', cast(@SeqNo as nvarchar))
         SET @SeqNo = @SeqNo + 1
      end
--print @SQL2
--print @SQL5

SET @SQL = @SQL + @SQL2 + @SQL3 + @SQL5 + N''''
WHERE fc.DimPoolId = '''' + @PoolId + ''''  AND  fc.LTVPassNo = '''''''''''' + @LTVPassNo + ''''''''''''''''


exec sp_executesql @SQL
END

'
SET @BigSQL = 'USE [' + @DBName + ']; EXEC sp_executesql N''' + @vchSQL + '''';
--PRINT @BigSQL
EXEC (@BigSQL)
]]>
  </Query>

</main>
