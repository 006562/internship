<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/1/2014 5:09:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AU2104SDVDEV23"
  DTS:CreatorName="TSYDEV\tfs_L048057"
  DTS:DTSID="{4B77B557-8314-4D55-A6DB-65DAE0420D54}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.4100.1"
  DTS:LocaleID="3081"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="TaskPrepareSessionVariables"
  DTS:PackageType="5"
  DTS:VersionBuild="154"
  DTS:VersionGUID="{999BD326-E7F6-446C-8C87-A10CD1647E2F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OLEDB_TaskProcess]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{9FF16C3D-7858-49E3-A509-54A4D3FD2F36}"
      DTS:ObjectName="OLEDB_TaskProcess">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::_OLEDBConnString_TaskProcess]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DAL_SEC;Initial Catalog=TaskProcess;Provider=SQLNCLI10.1;Integrated Security=SSPI;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PrepareSessionVariables.log]"
      DTS:CreationName="FILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{C8D2D4E0-4AC4-4AAB-B525-15FA83C64863}"
      DTS:ObjectName="PrepareSessionVariables.log">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LogPath] + @[System::PackageName] + "_" +  (DT_WSTR, 4)DATEPART("yyyy", @[System::StartTime]) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mm", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("dd", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("hh", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("mi", @[System::StartTime]), 2) + RIGHT("0" + (DT_WSTR, 2)DATEPART("ss", @[System::StartTime]), 2)  +  ".log"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="E:\TSSWCFServices\TaskProcessServices\R4.Task\Logs\TaskPrepareSessionVariables_20160629140813.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SessionContextLookup]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{B9B1E42F-E634-40D9-8713-45F7472D3F56}"
      DTS:ObjectName="SessionContextLookup">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:IndexPosition="1"
              DTS:ObjectName="VariableName"
              DTS:DTSID="{30883BF2-B16E-44BB-A07D-1A1A3A1D14A0}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="20"
              DTS:ObjectName="SessionContextId"
              DTS:DTSID="{8727095B-C6FB-40D6-96A6-63F62E2211BD}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SessionVariables]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{3F052D5E-642A-4B19-AC58-6D57E732A56D}"
      DTS:ObjectName="SessionVariables">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="72"
              DTS:IndexPosition="1"
              DTS:ObjectName="SessionID"
              DTS:DTSID="{B5FB3271-6D46-46F1-88EE-2A7EECD16D74}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="3"
              DTS:ObjectName="CriteriaId"
              DTS:DTSID="{9FF0C183-20F4-4457-8380-DF8C9ADF1957}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:ObjectName="CriteriaName"
              DTS:DTSID="{C1E884E4-D928-4532-BEF0-140AA35146EF}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:ObjectName="CriteriaDescription"
              DTS:DTSID="{1DDB80F0-97C4-4058-A1A7-F383C1E9C5DD}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:ObjectName="CriteriaSetTypeCode"
              DTS:DTSID="{BB41B966-9219-4254-BF18-505355CA389E}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:ObjectName="CriteriaTypeCode"
              DTS:DTSID="{D7D60937-7698-4239-92DF-AE3E86D1491D}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="3"
              DTS:ObjectName="IsEnable"
              DTS:DTSID="{F3C93E1B-EE5B-49E5-B40A-48ECFDE1D5D0}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="200"
              DTS:ObjectName="ECPassNoCode"
              DTS:DTSID="{9C1FE42A-1D13-41F2-A055-C34911B3C276}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="50000"
              DTS:ObjectName="XMLSqlQueryEC"
              DTS:DTSID="{55D2A8BD-0827-43B2-90CB-D433213267D2}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="3"
              DTS:ObjectName="SequenceNo"
              DTS:DTSID="{FC7A9916-EB68-4108-A6B4-B4DD13B878C4}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="20000"
              DTS:ObjectName="CriteriaSQL"
              DTS:DTSID="{10448B9B-65BC-4B89-8190-D7C018003D31}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="PrepareSessionVariables.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{76B1BBBD-ED22-43AD-AA09-A6F6F95F7FF9}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FFB6DBA5-A54D-4407-B77B-A757B1183350}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ActionMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66F00A1C-0FFF-49F7-BF70-420864DAA2DE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AppDomain">
      <DTS:VariableValue
        DTS:DataType="8">Task</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09867979-F686-4BA6-B4F8-1FE3C2C98369}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CriteriaSetCode">
      <DTS:VariableValue
        DTS:DataType="8">RBAMonitorUpdateTaskSessionVariables</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB3C2F6F-BC66-4352-9614-E21A3D6889D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBName_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">TaskProcess</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{45B4C4BD-49F6-4C72-86DD-8D73CEAC0EEF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DBServer_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">DAL_SEC</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AAD2FC33-A6EC-45DC-AF5D-67260805A982}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DEBUG">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84EEB97F-AD2F-4F5E-BB3A-4D9F3187CFD8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\TSSWCFServices\TaskProcessServices\R4.Task\Logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{92F9B6C9-C5E2-4DBC-A06D-CEB05C78FBE3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SessionID">
      <DTS:VariableValue
        DTS:DataType="8">FD112DAC-791F-4229-B2D1-08CDBA98060A</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80F221E3-366C-4F10-B5BB-1305F5FAE2CD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DBServer_TaskProcess] + &quot;;Initial Catalog=&quot; +@[User::DBName_TaskProcess] + &quot;;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_ConnString_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=TaskProcess;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D04FAEA9-9898-4295-8DF6-A49BD2A017F7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="_CriteriaSetID">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{52BBC8BC-3F39-435D-9267-832D1E3F7E09}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_WSTR, 10 )@[User::_CriteriaSetID]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_CriteriaSetID_str">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A06178D2-E1B2-42B4-ABD6-39355B7B18A0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::AppDomain] + &quot;.SessionContext&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_DestinationTable">
      <DTS:VariableValue
        DTS:DataType="8">Task.SessionContext</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7A82CFC6-2468-4174-8292-3D16B0892AA6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_ECPassNo">
      <DTS:VariableValue
        DTS:DataType="8">CriteriaPass1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6BEEEBB4-2A54-4943-9333-D938C04CE457}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_ECPassNo_List">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C4F428CD-A5CA-4793-B505-F2945F496552}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DBServer_TaskProcess] + &quot;;Initial Catalog=&quot; +@[User::DBName_TaskProcess] + &quot;;Provider=SQLNCLI10.1;Integrated Security=SSPI;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_OLEDBConnString_TaskProcess">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DAL_SEC;Initial Catalog=TaskProcess;Provider=SQLNCLI10.1;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06C0FBE3-887A-467E-8B1C-31AE0BAA97AF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select distinct &quot; + @[User::AppDomain] + &quot;.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode&quot; +&#xA;&quot; from &quot; + @[User::AppDomain] + &quot;.Criteria c inner join &quot; + @[User::AppDomain] + &quot;.CriteriaSet cs on c.CriteriaSetId = cs.CriteriaSetId &#xA;where  cs.CriteriaSetTypeId = &quot; + @[User::_CriteriaSetID_str] +  &quot; and IsEnable = 1 &#xA;order by ECPassNoCode&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_query_GetCriteriaPassNoList">
      <DTS:VariableValue
        DTS:DataType="8">select distinct Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode from Task.Criteria c inner join Task.CriteriaSet cs on c.CriteriaSetId = cs.CriteriaSetId 
where  cs.CriteriaSetTypeId = 0 and IsEnable = 1 
order by ECPassNoCode</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5A5E152-75BF-4448-BAAE-E2CD9A450A35}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;select &#x9; c.CriteriaSetId&#xA;&#x9;, CriteriaId&#xA;&#x9;, CriteriaName&#xA;&#x9;, CriteriaDescription&#xA;&#x9;, Task.GetDictonaryCodeByCodeId('CriteriaSetType', cs.CriteriaSetTypeId) as CriteriaSetTypeCode&#xA;&#x9;, Task.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode&#xA;&#x9;, IsEnable&#xA;&#x9;, Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode&#xA;&#x9;, XMLSqlQueryEC&#xA;&#x9;, SequenceNo&#xA;    ,cast(null as nvarchar(max)) as CriteriaSQL &#xA;from &quot; + @[User::AppDomain] + &quot;.Criteria c &#xA;inner join &quot; +  @[User::AppDomain]+ &quot;.CriteriaSet cs on c.CriteriaSetId = cs.CriteriaSetId&#xA; where cs.CriteriaSetTypeId = &quot; + @[User::_CriteriaSetID_str] + &#xA;         &quot; and &quot; + @[User::AppDomain] +  &quot;.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) = '&quot; +  @[User::_ECPassNo] + &quot;' and IsEnable = 1 &#xA;order by SequenceNo&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_query_GetCriterias">
      <DTS:VariableValue
        DTS:DataType="8">select 	 c.CriteriaSetId
	, CriteriaId
	, CriteriaName
	, CriteriaDescription
	, Task.GetDictonaryCodeByCodeId('CriteriaSetType', cs.CriteriaSetTypeId) as CriteriaSetTypeCode
	, Task.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode
	, IsEnable
	, Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode
	, XMLSqlQueryEC
	, SequenceNo
    ,cast(null as nvarchar(max)) as CriteriaSQL 
from Task.Criteria c 
inner join Task.CriteriaSet cs on c.CriteriaSetId = cs.CriteriaSetId
 where cs.CriteriaSetTypeId = 0 and Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) = 'CriteriaPass1' and IsEnable = 1 
order by SequenceNo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14C4D848-3AF3-4560-A34D-BF7472955BD9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;declare @CriteriaSetCode nvarchar(200) = '&quot; + @[User::CriteriaSetCode] + &#xA;&quot;'  select &quot; + @[User::AppDomain] + &quot;.GetDictionaryCodeID('CriteriaSetType', @CriteriaSetCode)  as CriteriaSetID&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_query_GetCriteriaSetCodeId">
      <DTS:VariableValue
        DTS:DataType="8">declare @CriteriaSetCode nvarchar(200) = 'RBAMonitorUpdateTaskSessionVariables'  select Task.GetDictionaryCodeID('CriteriaSetType', @CriteriaSetCode)  as CriteriaSetID</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A9D81A7B-FE62-45D0-BBE1-E8EAE96C6F49}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Select&#x9;VariableName, SessionContextId &#xA;From &quot; + @[User::AppDomain] + &quot;.SessionContext sc &#xA;Where SessionId ='&quot; + @[User::SessionID] + &quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_query_SessionContextLookup">
      <DTS:VariableValue
        DTS:DataType="8">Select	VariableName, SessionContextId 
From Task.SessionContext sc 
Where SessionId ='FD112DAC-791F-4229-B2D1-08CDBA98060A'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0ACE6D0-95FC-415D-8A44-0A1CD35E63B6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Update &quot; +   @[User::AppDomain] + &quot;.SessionContext&#xA;Set&#x9;VariableValue = ?&#xA;&#x9;, IsConstant = ?&#xA;&#x9;, IsKey = ?&#xA;&#x9;, KeyIndex = ?&#xA;&#x9;, VariableDataType = ?&#xA;Where SessionId = ? &#xA;And VariableName = ?&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="_query_updateSessionContext">
      <DTS:VariableValue
        DTS:DataType="8">Update Task.SessionContext
Set	VariableValue = ?
	, IsConstant = ?
	, IsKey = ?
	, KeyIndex = ?
	, VariableDataType = ?
Where SessionId = ? 
And VariableName = ?</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,13,OnInformation</DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{76B1BBBD-ED22-43AD-AA09-A6F6F95F7FF9}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{025B88C1-ACA4-4D16-B994-2175B5BBCE3D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{78008579-AA1C-4DB7-9E1C-A534D6D4E668}"
        DTS:ObjectName="{78008579-AA1C-4DB7-9E1C-A534D6D4E668}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::_ECPassNo_List" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Apply EC for Session Variables"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{1D6499B1-1A49-4510-BF4B-46CACF52A8EA}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apply EC for Session Variables"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Apply Session Variables EC"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ECResultBuffer ECResultBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ECResultBuffer)
        {
            ECResultBuffer.SetEndOfRowset();
            ECResultBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ECResult"))
            {
                ECResultBuffer = new ECResultBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnStringTaskProcess
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_ConnString_TaskProcess"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String OLEDBConnStringTaskProcess
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_OLEDBConnString_TaskProcess"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;


[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private SqlConnection _SqlConn;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        bool bFireAgain = true;
        string sMsg = "";
        string sConnString = "";

        if (Row.IsEnable)
        {
            if (Row.ConnectionString_IsNull)
            {
                sConnString =  Variables.ConnStringTaskProcess.ToString();
            }
            else
            {
                if (Row.ConnectionString.ToString() == "")
                {
                    sConnString = Variables.ConnStringTaskProcess.ToString();
                }
                else
                {
                    sConnString = Row.ConnectionString.ToString();
                }
            }

            sMsg = "Query Connection string : " + sConnString;

            ComponentMetaData.FireInformation(1000, "Apply Session Variables EC", sMsg, "", 0, ref bFireAgain);
            _SqlConn = new SqlConnection(sConnString);
            _SqlConn.Open();

            byte[] byteQuery = Row.CriteriaSQL.GetBlobData(0, Convert.ToInt32(Row.CriteriaSQL.Length));
            string sQuery = System.Text.Encoding.Unicode.GetString(byteQuery).Trim();
            string sECId = string.Empty;
            //MessageBox.Show(Row.CriteriaDescription.ToString());
            //MessageBox.Show(sQuery);
            try
            {
                SqlCommand _cmd = new SqlCommand(sQuery, _SqlConn);
                _cmd.CommandTimeout = 0;
                SqlDataReader dr = _cmd.ExecuteReader();
                int RowCount = 0;
                while (dr.Read())
                {
                    ECResultBuffer.AddRow();

                    ECResultBuffer.VariableName = Convert.ToString(dr["VariableName"]);
                    ECResultBuffer.VariableValue = Convert.ToString(dr["VariableValue"]);
                    ECResultBuffer.VariableDataType = Convert.ToString(dr["VariableDataType"]);
                    ECResultBuffer.IsConstant = Convert.ToSByte(dr["IsConstant"]);
                    ECResultBuffer.IsKey = Convert.ToSByte(dr["IsKey"]);
                    ECResultBuffer.KeyIndex = Convert.ToInt16(dr["IsKey"]);
                    ECResultBuffer.SessionId = (System.Guid)dr["SessionId"];
                    //ECResultBuffer.SessionId = new Guid(Row.SessionID.ToString());
                    RowCount++;
                }
                dr.Close();
                dr = null;
                sMsg = string.Format("{0} : {1}", Row.CriteriaName.ToString(), RowCount);
                ComponentMetaData.FireInformation(1000, "Apply Session Variables EC", sMsg, "", 0, ref bFireAgain);

                _SqlConn.Close();
                _SqlConn = null;

            }
            catch (Exception ex)
            {
                //TODO Logging
                string sEx = string.Format("Failed ECId:{0}, Query:{1}{2}{3}", sECId, sQuery, Environment.NewLine, ex.Message);
                throw new ApplicationException(sEx);
                //MessageBox.Show(ex.Message);
                //throw ex;
            }
        }
        else
        {
            sMsg = string.Format("EC {0} is not enabled and is not applied", Row.CriteriaName);
            ComponentMetaData.FireInformation(1000, "Apply Session Variables EC", sMsg, "", 0, ref bFireAgain);
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Boolean IsEnable
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[0]);
        }
    }
    public bool IsEnable_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String SessionID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool SessionID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ConnectionString
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool ConnectionString_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int64 CriteriaId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaId_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ECResultBuffer: ScriptBuffer

{
    public ECResultBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid SessionId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool SessionId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VariableName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool VariableName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VariableValue
    {
        set
        {
            this[2] = value;
        }
    }
    public bool VariableValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VariableDataType
    {
        set
        {
            this[3] = value;
        }
    }
    public bool VariableDataType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public SByte IsConstant
    {
        set
        {
            this[4] = value;
        }
    }
    public bool IsConstant_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public SByte IsKey
    {
        set
        {
            this[5] = value;
        }
    }
    public bool IsKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 KeyIndex
    {
        set
        {
            this[6] = value;
        }
    }
    public bool KeyIndex_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_0d913097477f4721bbf9b445336e7954.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_0d913097477f4721bbf9b445336e7954.csproj</RootNamespace>
    <AssemblyName>SC_0d913097477f4721bbf9b445336e7954.csproj</AssemblyName>
    <ProjectGuid>{BD2BE24C-2500-4FDA-A23A-788D66B21839}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0d913097477f4721bbf9b445336e7954.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0d913097477f4721bbf9b445336e7954.csproj")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>sc_0d913097477f4721bbf9b445336e7954</msb:CodeName>
		<msb:DisplayName>sc_0d913097477f4721bbf9b445336e7954</msb:DisplayName>
		<msb:ProjectId>{7955F303-4FEF-459E-A5F1-0AF9E5EA8C8A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_0d913097477f4721bbf9b445336e7954.csproj"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_0d913097477f4721bbf9b445336e7954.csproj.Properties.Settings.get_Default():SC_0d913097477f4721bbf9b445336e7954.csproj.Properties.Sett" +
    "ings")]

namespace SC_0d913097477f4721bbf9b445336e7954.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_0d913097477f4721bbf9b445336e7954.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_0d913097477f4721bbf9b445336e7954.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_0d913097477f4721bbf9b445336e7954.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0d913097477f4721bbf9b445336e7954.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0d913097477f4721bbf9b445336e7954.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0d913097477f4721bbf9b445336e7954.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANt/h1YAAAAAAAAAAOAAAiELAQsAACgAAAAIAAAAAAAAbkcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABRHAABXAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
RwAAAAAAAEgAAAACAAUAyCcAAEwfAAABAAAAAAAAABAnAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqZgJ7DgAACgJ7DwAACheUbxIAAAp0BwAAASoiAhcoEQAACipSAnsOAAAKAnsPAAAKGJRv
EwAACioiAhgoEQAACipSAnsOAAAKAnsPAAAKGZRvEwAACioiAhkoEQAACipSAnsOAAAKAnsPAAAK
GpRvEwAACioiAhooEQAACipSAnsOAAAKAnsPAAAKG5RvFAAACioiAhsoEQAACioeAigVAAAKKh4C
KBYAAAoqKgIDBAUoDQAACio6AhYDjAgAAAEoFwAACipaAywIAhYoGAAACipyAQAAcHMZAAAKeiYC
FwMoFwAACipaAywIAhcoGAAACipyAQAAcHMZAAAKeiYCGAMoFwAACipaAywIAhgoGAAACipyAQAA
cHMZAAAKeiYCGQMoFwAACipaAywIAhkoGAAACipyAQAAcHMZAAAKejoCGgOMGQAAASgXAAAKKloD
LAgCGigYAAAKKnIBAABwcxkAAAp6OgIbA4wZAAABKBcAAAoqWgMsCAIbKBgAAAoqcgEAAHBzGQAA
Cno6AhwDjBoAAAEoFwAACipaAywIAhwoGAAACipyAQAAcHMZAAAKeh4CKBoAAAoqHgIoGwAACioe
AigWAAAKKn4CKBwAAAoCAnMqAAAGfQEAAAQCAnMrAAAGfQIAAAQqAAADMAQATwAAAAAAAAAEcp4A
AHAabx0AAAosFQIFAgMoHgAACg4EcwEAAAZvKAAABgVvHwAACiwjAgJ7BAAABBdYfQQAAAQCewQA
AAQXMwwCbyQAAAYCKCUAAAYqBipuAnsDAAAELBICewMAAARvIAAABgIUfQMAAAQqAAAAEzAFAD0A
AAABAAARFgorLgQGlA4Ecq4AAHAoIAAACjMZAgUGmgIEBpQoHgAACg4EcxAAAAZ9AwAABAYXWAoG
AzLOAm8nAAAGKgYqSisHAgNvKQAABgNvDgAABi3xKgYqOgIoIQAACgIDfQUAAAQqOgIoIQAACgID
fQYAAAQqlgJ7BgAABG8iAAAKcsAAAHBvIwAACigkAAAKbyUAAAp0GwAAASqWAnsGAAAEbyIAAApy
8AAAcG8jAAAKKCQAAApvJQAACnQbAAABKh4CKCcAAAoqHgIoKAAACioAABswBwCzAgAAAgAAERcK
cioBAHALcioBAHAMA28CAAAGOWoCAAADbwkAAAYsEwJ7AgAABG8sAAAGbykAAAoMKzYDbwgAAAZv
KQAACnIqAQBwKCoAAAosEwJ7AgAABG8sAAAGbykAAAoMKwwDbwgAAAZvKQAACgxyLAEAcAgoKwAA
CgsCKCwAAAog6AMAAHJiAQBwB3IqAQBwFhIAby0AAAoCCHMuAAAKfQcAAAQCewcAAARvLwAACgNv
BAAABhYDbwQAAAZvMAAACigxAAAKbzIAAAoNKDMAAAoJbzQAAApvNQAAChMEfjYAAAoTBREEAnsH
AAAEczcAAAoTBhEGFm84AAAKEQZvOQAAChMHFhMIONUAAAACewMAAARvHwAABgJ7AwAABBEHcpgB
AHBvOgAACig7AAAKbxMAAAYCewMAAAQRB3KyAQBwbzoAAAooOwAACm8VAAAGAnsDAAAEEQdyzgEA
cG86AAAKKDsAAApvFwAABgJ7AwAABBEHcvABAHBvOgAACig8AAAKbxkAAAYCewMAAAQRB3IGAgBw
bzoAAAooPAAACm8bAAAGAnsDAAAEEQdyBgIAcG86AAAKKD0AAApvHQAABgJ7AwAABBEHchICAHBv
OgAACqUIAAABbxEAAAYRCBdYEwgRB28+AAAKOh////8RB28/AAAKFBMHciYCAHADbwoAAAZvKQAA
ChEIjBoAAAEoQAAACgsCKCwAAAog6AMAAHJiAQBwB3IqAQBwFhIAby0AAAoCewcAAARvQQAACgIU
fQcAAATebxMJcjoCAHAajQMAAAETCxELFhEFohELFxEEohELGChCAAAKohELGREJb0MAAAqiEQso
RAAAChMKEQpzRQAACnpyfAIAcANvCgAABihGAAAKCwIoLAAACiDoAwAAcmIBAHAHcioBAHAWEgBv
LQAACioAQRwAAAAAAADhAAAAYgEAAEMCAABAAAAAKwAAAQYqHgIoIgAABioeAighAAAKKgAAEzAC
AC0AAAADAAARfggAAAQtIHLOAgBw0AgAAAIoSAAACm9JAAAKc0oAAAoKBoAIAAAEfggAAAQqGn4J
AAAEKh4CgAkAAAQqGn4KAAAEKi5zOAAABoAKAAAEKh4CKE0AAAoqALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACgCgAAI34AAAwLAAA8DgAAI1N0cmluZ3MA
AAAASBkAAFADAAAjVVMAmBwAABAAAAAjR1VJRAAAAKgcAACkAgAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAMwAAAAkAAAAKAAAAOQAAACIAAABNAAAADwAAAAMAAAAFAAAAHwAA
ACAAAAABAAAABwAAAAEAAAAAAAoAAQAAAAAABgALAeoABgAYAeoACgA4ATEBDgBUAT8BEgCNAeoA
BgCcAeoAEgDRAeoACgBzAzEBFgCNBncGCgDMBrsGCgD9BugGCgDwB9YHCgAbCAkICgAyCAkICgBP
CAkICgBuCAkICgCHCAkICgCgCAkICgC7CAkICgDWCAkICgDvCAkICgAoCQgJCgBICQgJCgDQCTEB
CgDqCTEBCgDwCTEBCgD2CTEBCgD9CTEBGgCNCmUKGgC0CmUKCwDECgAAGgD0CmUKBgAgC+oAHgCw
C4cLFgACDO8LCgAfDDEBCgBHDDsMFgBnDHcGFgByDO8LFgCPDHcGFgCrDO8LCgDaDDEBCgDyDDEB
CgAIDTEBCgAwDR0NCgBNDTEBCgBSDTEBCgB2DQkIDgCiDYwNDgC7DYwNCgDQDQgJAAAAAAEAAAAA
AAEAAQABABAAOQAAAAUAAQABAAEAEABGAAAABQABABAAAQAQAFUAAAAJAAEAIgABABAAYwAAAA0A
BQAqAAEAEABvAAAADQAGACsAAQAQAHkAAAAQAAcALgAAABAAhACOAA0ACAAzAAABEADEAI4AEQAK
ADcABgBjAGoABgBvAG4ABgBGAHIAAQBoBXYAAQDxBZUAAQDxBZUAAQCbBp8AEQDcBqMAEQAJB6cA
EQBNB8UAUCAAAAAAhhiqARMAAQBbIAAAAACGCLABHQAEAHAgAAAAAIYIvQEdAAQAeSAAAAAAhgjc
ASEABACTIAAAAACGCOwBHQAEAJwgAAAAAIYIAwImAAQAsSAAAAAAhggRAh0ABAC6IAAAAACGCCYC
JgAEAM8gAAAAAIYIOwIdAAQA2CAAAAAAhghXAiYABADtIAAAAACGCGgCHQAEAPYgAAAAAIYIgAIq
AAQACyEAAAAAhgiPAh0ABAAUIQAAAACGAKUCHQAEABwhAAAAAIYArQIdAAQAJCEAAAAAhhiqARMA
BAAvIQAAAACGCHgDPwAHAD4hAAAAAIYIhgNFAAgAVSEAAAAAhgibA0oACQBfIQAAAACGCKwDRQAK
AHYhAAAAAIYIxANKAAsAgCEAAAAAhgjWA0UADACXIQAAAACGCO8DSgANAKEhAAAAAIYIBARFAA4A
uCEAAAAAhgggBE8ADwDHIQAAAACGCC8ERQAQAN4hAAAAAIYIRQRPABEA7SEAAAAAhghPBEUAEgAE
IgAAAACGCGAEVAATABMiAAAAAIYIbQRFABQAKiIAAAAAhgCBBFkAFQAyIgAAAACGAIgEWQAVADoi
AAAAAIYArQIdABUAQiIAAAAAhhiqAVkAFQBkIgAAAADGAHcFeQAVAL8iAAAAAMYBhAVZABkAwSIA
AAAAgQCSBVkAGQDgIgAAAADGAKYFgwAZACkjAAAAAMYBsgVZAB0AKyMAAAAAxgHGBY8AHQA+IwAA
AADGAdoFjwAeAEAjAAAAAIYYqgGZAB8ATyMAAAAAhhiqAZkAIABeIwAAAACGCAEGJgAhAIQjAAAA
AIYIGwYmACEAqiMAAAAAxgCkBlkAIQCyIwAAAADGAK8GWQAhALwjAAAAAMYA2gWPACEAmCYAAAAA
xgCyBVkAIgCaJgAAAACGGKoBWQAiAKImAAAAAIMYqgFZACIArCYAAAAAkwgZB6sAIgDlJgAAAACT
CC0HsAAiAOwmAAAAAJMIOQe1ACIA9CYAAAAAlghdB8kAIwAHJwAAAACGGKoBWQAjAPsmAAAAAJEY
6w3hASMAAAABAHEHAAACAHgHAAADAIwHAAABAHEHAAACAHgHAAADAIwHAAABAJYHAAABAJYHAAAB
AJYHAAABAJYHAAABAJYHAAABAJYHAAABAJYHAAABAJYHAAABAJYHAAABAJYHAAABAJYHAAABAJYH
AAABAJYHAAABAJYHAAABAJwHAAACAKQHAAADAHEHAAAEAIwHAAABAK4HAAACALYHAAADAMAHAAAE
AIwHAAABAHEHAAABAMgHAAABAMwHAAABAMwHAAABAMgHAAABAJYHYQCqAUoAaQCqAUoAcQCqAUoA
eQCqAUoAgQCqAUoAiQCqAUoAkQCqAUoAmQCqAUoAoQCqAUoAqQCqAUoAsQCqAVQAuQCqAVkACQCq
ARMACQBxB9MACQB4B9cAKQCRCdsACQCcCdsAKQCjCeAAKQCsCeUAKQC2CeoACQClAh0ACQCtAh0A
CQC/Ce8ACQDICVQAwQCqAUoACQCBBFkACQCIBFkAEQCqAVkA2QAOCvUAEQAVCvwAKQAmCh0AEQA2
CgIBGQCqAVkAEQCeCg0B6QCjCRIBEQDfChgB8QAMCx0BCQGqAVkAEQCkBlkAEQCvBlkAGQBHCyYA
2QBQCykB2QBcCy8BEQDJCzUBEQHfCzsBSQCqAUoAGQEPDFkAOQAUDEYBIQEnDEoBOQAvDE8BKQFQ
DFYBKQGsCVwB2QBcDCYA2QBhDGIBMQGqAWUBOQF8DFQAMQGdDGwBSQGjCXIBIQFHC3cBIQG4DHwB
IQHADIEBSQHIDB0ASQHNDFkA2QDTDIYBGQHNDFkAUQHmDI0BWQH8DCYA2QDTDJEBYQGqAUoA2QDT
DJgBaQGqAVkAcQFkDbUBcQF/Db4BUQCqAcQBiQGqAdEBmQGqAVkAIQCqAVkALgAbAF0CLgBjAIMC
LgALAOUBLgATAC0CLgAjAF0CLgArAF0CLgAzAC0CLgA7AGMCLgBDAF0CLgBbAHoC4wAzASQBAwE7
AiQBQQFjAiQBqQNbAtgByQNbAtgBCQGeAcwBAgABAAMADQAGABsACAAdAAkAHwAAALkCLgAAAMIC
LgAAANICMgAAAN4CLgAAAPECNwAAAPsCLgAAAAwDNwAAAB0DLgAAADUDNwAAAEIDLgAAAFYDOwAA
AGEDLgAAAJcEXQAAAKEELgAAALIENwAAAL8ELgAAANMENwAAAOEELgAAAPYENwAAAAcFLgAAAB8F
YgAAACoFLgAAADwFYgAAAEIFLgAAAE8FZgAAAFgFLgAAADoGNwAAAFAGNwAAAMwGuwAAAEUHwAAA
AGkHzgACAAIAAwACAAMABQACAAQABwACAAUACQACAAYACwACAAcADQACAAgADwACAAkAEQACAAoA
EwACAAsAFQACAAwAFwACAA0AGQABABEAGwABABIAHQABABMAHwABABQAIQABABUAIwABABYAJQAB
ABcAJwABABgAKQABABkAKwABABoALQABABsALwABABwAMQABAB0AMwABAB4ANQACACwANwACAC0A
OQACADQAOwACADUAPQABADYAPQACADcAPwAEgAAAAQAAANUWrW4AAAAAAABmCQAADAAAAAAAAAAA
AAAAAQDNAAAAAAAEAAAAAAAAAAAAAAAKACgBAAAAAAQAAAAAAAAAAAAAAAoAMQEAAAAADAAAAAAA
AAAAAAAAAQBsAQAAAAAEAAAAAAAAAAAAAAAKAGsGAAAAAAwAAAAAAAAAAAAAAAEAQgoAAAAADAAA
AAAAAAAAAAAAAQBjCwAAAAAAAAAAAQAAAPINAAAAAAA8TW9kdWxlPgBTQ18wZDkxMzA5NzQ3N2Y0
NzIxYmJmOWI0NDUzMzZlNzk1NC5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBFQ1Jlc3VsdEJ1ZmZl
cgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJlc291cmNl
cwBTQ18wZDkxMzA5NzQ3N2Y0NzIxYmJmOWI0NDUzMzZlNzk1NC5jc3Byb2ouUHJvcGVydGllcwBT
ZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lzdGVt
AE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFw
AC5jdG9yAGdldF9Jc0VuYWJsZQBnZXRfSXNFbmFibGVfSXNOdWxsAEJsb2JDb2x1bW4AZ2V0X0Ny
aXRlcmlhU1FMAGdldF9Dcml0ZXJpYVNRTF9Jc051bGwAZ2V0X1Nlc3Npb25JRABnZXRfU2Vzc2lv
bklEX0lzTnVsbABnZXRfQ29ubmVjdGlvblN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZ19Jc051
bGwAZ2V0X0NyaXRlcmlhTmFtZQBnZXRfQ3JpdGVyaWFOYW1lX0lzTnVsbABnZXRfQ3JpdGVyaWFJ
ZABnZXRfQ3JpdGVyaWFJZF9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3NldABJc0VuYWJsZQBJc0Vu
YWJsZV9Jc051bGwAQ3JpdGVyaWFTUUwAQ3JpdGVyaWFTUUxfSXNOdWxsAFNlc3Npb25JRABTZXNz
aW9uSURfSXNOdWxsAENvbm5lY3Rpb25TdHJpbmcAQ29ubmVjdGlvblN0cmluZ19Jc051bGwAQ3Jp
dGVyaWFOYW1lAENyaXRlcmlhTmFtZV9Jc051bGwAQ3JpdGVyaWFJZABDcml0ZXJpYUlkX0lzTnVs
bABHdWlkAHNldF9TZXNzaW9uSWQAc2V0X1Nlc3Npb25JZF9Jc051bGwAc2V0X1ZhcmlhYmxlTmFt
ZQBzZXRfVmFyaWFibGVOYW1lX0lzTnVsbABzZXRfVmFyaWFibGVWYWx1ZQBzZXRfVmFyaWFibGVW
YWx1ZV9Jc051bGwAc2V0X1ZhcmlhYmxlRGF0YVR5cGUAc2V0X1ZhcmlhYmxlRGF0YVR5cGVfSXNO
dWxsAHNldF9Jc0NvbnN0YW50AHNldF9Jc0NvbnN0YW50X0lzTnVsbABzZXRfSXNLZXkAc2V0X0lz
S2V5X0lzTnVsbABzZXRfS2V5SW5kZXgAc2V0X0tleUluZGV4X0lzTnVsbABBZGRSb3cAU2V0RW5k
T2ZSb3dzZXQAU2Vzc2lvbklkAFNlc3Npb25JZF9Jc051bGwAVmFyaWFibGVOYW1lAFZhcmlhYmxl
TmFtZV9Jc051bGwAVmFyaWFibGVWYWx1ZQBWYXJpYWJsZVZhbHVlX0lzTnVsbABWYXJpYWJsZURh
dGFUeXBlAFZhcmlhYmxlRGF0YVR5cGVfSXNOdWxsAElzQ29uc3RhbnQASXNDb25zdGFudF9Jc051
bGwASXNLZXkASXNLZXlfSXNOdWxsAEtleUluZGV4AEtleUluZGV4X0lzTnVsbABJbnB1dHNGaW5p
c2hlZABQcm9jZXNzSW5wdXQARmluaXNoT3V0cHV0cwBNYXJrT3V0cHV0c0ZpbmlzaGVkAFByaW1l
T3V0cHV0AENyZWF0ZU5ld091dHB1dFJvd3MASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJv
Y2Vzc0lucHV0Um93AFBhcmVudENvbXBvbmVudABnZXRfQ29ublN0cmluZ1Rhc2tQcm9jZXNzAGdl
dF9PTEVEQkNvbm5TdHJpbmdUYXNrUHJvY2VzcwBDb25uU3RyaW5nVGFza1Byb2Nlc3MAT0xFREJD
b25uU3RyaW5nVGFza1Byb2Nlc3MAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNx
bENvbm5lY3Rpb24AX1NxbENvbm4AUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3Vy
Y2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0
dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1
ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFt
ZQBPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJzAFJvdwBDb21wb25lbnQAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDXzBkOTEzMDk3NDc3
ZjQ3MjFiYmY5YjQ0NTMzNmU3OTU0LmNzcHJvagBHZXRCb29sZWFuAElzTnVsbABnZXRfSXRlbQBH
ZXRTdHJpbmcAR2V0SW50NjQAc2V0X0l0ZW0AU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0
aW9uAFNCeXRlAEludDMyAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBHZXRDb2x1bW5J
bmRleGVzAGdldF9FbmRPZlJvd3NldABHZXRPdXRwdXRJRABNaWNyb3NvZnQuU3FsU2VydmVyLkRU
U1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBJRFRT
VmFyaWFibGVzMTAwAGdldF9SZWFkT25seVZhcmlhYmxlcwBJRFRTVmFyaWFibGUxMDAAU2NyaXB0
Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASURUU0V2YWx1YXRvckNv
bnRleHQxMDAAR2V0VmFsdWVXaXRoQ29udGV4dABTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBUb1N0cmluZwBvcF9FcXVhbGl0eQBDb25jYXQATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBl
cgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEZpcmVJbmZv
cm1hdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAE9wZW4AZ2V0X0xlbmd0aABD
b252ZXJ0AFRvSW50MzIAR2V0QmxvYkRhdGEAU3lzdGVtLlRleHQARW5jb2RpbmcAZ2V0X1VuaWNv
ZGUAVHJpbQBFbXB0eQBTcWxDb21tYW5kAERiQ29tbWFuZABzZXRfQ29tbWFuZFRpbWVvdXQAU3Fs
RGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAERiRGF0YVJlYWRlcgBUb1NCeXRlAFRvSW50MTYAUmVh
ZABDbG9zZQBGb3JtYXQARW52aXJvbm1lbnQAZ2V0X05ld0xpbmUARXhjZXB0aW9uAGdldF9NZXNz
YWdlAEFwcGxpY2F0aW9uRXhjZXB0aW9uAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNDXzBkOTEzMDk3NDc3ZjQ3MjFiYmY5YjQ0NTMzNmU3OTU0LmNzcHJvai5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0
AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMA
cwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBu
AHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAEUUAQwBSAGUAcwB1AGwAdAAAL18AQwBvAG4A
bgBTAHQAcgBpAG4AZwBfAFQAYQBzAGsAUAByAG8AYwBlAHMAcwAAOV8ATwBMAEUARABCAEMAbwBu
AG4AUwB0AHIAaQBuAGcAXwBUAGEAcwBrAFAAcgBvAGMAZQBzAHMAAAEANVEAdQBlAHIAeQAgAEMA
bwBuAG4AZQBjAHQAaQBvAG4AIABzAHQAcgBpAG4AZwAgADoAIAAANUEAcABwAGwAeQAgAFMAZQBz
AHMAaQBvAG4AIABWAGEAcgBpAGEAYgBsAGUAcwAgAEUAQwAAGVYAYQByAGkAYQBiAGwAZQBOAGEA
bQBlAAAbVgBhAHIAaQBhAGIAbABlAFYAYQBsAHUAZQAAIVYAYQByAGkAYQBiAGwAZQBEAGEAdABh
AFQAeQBwAGUAABVJAHMAQwBvAG4AcwB0AGEAbgB0AAALSQBzAEsAZQB5AAATUwBlAHMAcwBpAG8A
bgBJAGQAABN7ADAAfQAgADoAIAB7ADEAfQAAQUYAYQBpAGwAZQBkACAARQBDAEkAZAA6AHsAMAB9
ACwAIABRAHUAZQByAHkAOgB7ADEAfQB7ADIAfQB7ADMAfQAAUUUAQwAgAHsAMAB9ACAAaQBzACAA
bgBvAHQAIABlAG4AYQBiAGwAZQBkACAAYQBuAGQAIABpAHMAIABuAG8AdAAgAGEAcABwAGwAaQBl
AGQAAH9TAEMAXwAwAGQAOQAxADMAMAA5ADcANAA3ADcAZgA0ADcAMgAxAGIAYgBmADkAYgA0ADQA
NQAzADMANgBlADcAOQA1ADQALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAAC2NyiLuVmDQJjmT2HHS0z1AAiJhF3NgIDMkQi3elxWGTTgiQkg
AwESFR0IEhkDIAACBCAAEh0DIAAOAyAACgMoAAIEKAASHQMoAA4DKAAKBSABAREhBCABAQIEIAEB
DgQgAQEEBCABAQgDIAABBCgAESEDKAAEAygACAMGEhQDBhIYAwYSDAIGCAkgBAEIDhIVEhkLIAQB
CB0IHRIVEhkFIAEBEggDBhIJBSABARIJAwYSJQMGEikDBhItBAAAEikEAAASLQUAAQESLQQIABIp
BAgAEi0DBhIkBAAAEiQECAASJAMGEhUDBh0IBCABAggEIAEcCAQgAQ4IBCABCggFIAIBCBwGIAIC
DhFxBSABHQgIBgACCBIZDgMHAQgEIAASdQUgARJ5HAQAABJ9BiABHBKAgQQBAAAABQACAg4OBQAC
Dg4OBSAAEoCJCiAGAQgODg4IEAIDIAAJBAABCAkGIAIdBQgIBQAAEoCVBSABDh0FAgYOBiACAQ4S
JQUgABKAoQQgARwOBAABDhwEAAEEHAQAAQYcBgADDg4cHAMAAA4GAAIODh0cBQACDg4cFgcMAg4O
HQUODhKAmRKAoQgSgK0OHRwIAAESgLkRgL0FIAASgMEHIAIBDhKAwQQHARIpBiABARGAyQgBAAIA
AAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU0NfMGQ5MTMwOTc0NzdmNDcyMWJiZjliNDQ1MzM2
ZTc5NTQuY3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTQAAAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAADxHAAAAAAAAAAAAAF5HAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABQRwAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAPAD
AAAAAAAAAAAAAPADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQCtbtUWAAABAK1u1RY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARQ
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAsAwAAAQAwADAAMAAwADAANABiADAA
AACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMABkADkAMQAz
ADAAOQA3ADQANwA3AGYANAA3ADIAMQBiAGIAZgA5AGIANAA0ADUAMwAzADYAZQA3ADkANQA0AC4A
YwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1
ADgANAA1AC4AMgA4ADMAMwAzAAAAAACAAC8AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
QwBfADAAZAA5ADEAMwAwADkANwA0ADcANwBmADQANwAyADEAYgBiAGYAOQBiADQANAA1ADMAMwA2
AGUANwA5ADUANAAuAGMAcwBwAHIAbwBqAC4AZABsAGwAAAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANAAAAIgALwAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwAGQAOQAxADMAMAA5ADcA
NAA3ADcAZgA0ADcAMgAxAGIAYgBmADkAYgA0ADQANQAzADMANgBlADcAOQA1ADQALgBjAHMAcABy
AG8AagAuAGQAbABsAAAAAAB4ACsAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAA
ZAA5ADEAMwAwADkANwA0ADcANwBmADQANwAyADEAYgBiAGYAOQBiADQANAA1ADMAMwA2AGUANwA5
ADUANAAuAGMAcwBwAHIAbwBqAAAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADUAOAA0ADUALgAyADgAMwAzADMAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAOAA0ADUALgAyADgAMwAzADMAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABwNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0d913097477f4721bbf9b445336e7954</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_ConnString_TaskProcess,User::_OLEDBConnString_TaskProcess</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">b870762d5254bdb1a20657058ebc92f5</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0].Columns[IsEnable]"
                          cachedDataType="bool"
                          cachedName="IsEnable"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[IsEnable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0].Columns[SessionID]"
                          cachedDataType="wstr"
                          cachedLength="36"
                          cachedName="SessionID"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[SessionID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0].Columns[ConnectionString]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ConnectionString"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[ConnectionString]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0].Columns[CriteriaId]"
                          cachedDataType="i8"
                          cachedName="CriteriaId"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaId]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult]"
                      hasSideEffects="true"
                      name="ECResult">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[SessionId]"
                          dataType="guid"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[SessionId]"
                          name="SessionId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableName]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableName]"
                          name="VariableName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableValue]"
                          dataType="wstr"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableValue]"
                          name="VariableValue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableDataType]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableDataType]"
                          name="VariableDataType" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]"
                          dataType="i1"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]"
                          name="IsConstant" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsKey]"
                          dataType="i1"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsKey]"
                          name="IsKey" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[KeyIndex]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[KeyIndex]"
                          name="KeyIndex" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Evaluates and directs rows in a dataset."
                  name="Constant Variable Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input].Columns[IsConstant]"
                          cachedDataType="i1"
                          cachedName="IsConstant"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[ConstantVariable]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ConstantVariable"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]} == 1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">IsConstant == 1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[NonConstantVariable]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="NonConstantVariable"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]} == 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">IsConstant == 0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Updates column values using expressions"
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[SessionID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="36"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[SessionID]"
                          name="SessionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,36)@[User::SessionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,36)@[User::SessionID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[ConnectionString]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[ConnectionString]"
                          name="ConnectionString"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">NULL(DT_WSTR,255)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">NULL(DT_WSTR,255)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[InsertUpdate]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[InsertUpdate]"
                          name="InsertUpdate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">0</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Looks up values in a reference dataset by using exact matching."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from () [refTable]
where [refTable].[VariableName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="VariableName" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SessionContextId" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[SessionContextLookup]"
                      connectionManagerRefId="Package.ConnectionManagers[SessionContextLookup]"
                      description="Connection manager used to access lookup data."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Inputs[Lookup Input].Columns[VariableName]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="VariableName"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">VariableName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Match Output].Columns[SessionContextId]"
                          dataType="i8"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Match Output].Columns[SessionContextId]"
                          name="SessionContextId"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">SessionContextId</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Task].[SessionContext]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable">User::_DestinationTable</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">4</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SessionId]"
                          cachedDataType="guid"
                          cachedName="SessionId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[SessionId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VariableName]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="VariableName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VariableName]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VariableValue]"
                          cachedDataType="wstr"
                          cachedLength="1000"
                          cachedName="VariableValue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VariableValue]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableValue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VariableDataType]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="VariableDataType"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VariableDataType]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableDataType]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IsConstant]"
                          cachedDataType="i1"
                          cachedName="IsConstant"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsConstant]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IsKey]"
                          cachedDataType="i1"
                          cachedName="IsKey"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsKey]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[KeyIndex]"
                          cachedDataType="i4"
                          cachedName="KeyIndex"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[KeyIndex]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[KeyIndex]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SessionContextId]"
                          dataType="i8"
                          name="SessionContextId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SessionId]"
                          dataType="guid"
                          name="SessionId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VariableName]"
                          dataType="wstr"
                          length="200"
                          name="VariableName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VariableValue]"
                          dataType="nText"
                          name="VariableValue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VariableDataType]"
                          dataType="wstr"
                          length="200"
                          name="VariableDataType" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsConstant]"
                          dataType="bool"
                          name="IsConstant" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsKey]"
                          dataType="bool"
                          name="IsKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[KeyIndex]"
                          dataType="ui1"
                          name="KeyIndex" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select 	 c.CriteriaSetId
	, CriteriaId
	, CriteriaName
	, CriteriaDescription
	, Task.GetDictonaryCodeByCodeId('CriteriaSetType', cs.CriteriaSetTypeId) as CriteriaSetTypeCode
	, Task.GetDictonaryCodeByCodeId('CriteriaType', CriteriaTypeId) as CriteriaTypeCode
	, IsEnable
	, Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode
	, XMLSqlQueryEC
	, SequenceNo
    ,cast(null as nvarchar(max)) as CriteriaSQL
from Task.Criteria c
inner join Task.CriteriaSet cs on c.CriteriaSetId = cs.CriteriaSetId
where cs.CriteriaSetTypeId = ?
          and Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) = ? and IsEnable = 1
order by SequenceNo</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::_query_GetCriterias</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0",{D04FAEA9-9898-4295-8DF6-A49BD2A017F7};"Parameter1",{7A82CFC6-2468-4174-8292-3D16B0892AA6};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaId]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaId]"
                          name="CriteriaId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaName]"
                          name="CriteriaName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[IsEnable]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[IsEnable]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[IsEnable]"
                          name="IsEnable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[SequenceNo]"
                          name="SequenceNo"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetId]"
                          dataType="i8"
                          name="CriteriaSetId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaId]"
                          dataType="i8"
                          name="CriteriaId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          name="CriteriaName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaSetTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          name="CriteriaTypeCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[IsEnable]"
                          dataType="bool"
                          name="IsEnable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[XMLSqlQueryEC]"
                          dataType="nText"
                          name="XMLSqlQueryEC" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SequenceNo]"
                          dataType="i4"
                          name="SequenceNo" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CriteriaSQL]"
                          dataType="nText"
                          name="CriteriaSQL" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          dataType="i8"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaSetId]"
                          name="CriteriaSetId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaId]"
                          dataType="i8"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaId]"
                          name="CriteriaId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaName]"
                          name="CriteriaName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaDescription]"
                          name="CriteriaDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaSetTypeCode]"
                          name="CriteriaSetTypeCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaTypeCode]"
                          name="CriteriaTypeCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[IsEnable]"
                          dataType="bool"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[IsEnable]"
                          name="IsEnable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          dataType="nText"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[XMLSqlQueryEC]"
                          name="XMLSqlQueryEC" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SequenceNo]"
                          name="SequenceNo" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          dataType="nText"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CriteriaSQL]"
                          name="CriteriaSQL" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Script Component"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bcc5ba30ba9f441d993cee149fe96aee.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bcc5ba30ba9f441d993cee149fe96aee.csproj")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.SqlClient;
using System.Text;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private bool _DEBUG;
    private string _ConnString;
    private string _schema;
    private string _sql_start;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _ConnString = Variables.ConnStringTaskProcess.ToString();
        _schema = Variables.AppDomain.ToString();
        _DEBUG = Variables.DEBUG;
        _sql_start = "update " + _schema + ".SessionContext set ";
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
          Add your code here
        */
        StringBuilder sb = new StringBuilder(_sql_start);
        string sMsg = "";
        bool bFireAgain = true;

        sb.Append("VariableValue = '").Append(Row.VariableValue.ToString()).Append("', ");
        sb.Append("IsConstant = ").Append(Row.IsConstant.ToString()).Append(", ");
        sb.Append("IsKey = ").Append(Row.IsKey.ToString()).Append(", ");
        sb.Append("KeyIndex = ").Append(Row.KeyIndex.ToString()).Append(", ");
        sb.Append("VariableDataType = '").Append(Row.VariableDataType.ToString()).Append("' ");
        //sb.Append("where SessionId = '").Append(Row.SessionId.ToString()).Append("' ");
        //sb.Append(" and VariableName = '").Append(Row.VariableName.ToString()).Append("'");
        sb.Append("where SessionContextId = ").Append(Row.SessionContextId.ToString());

        if (_DEBUG)
        {
            sMsg = string.Format("update query: {0}", sb.ToString());
            ComponentMetaData.FireInformation(1000, "Update SessionContext", sMsg, "", 0, ref bFireAgain);

        }
        try
        {
 /*
            using (SqlConnection connection = new SqlConnection(_ConnString))
            {
                connection.Open();
                SqlCommand command = new SqlCommand(sb.ToString(), connection);
                command.CommandTimeout = 0;
                command.ExecuteNonQuery();
                command = null;
            }
  */
            SqlConnection connection = new SqlConnection(_ConnString);
            connection.Open();
            SqlCommand command = new SqlCommand(sb.ToString(), connection);
            command.CommandTimeout = 0;
            command.ExecuteNonQuery();
            connection.Close();
            command = null;
            connection = null;
        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sb.ToString(), Environment.NewLine, ex.Message);
            throw new ApplicationException(sExceptionMessage);
        }

    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid SessionId
    {
        get
        {
            return Buffer.GetGuid(BufferColumnIndexes[0]);
        }
    }
    public bool SessionId_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String VariableName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool VariableName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String VariableValue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool VariableValue_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String VariableDataType
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool VariableDataType_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public SByte IsConstant
    {
        get
        {
            return Buffer.GetSByte(BufferColumnIndexes[4]);
        }
    }
    public bool IsConstant_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public SByte IsKey
    {
        get
        {
            return Buffer.GetSByte(BufferColumnIndexes[5]);
        }
    }
    public bool IsKey_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 KeyIndex
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool KeyIndex_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int64 SessionContextId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[7]);
        }
    }
    public bool SessionContextId_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnStringTaskProcess
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_ConnString_TaskProcess"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String AppDomain
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["AppDomain"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_bcc5ba30ba9f441d993cee149fe96aee</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_bcc5ba30ba9f441d993cee149fe96aee</msb:DisplayName>
		<msb:ProjectId>{87861B4B-EC59-404B-844E-26D9BEF4C07F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_bcc5ba30ba9f441d993cee149fe96aee.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties.Settings.get_Default():SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties.Sett" +
    "ings")]

namespace SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_bcc5ba30ba9f441d993cee149fe96aee.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_bcc5ba30ba9f441d993cee149fe96aee.csproj</RootNamespace>
    <AssemblyName>SC_bcc5ba30ba9f441d993cee149fe96aee.csproj</AssemblyName>
    <ProjectGuid>{FF672AE2-40AE-4466-B9A4-E1EAA41BA228}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bcc5ba30ba9f441d993cee149fe96aee.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGnOHVYAAAAAAAAAAOAAAiELAQsAACAAAAAIAAAAAAAAHj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQ+AABXAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
PwAAAAAAAEgAAAACAAUAoCUAACQZAAABAAAAAAAAAOgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxIAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxIAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxIAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxMA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxMAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxQAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxUAAAoqIgIdKBEAAAoqHgIoFgAACioeAigX
AAAKKn4CKBgAAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRyAQAAcBpvGQAACiwVAgUCAyga
AAAKDgRzAQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKBsAAAoCA30DAAAEKjoCKBsA
AAoCA30EAAAEKpYCewQAAARvHAAACnIRAABwbx0AAAooHgAACm8fAAAKdBYAAAEqlgJ7BAAABG8c
AAAKckEAAHBvHQAACigeAAAKbx8AAAp0FgAAASqWAnsEAAAEbxwAAApyVQAAcG8dAAAKKB4AAApv
HwAACqUcAAABKgAAAAMwBABfAAAAAAAAAAIoIQAACgICewIAAARvGgAABm8iAAAKfQYAAAQCAnsC
AAAEbxsAAAZvIgAACn0HAAAEAgJ7AgAABG8cAAAGfQUAAAQCcmEAAHACewcAAARycQAAcCgjAAAK
fQgAAAQqHgIoJAAACioAGzAHAJsBAAABAAARAnsIAAAEcyUAAAoKcpsAAHALFwwGcp0AAHBvJgAA
CgNvBgAABm8iAAAKbyYAAApywQAAcG8mAAAKJgZyyQAAcG8mAAAKA28KAAAGEwcSBygnAAAKbyYA
AApy5QAAcG8mAAAKJgZy6wAAcG8mAAAKA28MAAAGEwgSCCgnAAAKbyYAAApy5QAAcG8mAAAKJgZy
/QAAcG8mAAAKA28OAAAGEwkSCSgoAAAKbyYAAApy5QAAcG8mAAAKJgZyFQEAcG8mAAAKA28IAAAG
byIAAApvJgAACnI/AQBwbyYAAAomBnJFAQBwbyYAAAoDbxAAAAYTChIKKCkAAApvJgAACiYCewUA
AAQsL3J5AQBwBm8iAAAKKCoAAAoLAigrAAAKIOgDAABynQEAcAdymwAAcBYSAm8sAAAKAnsGAAAE
cy0AAAoNCW8uAAAKBm8iAAAKCXMvAAAKEwQRBBZvMAAAChEEbzEAAAomCW8yAAAKFBMEFA3eKBMF
cskBAHAGbyIAAAooMwAAChEFbzQAAAooNQAAChMGEQZzNgAACnoqAAEQAAAAADUBPXIBKCgAAAEe
AigUAAAGKh4CKBsAAAoqEzACAC0AAAACAAARfgkAAAQtIHLdAQBw0AcAAAIoOAAACm85AAAKczoA
AAoKBoAJAAAEfgkAAAQqGn4KAAAEKh4CgAoAAAQqGn4LAAAEKi5zJgAABoALAAAEKh4CKD0AAAoq
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAA8CAAAI34A
AKgIAADMCwAAI1N0cmluZ3MAAAAAdBQAAGACAAAjVVMA1BYAABAAAAAjR1VJRAAAAOQWAABAAgAA
I0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAMAAAAAgAAAALAAAAJwAAAA0AAAA9
AAAADwAAAAIAAAAEAAAAFgAAABcAAAABAAAABwAAAAEAAAAAAAoAAQAAAAAABgD8ANsABgAJAdsA
CgApASIBDgBFATABEgB+AdsABgCNAdsACgChASIBCgDcBMsECgANBfgECgDmBcwFCgARBv8FCgAo
Bv8FCgBFBv8FCgBkBv8FCgB9Bv8FCgCWBv8FCgCxBv8FCgDMBv8FCgDlBv8FCgAeB/4GCgA+B/4G
CgC7ByIBCgDCByIBFgA2CA4IFgBdCA4ICwB2CAAAFgCmCA4ICgDSCCIBBgDaCNsACgAdCREJCgAy
CSIBCgA4CSIBCgA+CSIBGgCYCW8JHgD5CeMJHgAaCgcKHgAsCuMJHgA3CgcKCgBqCiIBCgCCCiIB
CgCYCiIBCgDACq0KCgDdCiIBCgDiCiIBCgAGC/8FDgAyCxwLDgBLCxwLCgBgC/4GAAAAAAEAAAAA
AAEAAQABABAAOQAAAAUAAQABAAEAEABGAAAACQABABQAAQAQAFQAAAANAAMAGAABABAAYAAAAA0A
BAAZAAEAEABqAAAADAAFAB0AAAAQAHUAfwANAAkAIQAAARAAtQB/ABEACwAlAAYAVABPAAYAYABT
AAEAJgRrAAEAJgRrAAEAjgR1AAEAlQR4AAEAoQR4AAEAqQR4ABEA7AR7ABEAGQV/ABEAXQWdAFAg
AAAAAIYYmwETAAEAWyAAAAAAhgimAR0ABABwIAAAAACGCLQBIgAEAHkgAAAAAIYIyQEmAAQAjiAA
AAAAhgjaASIABACXIAAAAACGCPIBJgAEAKwgAAAAAIYIBAIiAAQAtSAAAAAAhggdAiYABADKIAAA
AACGCDICIgAEANMgAAAAAIYITgIqAAQA6CAAAAAAhghdAiIABADxIAAAAACGCHMCKgAEAAYhAAAA
AIYIfQIiAAQADyEAAAAAhgiOAi4ABAAkIQAAAACGCJsCIgAEAC0hAAAAAIYIrwIyAAQAQiEAAAAA
hgjEAiIABABLIQAAAACGAOACIgAEAFMhAAAAAIYA6AIiAAQAWyEAAAAAhhibAVcABAB7IQAAAADG
AO4DWwAEAKAhAAAAAMYB+wNlAAgAsyEAAAAAxgEPBGUACQC1IQAAAACGGJsBbwAKAMQhAAAAAIYY
mwFvAAsA0yEAAAAAhgg2BCYADAD5IQAAAACGCFAEJgAMAB8iAAAAAIYIXgQiAAwASCIAAAAAxgC0
BFcADACzIgAAAADGAL8EVwAMALwiAAAAAMYADwRlAAwAdCQAAAAAhhibAVcADQB8JAAAAACDGJsB
VwANAIQkAAAAAJMIKQWDAA0AvSQAAAAAkwg9BYgADQDEJAAAAACTCEkFjQANAMwkAAAAAJYIbQWh
AA4A3yQAAAAAhhibAVcADgDTJAAAAACRGHsLfQEOAAAAAQCBBQAAAgCIBQAAAwCcBQAAAQCmBQAA
AgCuBQAAAwCBBQAABACcBQAAAQCBBQAAAQC4BQAAAQC8BQAAAQC8BQAAAQC4BQAAAQDGBVEAmwGr
AFkAmwGrAGEAmwGrAGkAmwGrAHEAmwGrAHkAmwGrAIEAmwGrAIkAmwGrAJEAmwGrAJkAmwGrAKEA
mwGwAKkAmwFXAAkAmwETAAkAgQW1AAkAiAW5ACkAhwe9AAkAjwfDACkAlgfIACkAoAfNACkAqQfS
ACkAsgfXAAkA4AIiAAkA6AIiABEAmwFXALEA0wfcABEA2gfjABkAmwFXABEARwjpAMEAbQjuABEA
kQj0AMkAvgj5AOkAmwFXABEAtARXABkAAQkmALEACgkEAREAvwRXAPEAmwGrAPEAKwkLAfkAAQkm
AAEBAQkmAAkBAQkmALEARAkRAREAsQkXAREBxwkdARkBmwGrACEBJwpXACkBmwEoATEBQQqwADEB
VAouACEBZApXADkBdgowAUEBjAomALEARAk0AUkBmwGrAFEBmwFXAFkB9ApRAVkBDwtaAUEAmwFg
AXEBmwFtAYEBmwFXACEAmwFXAC4AGwD5AS4AYwAfAi4ACwCBAS4AEwDJAS4AIwD5AS4AKwD5AS4A
MwDJAS4AOwD/AS4AQwD5AS4AWwAWAsMAAwH/AOMAuwH/AGEB4wH/AIkC2wF0AakC2wF0ATwBaAEC
AAEABQARAAcAFAAIABYAAAD0AjYAAAD+AjsAAAAPAz8AAAAcAzsAAAAwAz8AAAA+AzsAAABTAz8A
AABkAzsAAAB8A0MAAACHAzsAAACZA0MAAACfAzsAAACsA0cAAAC1AzsAAADFA0sAAADWAzsAAABo
BD8AAAB+BD8AAACIBDsAAADcBJMAAABVBZgAAAB5BaYAAgACAAMAAgADAAUAAgAEAAcAAgAFAAkA
AgAGAAsAAgAHAA0AAgAIAA8AAgAJABEAAgAKABMAAgALABUAAgAMABcAAgANABkAAgAOABsAAgAP
AB0AAgAQAB8AAgARACEAAgAaACMAAgAbACUAAgAcACcAAgAiACkAAgAjACsAAQAkACsAAgAlAC0A
BIAAAAEAAACFFvRRAAAAAAAAXAcAAAwAAAAAAAAAAAAAAAEAvgAAAAAABAAAAAAAAAAAAAAACgAZ
AQAAAAAEAAAAAAAAAAAAAAAKACIBAAAAAAwAAAAAAAAAAAAAAAEAXQEAAAAADAAAAAAAAAAAAAAA
AQDrBwAAAAAMAAAAAAAAAAAAAAABAEsJAAAAAAQAAAAAAAAAAAAAAAoA1wkAAAAAAAAAAAEAAACC
CwAAAAAAAAA8TW9kdWxlPgBTQ19iY2M1YmEzMGJhOWY0NDFkOTkzY2VlMTQ5ZmU5NmFlZS5jc3By
b2ouZGxsAElucHV0MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBT
Y3JpcHRNYWluAFJlc291cmNlcwBTQ19iY2M1YmEzMGJhOWY0NDFkOTkzY2VlMTQ5ZmU5NmFlZS5j
c3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25l
bnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1
ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9yAEd1aWQAZ2V0X1Nlc3Npb25JZABnZXRfU2Vzc2lvbklk
X0lzTnVsbABnZXRfVmFyaWFibGVOYW1lAGdldF9WYXJpYWJsZU5hbWVfSXNOdWxsAGdldF9WYXJp
YWJsZVZhbHVlAGdldF9WYXJpYWJsZVZhbHVlX0lzTnVsbABnZXRfVmFyaWFibGVEYXRhVHlwZQBn
ZXRfVmFyaWFibGVEYXRhVHlwZV9Jc051bGwAZ2V0X0lzQ29uc3RhbnQAZ2V0X0lzQ29uc3RhbnRf
SXNOdWxsAGdldF9Jc0tleQBnZXRfSXNLZXlfSXNOdWxsAGdldF9LZXlJbmRleABnZXRfS2V5SW5k
ZXhfSXNOdWxsAGdldF9TZXNzaW9uQ29udGV4dElkAGdldF9TZXNzaW9uQ29udGV4dElkX0lzTnVs
bABOZXh0Um93AEVuZE9mUm93c2V0AFNlc3Npb25JZABTZXNzaW9uSWRfSXNOdWxsAFZhcmlhYmxl
TmFtZQBWYXJpYWJsZU5hbWVfSXNOdWxsAFZhcmlhYmxlVmFsdWUAVmFyaWFibGVWYWx1ZV9Jc051
bGwAVmFyaWFibGVEYXRhVHlwZQBWYXJpYWJsZURhdGFUeXBlX0lzTnVsbABJc0NvbnN0YW50AElz
Q29uc3RhbnRfSXNOdWxsAElzS2V5AElzS2V5X0lzTnVsbABLZXlJbmRleABLZXlJbmRleF9Jc051
bGwAU2Vzc2lvbkNvbnRleHRJZABTZXNzaW9uQ29udGV4dElkX0lzTnVsbABQcm9jZXNzSW5wdXQA
SW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AFBhcmVudENvbXBvbmVu
dABnZXRfQ29ublN0cmluZ1Rhc2tQcm9jZXNzAGdldF9BcHBEb21haW4AZ2V0X0RFQlVHAENvbm5T
dHJpbmdUYXNrUHJvY2VzcwBBcHBEb21haW4AREVCVUcAX0RFQlVHAF9Db25uU3RyaW5nAF9zY2hl
bWEAX3NxbF9zdGFydABQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFN5c3RlbS5SZXNvdXJjZXMAUmVz
b3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZv
AHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAQnVmZmVyAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAT3V0cHV0TWFwAElucHV0SUQASW5wdXROYW1lAFJvdwBDb21wb25l
bnQAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJp
YnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAFNDX2JjYzViYTMwYmE5ZjQ0MWQ5OTNjZWUxNDlmZTk2YWVlLmNzcHJvagBHZXRH
dWlkAElzTnVsbABHZXRTdHJpbmcAR2V0U0J5dGUAR2V0SW50MzIAR2V0SW50NjQAU3RyaW5nAFN0
cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
SURUU1ZhcmlhYmxlczEwMABnZXRfUmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAGdl
dF9JdGVtAFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElE
VFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRleHQAQm9vbGVhbgBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBUb1N0cmluZwBDb25jYXQAU3lzdGVtLlRl
eHQAU3RyaW5nQnVpbGRlcgBBcHBlbmQAU0J5dGUASW50MzIASW50NjQARm9ybWF0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVs
aW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0
YQBGaXJlSW5mb3JtYXRpb24AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNxbENv
bm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBPcGVuAFNxbENvbW1hbmQA
RGJDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABFeGVjdXRlTm9uUXVlcnkAQ2xvc2UARW52aXJv
bm1lbnQAZ2V0X05ld0xpbmUARXhjZXB0aW9uAGdldF9NZXNzYWdlAEFwcGxpY2F0aW9uRXhjZXB0
aW9uAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDX2JjYzViYTMw
YmE5ZjQ0MWQ5OTNjZWUxNDlmZTk2YWVlLmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMAAA9JAG4AcAB1AHQAIAAwAAAvXwBDAG8AbgBuAFMAdAByAGkAbgBnAF8AVABhAHMAawBQ
AHIAbwBjAGUAcwBzAAATQQBwAHAARABvAG0AYQBpAG4AAAtEAEUAQgBVAEcAAA91AHAAZABhAHQA
ZQAgAAApLgBTAGUAcwBzAGkAbwBuAEMAbwBuAHQAZQB4AHQAIABzAGUAdAAgAAABACNWAGEAcgBp
AGEAYgBsAGUAVgBhAGwAdQBlACAAPQAgACcAAQcnACwAIAABG0kAcwBDAG8AbgBzAHQAYQBuAHQA
IAA9ACAAAAUsACAAABFJAHMASwBlAHkAIAA9ACAAABdLAGUAeQBJAG4AZABlAHgAIAA9ACAAAClW
AGEAcgBpAGEAYgBsAGUARABhAHQAYQBUAHkAcABlACAAPQAgACcAAQUnACAAATN3AGgAZQByAGUA
IABTAGUAcwBzAGkAbwBuAEMAbwBuAHQAZQB4AHQASQBkACAAPQAgAAAjdQBwAGQAYQB0AGUAIABx
AHUAZQByAHkAOgAgAHsAMAB9AAArVQBwAGQAYQB0AGUAIABTAGUAcwBzAGkAbwBuAEMAbwBuAHQA
ZQB4AHQAABN7ADAAfQB7ADEAfQB7ADIAfQAAf1MAQwBfAGIAYwBjADUAYgBhADMAMABiAGEAOQBm
ADQANAAxAGQAOQA5ADMAYwBlAGUAMQA0ADkAZgBlADkANgBhAGUAZQAuAGMAcwBwAHIAbwBqAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAACgkvsrTSaJQo5lo2wL
0HD3AAiJhF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkEIAARHQMgAAIDIAAOAyAABAMgAAgDIAAK
BCgAER0DKAACAygADgMoAAQDKAAIAygACgMGEhADBhIUAyAAAQkgBAEIDhIVEhkFIAEBEggDBhIJ
BSABARIJAgYCAgYOAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAEAAASIAQI
ABIgBCABAQ4EIAEBCAMGEhUDBh0IBSABER0IBCABAggEIAEOCAQgAQQIBCABCAgEIAEKCAYgAgIO
EV0FIAEdCAgEIAASYQUgARJlHAQAABJpBSABHBJtBAEAAAAGAAMODg4OBSABEnkOBQACDg4cBSAA
EoCJCiAGAQgODg4IEAIHIAIBDhKAjQMAAA4HAAQODhwcHBQHCxJ5DgISgI0SgJUSgKEOBAQICggA
ARKArRGAsQUgABKAtQcgAgEOEoC1BAcBEiEGIAEBEYC9CAEAAgAAAAAAAwAAAUcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNC8BACpTQ19iY2M1YmEzMGJhOWY0NDFkOTkzY2VlMTQ5ZmU5NmFlZS5jc3Byb2oAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxNAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQAA7D4AAAAAAAAAAAAADj8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAA
AAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADwAwAAAAAAAAAAAADwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEA9FGFFgAAAQD0UYUWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEUAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAALAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGIAYwBj
ADUAYgBhADMAMABiAGEAOQBmADQANAAxAGQAOQA5ADMAYwBlAGUAMQA0ADkAZgBlADkANgBhAGUA
ZQAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANQA3ADYANQAuADIAMAA5ADgAMAAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAEMAXwBiAGMAYwA1AGIAYQAzADAAYgBhADkAZgA0ADQAMQBkADkAOQAzAGMAZQBlADEANAA5
AGYAZQA5ADYAYQBlAGUALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBhAGwA
QwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADQAAACI
AC8AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYgBjAGMANQBiAGEA
MwAwAGIAYQA5AGYANAA0ADEAZAA5ADkAMwBjAGUAZQAxADQAOQBmAGUAOQA2AGEAZQBlAC4AYwBz
AHAAcgBvAGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMA
XwBiAGMAYwA1AGIAYQAzADAAYgBhADkAZgA0ADQAMQBkADkAOQAzAGMAZQBlADEANAA5AGYAZQA5
ADYAYQBlAGUALgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADcANgA1AC4AMgAwADkAOAAwAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcANgA1AC4AMgAwADkAOAAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAID8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bcc5ba30ba9f441d993cee149fe96aee</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_ConnString_TaskProcess,User::AppDomain,User::DEBUG</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">057d45d3617a95193a30e2b703dd044d</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[SessionId]"
                          cachedDataType="guid"
                          cachedName="SessionId"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[SessionId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[VariableName]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="VariableName"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[VariableValue]"
                          cachedDataType="wstr"
                          cachedLength="1000"
                          cachedName="VariableValue"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableValue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[VariableDataType]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="VariableDataType"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[VariableDataType]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[IsConstant]"
                          cachedDataType="i1"
                          cachedName="IsConstant"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsConstant]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[IsKey]"
                          cachedDataType="i1"
                          cachedName="IsKey"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[IsKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[KeyIndex]"
                          cachedDataType="i4"
                          cachedName="KeyIndex"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult].Columns[KeyIndex]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0].Columns[SessionContextId]"
                          cachedDataType="i8"
                          cachedName="SessionContextId"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Match Output].Columns[SessionContextId]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="Executes a custom script."
                  name="Session Variables EC XML to SQL"
                  version="9">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_50ce55e4d601467a9267fb4147ba49c5.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_50ce55e4d601467a9267fb4147ba49c5.csproj")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
using System.Xml;
using System.IO;
using System.Collections.Generic;
using System.Data.SqlClient;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private const string _EndOfLine = "\r\n";
    private bool _DEBUG;
    private string _ConnString;
    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
        _DEBUG = Variables.DEBUG;

        _ConnString = Variables.ConnStringTaskProcess;
        bool bFireAgain = true;
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "0a", "", 0, ref bFireAgain);
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string sMsg = string.Empty;
        bool bFireAgain = true;
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "0a", "", 0, ref bFireAgain);
        XmlDocument xmlDoc = new XmlDocument();
        byte[] byteXML = Row.XMLSqlQueryEC.GetBlobData(0, Convert.ToInt32(Row.XMLSqlQueryEC.Length));
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "0b", "", 0, ref bFireAgain);
        string sXML = string.Format("<?xml version=\"1.0\" encoding=\"utf-16\" ?>{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        //string sXML = string.Format("{0}", System.Text.Encoding.Unicode.GetString(byteXML).Trim());
        ////MessageBox.Show(sXML);
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "1", "", 0, ref bFireAgain);
        try
        {
            //xmlDoc.LoadXml(sXML);
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "1A", "", 0, ref bFireAgain);
        MemoryStream ms = new MemoryStream(byteXML);
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "1B", "", 0, ref bFireAgain);
        ms.Flush();
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "1C", "", 0, ref bFireAgain);
        ms.Position = 0;
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "1D", "", 0, ref bFireAgain);
        xmlDoc.Load(ms);
        //    // Update with latest default parameters
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "1E", "", 0, ref bFireAgain);
        UpdateParameterAttribute(xmlDoc, "SessionId", "Value", Row.SessionID.ToString());
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "2", "", 0, ref bFireAgain);
        UpdateParameterAttributeFromQuery(xmlDoc, _EndOfLine);
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "3", "", 0, ref bFireAgain);
        string sQuery = GetTSQLExecutableQueryFromXML(xmlDoc, _EndOfLine, "//Query");
        //if (_DEBUG)
        //{
        //    sMsg = string.Format("{0} {1} {2} {3} {4} {5}{6}: {7}", Row.CriteriaSetId.ToString(), Row.CriteriaSetTypeCode.ToString(), Row.CriteriaName.ToString(), Row.CriteriaTypeCode.ToString(), Row.ECPassNoCode.ToString(), Row.SequenceNo.ToString(), Environment.NewLine, sQuery);
        //    ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", sMsg, "", 0, ref bFireAgain);
        //}
        byte[] byteSQL = System.Text.Encoding.Unicode.GetBytes(sQuery);
        //    //MessageBox.Show(sQuery.Length.ToString());
        Row.CriteriaSQL.ResetBlobData();
        Row.CriteriaSQL.AddBlobData(byteSQL);
        Row.ConnectionString = GetConnectionString(xmlDoc);

            ms = null;
            xmlDoc = null;
        }
        catch (Exception ex)
        {
            String sExceptionMessage = string.Format("{0}{1}{2}", sXML, Environment.NewLine, ex.Message);
            throw ex;
        }
    }

    #region Public methods replicated from Securitisation.Utilities.XML

    public XmlNode GetParameterByName(XmlDocument XmlDoc, string sParameterName)
    {
        bool bFireAgain = true;
        XmlNode ret = null;
        XmlElement xmlRoot = XmlDoc.DocumentElement;
        ComponentMetaData.FireInformation(1000, "Session Variable EC To XML", "4", "", 0, ref bFireAgain);
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
        Dictionary<string, XmlNode> dicNodes = new Dictionary<string, XmlNode>(StringComparer.InvariantCultureIgnoreCase);

        

        foreach (XmlNode xmlNode in xmlParameters)
        {
            dicNodes.Add(xmlNode.Attributes["Name"].Value, xmlNode);
        }
        dicNodes.TryGetValue(sParameterName, out ret);

        return ret;

        //String sXPath = String.Format("//Parameters/Parameter[@Name='{0}']", sParameterName);
        //return XmlDoc.SelectSingleNode(sXPath);
    }

    public bool UpdateParameterAttribute(XmlDocument XmlDoc, string sParameterName, string sAttributeName, string sAttributeValue)
    {
        bool bResult = false;

        XmlNode parameterNode = GetParameterByName(XmlDoc, sParameterName);
        
        if (parameterNode == null)
        {
            return bResult;
        }

        if (parameterNode.Attributes[sAttributeName] != null)
        {
            parameterNode.Attributes[sAttributeName].Value = sAttributeValue;
            bResult = true;
        }
        else
        {
            XmlAttribute att = XmlDoc.CreateAttribute(sAttributeName);
            att.Value = sAttributeValue;
            parameterNode.Attributes.Append(att);
            bResult = true;
        }
        return bResult;
    }

    public string GetConnectionString(XmlDocument XmlDoc)
    {
        try
        {
            XmlNode xmlQuery = XmlDoc.SelectSingleNode("//Query");
            return xmlQuery.Attributes["ConnectionString"].Value.ToString();
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    public string GetOperatorWithParameter(string sOperator, string sParameter)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} {1}", sOperator.Trim(), sParameter);
        return sbValue.ToString();
    }

    public string GetOperator(string sOperator)
    {
        StringBuilder sbValue = new StringBuilder();
        sbValue.AppendFormat(" {0} ", sOperator.Trim());
        return sbValue.ToString();
    }

    public string SelectedItemsToString(XmlNode xmlParam)
    {
        String sResult = "('none') And 1=1 ";
        StringBuilder sbLookup = new StringBuilder(string.Empty);
        if (xmlParam == null)
        {
            return sResult;
        }

        try
        {
            XmlNodeList xmlItems = xmlParam.SelectNodes(".//SelectedItems/Item");
            if (xmlItems != null && xmlItems.Count > 0)
            {
                sbLookup.Append("(");
                foreach (XmlNode xmlItem in xmlItems)
                {
                    sbLookup.AppendFormat("'{0}', ", xmlItem.Attributes["Value"].Value.ToString());
                }
                sbLookup.Remove(sbLookup.Length - 2, 2).Append(")");
                sResult = sbLookup.ToString();
            }
        }
        catch (Exception ex)
        {
            throw ex;
        }

        return sResult;
    }

    public string GetTSQLDeclareHeaderFromXML(XmlDocument XmlDoc, string sLineDelimiter)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='SqlParameter']");
            if (xmlParameters != null)
            {
                foreach (XmlNode xmlParam in xmlParameters)
                {
                    String sResultLine = string.Empty;
                    switch (xmlParam.Attributes["SqlDbType"].Value.ToString())
                    {
                        // Always default to code 120
                        case "DateTime":
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}', 120) {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "VarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        case "NVarChar":
                            sResultLine = string.Format(
                                "Declare @{0} {1}(max) = Convert({2}(max), '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                        default:
                            sResultLine = string.Format(
                                "Declare @{0} {1} = Convert({2}, '{3}') {4}"
                                , xmlParam.Attributes["Name"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["SqlDbType"].Value.ToString()
                                , xmlParam.Attributes["Value"].Value.ToString()
                                , sLineDelimiter);
                            break;
                    }
                    sbResult.Append(sResultLine);
                }
            }
            bool bFireAgain = true;
            ComponentMetaData.FireInformation(1000, "abcd", "1", "", 0, ref bFireAgain);
        }
        catch (Exception ex)
        {
            bool bFireAgain = true;
            ComponentMetaData.FireInformation(1000, "efgh", "1", "", 0, ref bFireAgain);
            throw ex;
        }
        return sbResult.ToString();
    }

    public string GetTSQLExecutableQueryFromXML(XmlDocument XmlDoc, string sLineDelimiter, string sQueryNodePath)
    {
        StringBuilder sbResult = new StringBuilder();
        if (XmlDoc == null)
        {
            return sbResult.ToString();
        }
        try
        {
            sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
            sbResult.Append(GetTSQLQueryBodyFromXML(XmlDoc, "//Query"));

            bool bFireAgain = true;
            ComponentMetaData.FireInformation(1000, "pqrs", "1", "", 0, ref bFireAgain);
        }
        catch (Exception ex)
        {
            bool bFireAgain = true;
            ComponentMetaData.FireInformation(1000, "tuvw", "1", "", 0, ref bFireAgain);
            throw ex;
        }
        return sbResult.ToString();
    }

    public string GetTSQLQueryBodyFromXML(XmlDocument XmlDoc, string sNodePath)
    {

        string sSQLStatement = string.Empty;

        if (XmlDoc == null && string.IsNullOrEmpty(sNodePath))
        {
            return sSQLStatement;
        }
        try
        {
            XmlNode node = XmlDoc.SelectSingleNode(sNodePath);
            if (node != null)
            {
                sSQLStatement = node.InnerText;
                StringBuilder sb = new StringBuilder(sSQLStatement);

                //replace ReplaceOperator
                XmlNodeList xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceOperator']");
                if (xmlParameters != null)
                {

                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperator(xmlParam.Attributes["Operator"].Value.ToString());
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }
                //replace ReplaceLookup
                xmlParameters = null;
                xmlParameters = XmlDoc.SelectNodes("//Parameter[@Type='ReplaceLookup']");
                if (xmlParameters != null)
                {
                    foreach (XmlNode xmlParam in xmlParameters)
                    {
                        string sValue = GetOperatorWithParameter(xmlParam.Attributes["Operator"].Value.ToString(), SelectedItemsToString(xmlParam));
                        sb.Replace(xmlParam.Attributes["Name"].Value.ToString(), sValue);
                    }
                }

                sSQLStatement = sb.ToString();
            }

            bool bFireAgain = true;
            ComponentMetaData.FireInformation(1000, "hijk", "1", "", 0, ref bFireAgain);
        }
        catch (Exception ex)
        {
            bool bFireAgain = true;
            ComponentMetaData.FireInformation(1000, "lmno", "1", "", 0, ref bFireAgain);
            throw ex;
        }
        return sSQLStatement;
    }


    public bool UpdateParameterAttributeFromQuery(XmlDocument XmlDoc, string sLineDelimiter)
    {
        bool bResult = false;
        bool bFireAgain = true;
        string sMsg = "";

        XmlElement xmlRoot = XmlDoc.DocumentElement;
        XmlNodeList xmlParameters = xmlRoot.SelectNodes("//Parameter[@Type='SqlParameter']");
     try
       {
 
        foreach (XmlNode xmlParameter in xmlParameters)
        {
            string sParamSQL = GetTSQLExecutableQueryFromParameterXML(xmlParameter, "ParameterQuery");

            if (sParamSQL != null && sParamSQL != "")
            {
                    string AttributeValue = null;
                    string sConnStr = null;
                    StringBuilder sbResult = new StringBuilder();

                    if (xmlParameter.SelectSingleNode("ParameterQuery").Attributes["ConnectionString"] != null)
                    {
                        sConnStr = xmlParameter.SelectSingleNode("ParameterQuery").Attributes["ConnectionString"].Value.ToString();
                    }
                    if (string.IsNullOrEmpty(sConnStr))
                    {
                        sConnStr = _ConnString;
                    }
                    sbResult.Append(GetTSQLDeclareHeaderFromXML(XmlDoc, sLineDelimiter));
                    sbResult.Append(sParamSQL);
                    using (SqlConnection connection = new SqlConnection(sConnStr))
                    {
                            connection.Open();
                            SqlCommand command = new SqlCommand(sbResult.ToString(), connection);
                            command.CommandTimeout = 0;
                            object ret = command.ExecuteScalar();
                            if (ret != null)
                            {
                                AttributeValue = command.ExecuteScalar().ToString();
                            }
                            
                    }
                    sMsg = string.Format("Parameter : {0}, query : {1}{2}{3}Scalar value : {4}", xmlParameter.Attributes["Name"].Value.ToString(), sLineDelimiter, sbResult.ToString(), sLineDelimiter, AttributeValue);
                    ComponentMetaData.FireInformation(1000, "UpdateParameterAttributeFromQuery", sMsg, "", 0, ref bFireAgain);
                    if (AttributeValue != null)
                    {
                        xmlParameter.Attributes["Value"].Value = AttributeValue;
                    }

            }

        }
      }
     catch (Exception ex)
     {
       throw ex;
      }

        return bResult;
    }

    public string GetTSQLExecutableQueryFromParameterXML(XmlNode XmlParam, string sQueryNodePath)

        {

            string sSQLStatement = null;

            if (XmlParam == null && string.IsNullOrEmpty(sQueryNodePath))
            {
                return sSQLStatement;
            }
            try
            {
                XmlNode node = XmlParam.SelectSingleNode(sQueryNodePath);
                if (node != null)
                {
                    sSQLStatement = node.InnerText;
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }
            return sSQLStatement;
        }




    #endregion


}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn XMLSqlQueryEC
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool XMLSqlQueryEC_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public BlobColumn CriteriaSQL
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool CriteriaSQL_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String SessionID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool SessionID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int64 CriteriaSetId
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[3]);
        }
    }
    public bool CriteriaSetId_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String CriteriaName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool CriteriaName_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String CriteriaSetTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool CriteriaSetTypeCode_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String CriteriaTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool CriteriaTypeCode_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String ECPassNoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool ECPassNoCode_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Int32 SequenceNo
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[8]);
        }
    }
    public bool SequenceNo_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String ConnectionString
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
        set
        {
            this[9] = value;
        }
    }
    public bool ConnectionString_IsNull
    {
        get
        {
            return IsNull(9);
        }
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ConnStringTaskProcess
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_ConnString_TaskProcess"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String OLEDBConnStringTaskProcess
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["_OLEDBConnString_TaskProcess"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Boolean DEBUG
    {
        get
        {
            return (Boolean)(ParentComponent.ReadOnlyVariables["DEBUG"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[sc_50ce55e4d601467a9267fb4147ba49c5.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_50ce55e4d601467a9267fb4147ba49c5.csproj</RootNamespace>
    <AssemblyName>SC_50ce55e4d601467a9267fb4147ba49c5.csproj</AssemblyName>
    <ProjectGuid>{8C1FA17E-FE70-495E-9276-8F53ADCBA761}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>sc_50ce55e4d601467a9267fb4147ba49c5</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_50ce55e4d601467a9267fb4147ba49c5</msb:DisplayName>
		<msb:ProjectId>{D7D48958-CC7C-47C3-9764-F288F74E0158}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="sc_50ce55e4d601467a9267fb4147ba49c5.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties.Settings.get_Default():SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties.Sett" +
    "ings")]

namespace SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_50ce55e4d601467a9267fb4147ba49c5.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_50ce55e4d601467a9267fb4147ba49c5.csproj.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGonHlYAAAAAAAAAAOAAAiELAQsAADwAAAAIAAAAAAAAbloA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABRaAABXAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdDoAAAAgAAAAPAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA+AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAARAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
WgAAAAAAAEgAAAACAAUAYDIAALQnAAABAAAAAAAAAKgxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqZgJ7DgAACgJ7DwAAChaUbxAAAAp0BwAA
ASoiAhYoEQAACipmAnsOAAAKAnsPAAAKF5RvEAAACnQHAAABKiICFygRAAAKKlICew4AAAoCew8A
AAoYlG8SAAAKKiICGCgRAAAKKlICew4AAAoCew8AAAoZlG8TAAAKKiICGSgRAAAKKlICew4AAAoC
ew8AAAoalG8SAAAKKiICGigRAAAKKlICew4AAAoCew8AAAoblG8SAAAKKiICGygRAAAKKlICew4A
AAoCew8AAAoclG8SAAAKKiICHCgRAAAKKlICew4AAAoCew8AAAodlG8SAAAKKiICHSgRAAAKKlIC
ew4AAAoCew8AAAoelG8UAAAKKiICHigRAAAKKlYCew4AAAoCew8AAAofCZRvEgAACioqAh8JAygV
AAAKKiYCHwkoEQAACipeAywJAh8JKBYAAAoqcgEAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIo
GgAACgICcx4AAAZ9AQAABAICcx8AAAZ9AgAABCqSBHKeAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMB
AAAGbxwAAAYqSisHAgNvHQAABgNvGAAABi3xKgYqOgIoHQAACgIDfQMAAAQqOgIoHQAACgIDfQQA
AAQqlgJ7BAAABG8eAAAKcq4AAHBvHwAACiggAAAKbyEAAAp0GQAAASqWAnsEAAAEbx4AAApy3gAA
cG8fAAAKKCAAAApvIQAACnQZAAABKpYCewQAAARvHgAACnIYAQBwbx8AAAooIAAACm8hAAAKpR8A
AAEqEzAHAE0AAAABAAARAigjAAAKAgJ7AgAABG8iAAAGfQYAAAQCAnsCAAAEbyAAAAZ9BwAABBcK
AigkAAAKIOgDAAByJAEAcHJaAQBwcmABAHAWEgBvJQAACioeAigmAAAKKgAAABswBwBPAgAAAgAA
EX4nAAAKJhcKAigkAAAKIOgDAAByJAEAcHJaAQBwcmABAHAWEgBvJQAACnMoAAAKCwNvAgAABhYD
bwIAAAZvKQAACigqAAAKbysAAAoMAigkAAAKIOgDAAByJAEAcHJiAQBwcmABAHAWEgBvJQAACnJo
AQBwKCwAAAoIby0AAApvLgAACigvAAAKDQIoJAAACiDoAwAAciQBAHBywAEAcHJgAQBwFhIAbyUA
AAoCKCQAAAog6AMAAHIkAQBwcsQBAHByYAEAcBYSAG8lAAAKCHMwAAAKEwQCKCQAAAog6AMAAHIk
AQBwcsoBAHByYAEAcBYSAG8lAAAKEQRvMQAACgIoJAAACiDoAwAAciQBAHBy0AEAcHJgAQBwFhIA
byUAAAoRBBZqbzIAAAoCKCQAAAog6AMAAHIkAQBwctYBAHByYAEAcBYSAG8lAAAKBxEEbzMAAAoC
KCQAAAog6AMAAHIkAQBwctwBAHByYAEAcBYSAG8lAAAKAgdy4gEAcHL2AQBwA28GAAAGbzQAAAoo
JwAABiYCKCQAAAog6AMAAHIkAQBwcgICAHByYAEAcBYSAG8lAAAKAgdyBgIAcCgvAAAGJgIoJAAA
CiDoAwAAciQBAHByDAIAcHJgAQBwFhIAbyUAAAoCB3IGAgBwchACAHAoLQAABhMFKCwAAAoRBW81
AAAKEwYDbwQAAAZvNgAACgNvBAAABhEGbzcAAAoDAgcoKAAABm8VAAAGFBMEFAveHRMHciACAHAJ
KDgAAAoRB285AAAKKDoAAAomEQd6KgBBHAAAAAAAAKwAAACFAQAAMQIAAB0AAAAnAAABGzAHAKkA
AAADAAARFwoUCwNvOwAACgwCKCQAAAog6AMAAHIkAQBwcjQCAHByYAEAcBYSAG8lAAAKCHI4AgBw
bzwAAAoNKD0AAApzPgAAChMECW8/AAAKEwYrLREGb0AAAAp0CAAAARMFEQQRBW9BAAAKcnwCAHBv
QgAACm9DAAAKEQVvRAAAChEGb0UAAAotyt4VEQZ1MAAAARMHEQcsBxEHb0YAAArcEQQEEgFvRwAA
CiYHKgAAAAEQAAACAE0AOocAFQAAAAATMAMAVgAAAAQAABEWCgIDBCgmAAAGCwctAgYqB29BAAAK
BW9CAAAKLBcHb0EAAAoFb0IAAAoOBG9IAAAKFworHwMFb0kAAAoMCA4Eb0gAAAoHb0EAAAoIb0oA
AAomFwoGKgAAGzACAC4AAAAFAAARA3IQAgBwb0sAAAoKBm9BAAAKcoYCAHBvQgAACm9DAAAKbzQA
AAoM3gMLB3oIKgAAARAAAAAAAAApKQADJwAAARMwBAAgAAAABgAAEXNMAAAKCgZyqAIAcANvLgAA
CgRvTQAACiYGbzQAAAoqEzADAB8AAAAGAAARc0wAAAoKBnK6AgBwA28uAAAKb04AAAomBm80AAAK
KgAbMAQAxwAAAAcAABFyxgIAcAp+JwAACnNPAAAKCwMtAgYqA3LqAgBwbzwAAAoMCDmWAAAACG9Q
AAAKFj6KAAAAB3IWAwBwb1EAAAomCG8/AAAKEwUrMxEFb0AAAAp0CAAAAQ0HchoDAHAJb0EAAApy
9gEAcG9CAAAKb0MAAApvNAAACm9OAAAKJhEFb0UAAAotxN4VEQV1MAAAARMGEQYsBxEGb0YAAArc
BwdvUgAAChhZGG9TAAAKcioDAHBvUQAACiYHbzQAAAoK3gUTBBEEegYqAAEcAAACAEgAQIgAFQAA
AAAAABYAqsAABScAAAEbMAcAcwMAAAgAABFzTAAACgoDLQcGbzQAAAoqA3I4AgBwbzwAAAoLBzn5
AgAAB28/AAAKEwc4yQIAABEHb0AAAAp0CAAAAQx+JwAACg0Ib0EAAApyLgMAcG9CAAAKb0MAAApv
NAAACiUTCDn6AQAAEQhyQgMAcChUAAAKLScRCHJUAwBwKFQAAAo6rQAAABEIcmQDAHAoVAAACjoz
AQAAOMUBAABydgMAcBuNAwAAARMJEQkWCG9BAAAKcnwCAHBvQgAACm9DAAAKbzQAAAqiEQkXCG9B
AAAKci4DAHBvQgAACm9DAAAKbzQAAAqiEQkYCG9BAAAKci4DAHBvQgAACm9DAAAKbzQAAAqiEQkZ
CG9BAAAKcvYBAHBvQgAACm9DAAAKbzQAAAqiEQkaBKIRCShVAAAKDTjAAQAActYDAHAbjQMAAAET
ChEKFghvQQAACnJ8AgBwb0IAAApvQwAACm80AAAKohEKFwhvQQAACnIuAwBwb0IAAApvQwAACm80
AAAKohEKGAhvQQAACnIuAwBwb0IAAApvQwAACm80AAAKohEKGQhvQQAACnL2AQBwb0IAAApvQwAA
Cm80AAAKohEKGgSiEQooVQAACg04KQEAAHLWAwBwG40DAAABEwsRCxYIb0EAAApyfAIAcG9CAAAK
b0MAAApvNAAACqIRCxcIb0EAAApyLgMAcG9CAAAKb0MAAApvNAAACqIRCxgIb0EAAApyLgMAcG9C
AAAKb0MAAApvNAAACqIRCxkIb0EAAApy9gEAcG9CAAAKb0MAAApvNAAACqIRCxoEohELKFUAAAoN
OJIAAAByQAQAcBuNAwAAARMMEQwWCG9BAAAKcnwCAHBvQgAACm9DAAAKbzQAAAqiEQwXCG9BAAAK
ci4DAHBvQgAACm9DAAAKbzQAAAqiEQwYCG9BAAAKci4DAHBvQgAACm9DAAAKbzQAAAqiEQwZCG9B
AAAKcvYBAHBvQgAACm9DAAAKbzQAAAqiEQwaBKIRDChVAAAKDQYJb1EAAAomEQdvRQAACjor/f//
3hURB3UwAAABEw0RDSwHEQ1vRgAACtwXEwQCKCQAAAog6AMAAHKWBABwcsABAHByYAEAcBYSBG8l
AAAK3ioTBRcTBgIoJAAACiDoAwAAcqAEAHBywAEAcHJgAQBwFhIGbyUAAAoRBXoGbzQAAAoqAEE0
AAACAAAAKgAAANwCAAAGAwAAFQAAAAAAAAAAAAAAEAAAADIDAABCAwAAKgAAACcAAAEbMAcAhgAA
AAkAABFzTAAACgoDLQcGbzQAAAoqBgIDBCgsAAAGb1EAAAomBgIDchACAHAoLgAABm9RAAAKJhcL
AigkAAAKIOgDAAByqgQAcHLAAQBwcmABAHAWEgFvJQAACt4nDBcNAigkAAAKIOgDAABytAQAcHLA
AQBwcmABAHAWEgNvJQAACgh6Bm80AAAKKgAAARAAAAAAEABIWAAnJwAAARswBwCyAQAACgAAEX4n
AAAKCgMtCgQoVgAACiwCBioDBG9LAAAKCwc5PgEAAAdvVwAACgoGc08AAAoMA3K+BABwbzwAAAoN
CSx/CW8/AAAKEwsrVRELb0AAAAp0CAAAARMEAhEEb0EAAApyCAUAcG9CAAAKb0MAAApvNAAACigq
AAAGEwUIEQRvQQAACnJ8AgBwb0IAAApvQwAACm80AAAKEQVvWAAACiYRC29FAAAKLaLeFRELdTAA
AAETDBEMLAcRDG9GAAAK3BQNA3IaBQBwbzwAAAoNCTmHAAAACW8/AAAKEw0rXRENb0AAAAp0CAAA
ARMGAhEGb0EAAApyCAUAcG9CAAAKb0MAAApvNAAACgIRBigrAAAGKCkAAAYTBwgRBm9BAAAKcnwC
AHBvQgAACm9DAAAKbzQAAAoRB29YAAAKJhENb0UAAAotmt4VEQ11MAAAARMOEQ4sBxEOb0YAAArc
CG80AAAKChcTCAIoJAAACiDoAwAAcmAFAHBywAEAcHJgAQBwFhIIbyUAAAreKhMJFxMKAigkAAAK
IOgDAAByagUAcHLAAQBwcmABAHAWEgpvJQAAChEJegYqAABBTAAAAgAAAEYAAABiAAAAqAAAABUA
AAAAAAAAAgAAANkAAABqAAAAQwEAABUAAAAAAAAAAAAAABMAAABzAQAAhgEAACoAAAAnAAABGzAH
AOMBAAALAAARFgoXC3JgAQBwDANvOwAACg0JcjgCAHBvPAAAChMEEQRvPwAAChMOOIsBAAARDm9A
AAAKdAgAAAETBQIRBXJ0BQBwKDAAAAYTBhEGOWcBAAARBnJgAQBwKFkAAAo5VgEAABQTBxQTCHNM
AAAKEwkRBXJ0BQBwb0sAAApvQQAACnKGAgBwb0IAAAosJxEFcnQFAHBvSwAACm9BAAAKcoYCAHBv
QgAACm9DAAAKbzQAAAoTCBEIKFYAAAosCAJ7BwAABBMIEQkCAwQoLAAABm9RAAAKJhEJEQZvUQAA
CiYRCHNaAAAKEwoRCm9bAAAKEQlvNAAAChEKc1wAAAoTCxELFm9dAAAKEQtvXgAAChMMEQwsDhEL
b14AAApvNAAAChMH3gwRCiwHEQpvRgAACtxykgUAcBuNAwAAARMPEQ8WEQVvQQAACnJ8AgBwb0IA
AApvQwAACm80AAAKohEPFwSiEQ8YEQlvNAAACqIRDxkEohEPGhEHohEPKFUAAAoMAigkAAAKIOgD
AABy/AUAcAhyYAEAcBYSAW8lAAAKEQcsGBEFb0EAAApy9gEAcG9CAAAKEQdvSAAAChEOb0UAAAo6
af7//94VEQ51MAAAARMQERAsBxEQb0YAAArc3gUTDRENegYqAEFMAAACAAAA5gAAADwAAAAiAQAA
DAAAAAAAAAACAAAAJwAAAJ4BAADFAQAAFQAAAAAAAAAAAAAAHgAAAL4BAADcAQAABQAAACcAAAEb
MAIAKAAAAAwAABEUCgMtCgQoVgAACiwCBioDBG9LAAAKCwcsBwdvVwAACgreAwwIegYqARAAAAAA
DwAUIwADJwAAAR4CKBoAAAYqHgIoHQAACioTMAIALQAAAA0AABF+CAAABC0gckAGAHDQBwAAAihg
AAAKb2EAAApzYgAACgoGgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCoafgoAAAQqLnM3AAAGgAoA
AAQqHgIoZQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABgCwAAI34AAMwLAAAMEQAAI1N0cmluZ3MAAAAA2BwAAMAGAAAjVVMAmCMAABAAAAAj
R1VJRAAAAKgjAAAMBAAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAQAAAPolMwAWAAABAAAAPAAAAAgA
AAAKAAAAOAAAACUAAABlAAAAAQAAAA8AAAANAAAABAAAABoAAAAdAAAAAQAAAAEAAAAIAAAAAQAA
AAAACgABAAAAAAAGAPwA2wAGAAkB2wAKACkBIgEOAEUBMAESAH4B2wAGAI0B2wASAKEB2wAWAAMG
+AUWAAsG+AUKAD4HLQcKAG8HWgcKAMwIsggKAPcI5QgKAA4J5QgKACsJ5QgKAEoJ5QgKAGMJ5QgK
AHwJ5QgKAJcJ5QgKALIJ5QgKAMsJ5QgKAAQK5AkKACQK5AkKAKoKIgEKAMQKIgEKAMsKIgEaAD8L
FwsaAGYLFwsLAHYLAAAaAKYLFwsKANILIgEGANoL2wAeAE4MJQwKAJ4MIgEKAMYMugwKAPEM5wwK
AP4M5wwKAEkNIgEKAGENIgEWAHcN+AUWAJYN+AUKAK4NIgEKAPcN3A0KAAQO3A0KACsOGA4WAFEO
+AUWAHcO+AUKAKYOIgEKAPgOugwiAIQPbg8iAKUPkg8iALcPbg8iAMIPkg8KAAAQ7Q8KAB0QIgEK
ACIQIgEKAEYQ5QgOAHIQXBAOAIsQXBAKAKAQ5AkAAAAAAQAAAAAAAQABAAEAEAA5AAAABQABAAEA
AQAQAEYAAAAJAAEAGgABABAAVAAAAA0AAwAeAAEAEABgAAAADQAEAB8AAQAQAGoAAAAMAAUAIwAA
ABAAdQB/AA0ACAAyAAABEAC1AH8AEQAKADYABgBUAFEABgBgAFUAAQA5BW0AAQA5BW0AUYDDBXcA
AQDOBX8AAQDVBXcAEQBOB8cAEQB7B8sAEQC/B+kAUCAAAAAAhhibARMAAQBbIAAAAACGCKwBHQAE
AHUgAAAAAIYIvgEiAAQAfiAAAAAAhgjXAR0ABACYIAAAAACGCOcBIgAEAKEgAAAAAIYI/gEmAAQA
tiAAAAAAhggMAiIABAC/IAAAAACGCCECKgAEANQgAAAAAIYIMwIiAAQA3SAAAAAAhghMAiYABADy
IAAAAACGCF0CIgAEAPsgAAAAAIYIdQImAAQAECEAAAAAhgiNAiIABAAZIQAAAACGCKwCJgAEAC4h
AAAAAIYIwQIiAAQANyEAAAAAhgjdAiYABABMIQAAAACGCO4CIgAEAFUhAAAAAIYIBgMuAAQAaiEA
AAAAhggVAyIABABzIQAAAACGCCsDJgAEAIkhAAAAAIYIQAMyAAQAlCEAAAAAhghVAyIABQCeIQAA
AACGCHEDNwAFALYhAAAAAIYAjQMiAAYAviEAAAAAhgCVAyIABgDGIQAAAACGGJsBWQAGAOYhAAAA
AMYAAQVdAAYACyIAAAAAxgEOBWcACgAeIgAAAADGASIFZwALACAiAAAAAIYYmwFxAAwALyIAAAAA
hhibAXEADQA+IgAAAACGCEkFJgAOAGQiAAAAAIYIYwUmAA4AiiIAAAAAhgiCBSIADgCwIgAAAADG
AOEFWQAOAAkjAAAAAMYA7AVZAA4AFCMAAAAAxgAiBWcADgCMJQAAAACGABcGggAPAFQmAAAAAIYA
KgaKABEAuCYAAAAAhgBDBpMAFQAEJwAAAACGAFcGmQAWADAnAAAAAIYAcAafABgAXCcAAAAAhgB8
BqQAGQBMKAAAAACGAJIGqgAaAAAsAAAAAIYArgaxABwApCwAAAAAhgDMBqoAHwCwLgAAAACGAOQG
uQAhAOwwAAAAAIYABgfAACMAMDEAAAAAhhibAVkAJQA4MQAAAACDGJsBWQAlAEAxAAAAAJMIiwfP
ACUAeTEAAAAAkwifB9QAJQCAMQAAAACTCKsH2QAlAIgxAAAAAJYIzwftACYAmzEAAAAAhhibAVkA
JgCPMQAAAACRGLsQSgMmAAAAAQDjBwAAAgDqBwAAAwD+BwAAAQAICAAAAQAICAAAAQAOCAAAAgAW
CAAAAwDjBwAABAD+BwAAAQDjBwAAAQAgCAAAAQAkCAAAAQAkCAAAAQAgCAAAAQAuCAAAAgA1CAAA
AQAuCAAAAgA1CAAAAwBECAAABABTCAAAAQAuCAAAAQBjCAAAAgBtCAAAAQBjCAAAAQB4CAAAAQAu
CAAAAgCBCAAAAQAuCAAAAgCBCAAAAwCQCAAAAQAuCAAAAgCfCAAAAQAuCAAAAgCBCAAAAQCpCAAA
AgCQCAAAAQAICGEAmwEyAGkAmwEyAHEAmwEyAHkAmwEyAIEAmwEyAIkAmwEyAJEAmwEyAJkAmwEy
AKEAmwEyAKkAmwEyALEAmwH3ALkAmwFZAAkAmwETAAkA4wf8AAkA6gcAASkAbQoEAQkAdgoJASkA
fQoOASkAhwoTASkAkAoYAQkAmQodAQkAogr3AMEAmwEyAAkAjQMiAAkAlQMiABEAmwFZAMkA3Aoj
AREA4woqARkAmwFZABEAUAswAdkAbQo1AREAkQs7AeEAvgtAAQEBmwFZABEA4QVZABEAZwxLAQkB
fQxRAREA7AVZAMkAjQx3AEkAmwFZADkAkwxgAREBpgxkATkArgxpARkBzwxwARkBfQp2AckA2wwm
AMkA4Ax8ASEBmwGCASkBBQ1ZACkBCw2IAUkAGA2NARkAHQ0mABkBJg2UATkALw1ZADkAPQ2CATEB
VQ2aATkBaw0mAMkA4AyeAUkAgg24AUEAog2+AVEBvQ3FAQwAmwHUAUkBNw7fAWkBRQ7lAUEAaA7p
AXEBhA7vAUEAjw4mAAwAmQ72AWkBnQ4iAIEBsg5ZAAwAug7+AUEAxg4yAEkA0A7vAXEB4A4jAkEA
5w41AokBmwFZAIkBBg9EAokBBg9TAokBmwEyAEkBEw8uAIkB4A5bAokBkwwuAIkBHQ9iAskAJA9/
AskA4AyFAskAMA+3AkEAPg8mAIkBTA+8AskAVA9/ApEBmwEyAJkBsg9ZAKEBmwHnAqkBzA/3AKkB
3w/lAbEBmwFZALkBNBAeA7kBTxAnA1EAmwEtA9EBmwE6A+EBmwFZACEAmwFZAA4AFAB6AC4AGwDG
Ay4AYwDsAy4ACwBOAy4AEwCWAy4AIwDGAy4AKwDGAy4AMwCWAy4AOwDMAy4AQwDGAy4AWwDjA8MA
EwFGAeMA+wJGAUEBIwNGAQkDGwNBAykDGwNBA1wBpgEHAiwCOwJNAmoCjAKsAsQC7wIVAzUDAgAB
AAUAFQAHABgACAAaAAAAoQM8AAAArwNBAAAAxAM8AAAA0ANBAAAA4wNFAAAA7QNBAAAA/gNJAAAA
DARBAAAAIQRFAAAALgRBAAAAQgRFAAAAVgRBAAAAcQRFAAAAggRBAAAAmgRFAAAApwRBAAAAuwRN
AAAAxgRBAAAA2ARFAAAA6QRBAAAAjAVFAAAAogVFAAAAvQVBAAAAPgffAAAAtwfkAAAA2wfyAAIA
AgADAAIAAwAFAAIABAAHAAIABQAJAAIABgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAV
AAIADAAXAAIADQAZAAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIAEgAjAAIAEwAlAAIAFAAnAAEA
FQAnAAEAFwApAAIAFgApAAIAIAArAAIAIQAtAAIAIgAvAAIAMwAxAAIANAAzAAEANQAzAAIANgA1
AMsBBIAAAAEAAACFFnV+AAAAAAAAQgoAAAwAAAAAAAAAAAAAAAEAvgAAAAAABAAAAAAAAAAAAAAA
CgAZAQAAAAAEAAAAAAAAAAAAAAAKACIBAAAAAAwAAAAAAAAAAAAAAAEAXQEAAAAABAAAAAAAAAAA
AAAACgD4BQAAAAAMAAAAAAAAAAAAAAABAPQKAAAAAAwAAAAAAAAAAAAAAAEAAQwAAAAABAAAAAAA
AAAAAAAACgBiDwAAAAAAAAAAAQAAAMIQAAAAAAA8TW9kdWxlPgBTQ181MGNlNTVlNGQ2MDE0Njdh
OTI2N2ZiNDE0N2JhNDljNS5jc3Byb2ouZGxsAElucHV0MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENv
bm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRNYWluAFJlc291cmNlcwBTQ181MGNlNTVlNGQ2MDE0
NjdhOTI2N2ZiNDE0N2JhNDljNS5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQu
U3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlw
dEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAC5jdG9yAEJsb2JDb2x1bW4A
Z2V0X1hNTFNxbFF1ZXJ5RUMAZ2V0X1hNTFNxbFF1ZXJ5RUNfSXNOdWxsAGdldF9Dcml0ZXJpYVNR
TABnZXRfQ3JpdGVyaWFTUUxfSXNOdWxsAGdldF9TZXNzaW9uSUQAZ2V0X1Nlc3Npb25JRF9Jc051
bGwAZ2V0X0NyaXRlcmlhU2V0SWQAZ2V0X0NyaXRlcmlhU2V0SWRfSXNOdWxsAGdldF9Dcml0ZXJp
YU5hbWUAZ2V0X0NyaXRlcmlhTmFtZV9Jc051bGwAZ2V0X0NyaXRlcmlhU2V0VHlwZUNvZGUAZ2V0
X0NyaXRlcmlhU2V0VHlwZUNvZGVfSXNOdWxsAGdldF9Dcml0ZXJpYVR5cGVDb2RlAGdldF9Dcml0
ZXJpYVR5cGVDb2RlX0lzTnVsbABnZXRfRUNQYXNzTm9Db2RlAGdldF9FQ1Bhc3NOb0NvZGVfSXNO
dWxsAGdldF9TZXF1ZW5jZU5vAGdldF9TZXF1ZW5jZU5vX0lzTnVsbABnZXRfQ29ubmVjdGlvblN0
cmluZwBzZXRfQ29ubmVjdGlvblN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZ19Jc051bGwAc2V0
X0Nvbm5lY3Rpb25TdHJpbmdfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQAWE1MU3FsUXVlcnlF
QwBYTUxTcWxRdWVyeUVDX0lzTnVsbABDcml0ZXJpYVNRTABDcml0ZXJpYVNRTF9Jc051bGwAU2Vz
c2lvbklEAFNlc3Npb25JRF9Jc051bGwAQ3JpdGVyaWFTZXRJZABDcml0ZXJpYVNldElkX0lzTnVs
bABDcml0ZXJpYU5hbWUAQ3JpdGVyaWFOYW1lX0lzTnVsbABDcml0ZXJpYVNldFR5cGVDb2RlAENy
aXRlcmlhU2V0VHlwZUNvZGVfSXNOdWxsAENyaXRlcmlhVHlwZUNvZGUAQ3JpdGVyaWFUeXBlQ29k
ZV9Jc051bGwARUNQYXNzTm9Db2RlAEVDUGFzc05vQ29kZV9Jc051bGwAU2VxdWVuY2VObwBTZXF1
ZW5jZU5vX0lzTnVsbABDb25uZWN0aW9uU3RyaW5nAENvbm5lY3Rpb25TdHJpbmdfSXNOdWxsAFBy
b2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUGFy
ZW50Q29tcG9uZW50AGdldF9Db25uU3RyaW5nVGFza1Byb2Nlc3MAZ2V0X09MRURCQ29ublN0cmlu
Z1Rhc2tQcm9jZXNzAGdldF9ERUJVRwBDb25uU3RyaW5nVGFza1Byb2Nlc3MAT0xFREJDb25uU3Ry
aW5nVGFza1Byb2Nlc3MAREVCVUcAX0VuZE9mTGluZQBfREVCVUcAX0Nvbm5TdHJpbmcAUHJlRXhl
Y3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uWG1sAFhtbE5vZGUAWG1sRG9jdW1lbnQAR2V0UGFyYW1l
dGVyQnlOYW1lAFVwZGF0ZVBhcmFtZXRlckF0dHJpYnV0ZQBHZXRDb25uZWN0aW9uU3RyaW5nAEdl
dE9wZXJhdG9yV2l0aFBhcmFtZXRlcgBHZXRPcGVyYXRvcgBTZWxlY3RlZEl0ZW1zVG9TdHJpbmcA
R2V0VFNRTERlY2xhcmVIZWFkZXJGcm9tWE1MAEdldFRTUUxFeGVjdXRhYmxlUXVlcnlGcm9tWE1M
AEdldFRTUUxRdWVyeUJvZHlGcm9tWE1MAFVwZGF0ZVBhcmFtZXRlckF0dHJpYnV0ZUZyb21RdWVy
eQBHZXRUU1FMRXhlY3V0YWJsZVF1ZXJ5RnJvbVBhcmFtZXRlclhNTABTeXN0ZW0uUmVzb3VyY2Vz
AFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJl
SW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZl
cgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcAB2YWx1ZQBJbnB1dElEAElucHV0TmFtZQBS
b3cAQ29tcG9uZW50AFhtbERvYwBzUGFyYW1ldGVyTmFtZQBzQXR0cmlidXRlTmFtZQBzQXR0cmli
dXRlVmFsdWUAc09wZXJhdG9yAHNQYXJhbWV0ZXIAeG1sUGFyYW0Ac0xpbmVEZWxpbWl0ZXIAc1F1
ZXJ5Tm9kZVBhdGgAc05vZGVQYXRoAFhtbFBhcmFtAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ181MGNlNTVlNGQ2MDE0NjdhOTI2N2Zi
NDE0N2JhNDljNS5jc3Byb2oAZ2V0X0l0ZW0ASXNOdWxsAEdldFN0cmluZwBHZXRJbnQ2NABHZXRJ
bnQzMgBzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nAFN0
cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMATWljcm9zb2Z0LlNxbFNlcnZl
ci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
SURUU1ZhcmlhYmxlczEwMABnZXRfUmVhZE9ubHlWYXJpYWJsZXMASURUU1ZhcmlhYmxlMTAwAFNj
cmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AElEVFNFdmFsdWF0
b3JDb250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRleHQAQm9vbGVhbgBTU0lTU2NyaXB0Q29tcG9u
ZW50RW50cnlQb2ludEF0dHJpYnV0ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3Jh
cABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAElEVFNDb21wb25lbnRN
ZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEARmlyZUluZm9ybWF0aW9uAEVtcHR5AGdl
dF9MZW5ndGgAQ29udmVydABUb0ludDMyAEdldEJsb2JEYXRhAFN5c3RlbS5UZXh0AEVuY29kaW5n
AGdldF9Vbmljb2RlAFRyaW0ARm9ybWF0AFN5c3RlbS5JTwBNZW1vcnlTdHJlYW0AU3RyZWFtAEZs
dXNoAHNldF9Qb3NpdGlvbgBMb2FkAFRvU3RyaW5nAEdldEJ5dGVzAFJlc2V0QmxvYkRhdGEAQWRk
QmxvYkRhdGEARW52aXJvbm1lbnQAZ2V0X05ld0xpbmUARXhjZXB0aW9uAGdldF9NZXNzYWdlAFht
bEVsZW1lbnQAZ2V0X0RvY3VtZW50RWxlbWVudABYbWxOb2RlTGlzdABTZWxlY3ROb2RlcwBTdHJp
bmdDb21wYXJlcgBnZXRfSW52YXJpYW50Q3VsdHVyZUlnbm9yZUNhc2UAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMARGljdGlvbmFyeWAyAElFcXVhbGl0eUNvbXBhcmVyYDEAU3lzdGVtLkNvbGxl
Y3Rpb25zAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAWG1sQXR0cmlidXRl
Q29sbGVjdGlvbgBnZXRfQXR0cmlidXRlcwBYbWxBdHRyaWJ1dGUAZ2V0X0l0ZW1PZgBnZXRfVmFs
dWUAQWRkAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAVHJ5R2V0VmFsdWUAc2V0X1ZhbHVl
AENyZWF0ZUF0dHJpYnV0ZQBBcHBlbmQAU2VsZWN0U2luZ2xlTm9kZQBTdHJpbmdCdWlsZGVyAEFw
cGVuZEZvcm1hdABnZXRfQ291bnQAUmVtb3ZlAG9wX0VxdWFsaXR5AElzTnVsbE9yRW1wdHkAZ2V0
X0lubmVyVGV4dABSZXBsYWNlAG9wX0luZXF1YWxpdHkAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEu
U3FsQ2xpZW50AFNxbENvbm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBP
cGVuAFNxbENvbW1hbmQARGJDb21tYW5kAHNldF9Db21tYW5kVGltZW91dABFeGVjdXRlU2NhbGFy
AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVu
dGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5
c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzUwY2U1NWU0ZDYw
MTQ2N2E5MjY3ZmI0MTQ3YmE0OWM1LmNzcHJvai5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAg
AHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUA
IAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0
ACAAMAAAL18AQwBvAG4AbgBTAHQAcgBpAG4AZwBfAFQAYQBzAGsAUAByAG8AYwBlAHMAcwAAOV8A
TwBMAEUARABCAEMAbwBuAG4AUwB0AHIAaQBuAGcAXwBUAGEAcwBrAFAAcgBvAGMAZQBzAHMAAAtE
AEUAQgBVAEcAADVTAGUAcwBzAGkAbwBuACAAVgBhAHIAaQBhAGIAbABlACAARQBDACAAVABvACAA
WABNAEwAAAUwAGEAAAEABTAAYgAAVzwAPwB4AG0AbAAgAHYAZQByAHMAaQBvAG4APQAiADEALgAw
ACIAIABlAG4AYwBvAGQAaQBuAGcAPQAiAHUAdABmAC0AMQA2ACIAIAA/AD4AewAwAH0AAQMxAAAF
MQBBAAAFMQBCAAAFMQBDAAAFMQBEAAAFMQBFAAATUwBlAHMAcwBpAG8AbgBJAGQAAAtWAGEAbAB1
AGUAAAMyAAAFDQAKAAADMwAADy8ALwBRAHUAZQByAHkAABN7ADAAfQB7ADEAfQB7ADIAfQAAAzQA
AEMvAC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAnAFMAcQBsAFAAYQByAGEAbQBl
AHQAZQByACcAXQABCU4AYQBtAGUAACFDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAR
IAB7ADAAfQAgAHsAMQB9AAALIAB7ADAAfQAgAAAjKAAnAG4AbwBuAGUAJwApACAAQQBuAGQAIAAx
AD0AMQAgAAErLgAvAC8AUwBlAGwAZQBjAHQAZQBkAEkAdABlAG0AcwAvAEkAdABlAG0AAAMoAAAP
JwB7ADAAfQAnACwAIAABAykAABNTAHEAbABEAGIAVAB5AHAAZQAAEUQAYQB0AGUAVABpAG0AZQAA
D1YAYQByAEMAaABhAHIAABFOAFYAYQByAEMAaABhAHIAAF9EAGUAYwBsAGEAcgBlACAAQAB7ADAA
fQAgAHsAMQB9ACAAPQAgAEMAbwBuAHYAZQByAHQAKAB7ADIAfQAsACAAJwB7ADMAfQAnACwAIAAx
ADIAMAApACAAewA0AH0AAWlEAGUAYwBsAGEAcgBlACAAQAB7ADAAfQAgAHsAMQB9ACgAbQBhAHgA
KQAgAD0AIABDAG8AbgB2AGUAcgB0ACgAewAyAH0AKABtAGEAeAApACwAIAAnAHsAMwB9ACcAKQAg
AHsANAB9AAFVRABlAGMAbABhAHIAZQAgAEAAewAwAH0AIAB7ADEAfQAgAD0AIABDAG8AbgB2AGUA
cgB0ACgAewAyAH0ALAAgACcAewAzAH0AJwApACAAewA0AH0AAQlhAGIAYwBkAAAJZQBmAGcAaAAA
CXAAcQByAHMAAAl0AHUAdgB3AABJLwAvAFAAYQByAGEAbQBlAHQAZQByAFsAQABUAHkAcABlAD0A
JwBSAGUAcABsAGEAYwBlAE8AcABlAHIAYQB0AG8AcgAnAF0AARFPAHAAZQByAGEAdABvAHIAAEUv
AC8AUABhAHIAYQBtAGUAdABlAHIAWwBAAFQAeQBwAGUAPQAnAFIAZQBwAGwAYQBjAGUATABvAG8A
awB1AHAAJwBdAAEJaABpAGoAawAACWwAbQBuAG8AAB1QAGEAcgBhAG0AZQB0AGUAcgBRAHUAZQBy
AHkAAGlQAGEAcgBhAG0AZQB0AGUAcgAgADoAIAB7ADAAfQAsACAAcQB1AGUAcgB5ACAAOgAgAHsA
MQB9AHsAMgB9AHsAMwB9AFMAYwBhAGwAYQByACAAdgBhAGwAdQBlACAAOgAgAHsANAB9AABDVQBw
AGQAYQB0AGUAUABhAHIAYQBtAGUAdABlAHIAQQB0AHQAcgBpAGIAdQB0AGUARgByAG8AbQBRAHUA
ZQByAHkAAH9TAEMAXwA1ADAAYwBlADUANQBlADQAZAA2ADAAMQA0ADYANwBhADkAMgA2ADcAZgBi
ADQAMQA0ADcAYgBhADQAOQBjADUALgBjAHMAcAByAG8AagAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAARuD34b04UejtaRUPQRLmAAIiYRdzYCAzJEIt3pcVhk04IkJ
IAMBEhUdCBIZBCAAEh0DIAACAyAADgMgAAoDIAAIBCABAQ4EIAEBAgQoABIdAygAAgMoAA4DKAAK
AygACAMGEhADBhIUAyAAAQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJAgYOBA0ACgACBgIHIAIS
IRIlDgggBAISJQ4ODgUgAQ4SJQUgAg4ODgQgAQ4OBSABDhIhBiACDhIlDgcgAw4SJQ4OBiACAhIl
DgYgAg4SIQ4DBhIpAwYSLQQAABIpBAAAEi0FAAEBEi0ECAASKQQIABItAwYSIAQAABIgBAgAEiAE
IAEBCAMGEhUDBh0IBCABHAgEIAECCAQgAQ4IBCABCggEIAEICAUgAgEIHAYgAgIOEWkFIAEdCAgE
IAASbQUgARJxHAQAABJ1BSABHBJ5BAEAAAAFIAASgIUKIAYBCA4ODggQAgMHAQIDIAAJBAABCAkG
IAIdBQgIBQAAEoCNBSABDh0FBQACDg4cBSABAR0FBCABAQoGIAEBEoCVBSABHQUOAwAADgcABA4O
HBwcEQcIAhIlHQUOEoCRDh0FEoCdBSAAEoChBiABEoClDgUAABKAqQgVEoCtAg4SIQogAQEVEoCx
ARMABSAAEoC1AyAAHAUgABKAuQYgARKAvQ4HIAIBEwATAQggAgITABATARsHCAISIRKAoRKApRUS
gK0CDhIhEiESgLUSgMEIIAESgL0SgL0IBwMCEiESgL0FIAESIQ4IBwMSIRKAnQ4IIAMSgMUOHBwF
BwESgMUHIAISgMUOHAYgARKAxQ4HIAISgMUICBQHBw4SgMUSgKUSIRKAnRKAtRKAwQUAAgIODgYA
Ag4OHRwfBw4SgMUSgKUSIQ4CEoCdAhKAtQ4dHB0cHRwdHBKAwQoHBBKAxQISgJ0CBAABAg4HIAIS
gMUODiIHDw4SIRKAxRKApRIhDhIhDgISgJ0CEoC1EoDBEoC1EoDBByACAQ4SgMklBxECAg4SgKES
gKUSIQ4ODhKAxRKAyRKA0RwSgJ0SgLUdHBKAwQgHAw4SIRKAnQgAARKA3RGA4QUgABKA5QcgAgEO
EoDlBAcBEikGIAEBEYDtCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
MAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ181MGNlNTVl
NGQ2MDE0NjdhOTI2N2ZiNDE0N2JhNDljNS5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQA8WgAAAAAAAAAA
AABeWgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFoAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAA
AAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA8AMAAAAAAAAAAAAA
8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAHV+hRYA
AAEAdX6FFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkA
bgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBFADAAABAFMAdABy
AGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAwADAAMAA0AGIAMAAAAIAAKwABAEYA
aQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1ADAAYwBlADUANQBlADQAZAA2
ADAAMQA0ADYANwBhADkAMgA2ADcAZgBiADQAMQA0ADcAYgBhADQAOQBjADUALgBjAHMAcAByAG8A
agAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwA2ADUALgAz
ADIAMwA3ADMAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANQAwAGMA
ZQA1ADUAZQA0AGQANgAwADEANAA2ADcAYQA5ADIANgA3AGYAYgA0ADEANAA3AGIAYQA0ADkAYwA1
AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA0AAAAiAAvAAEATwByAGkAZwBp
AG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADUAMABjAGUANQA1AGUANABkADYAMAAxADQA
NgA3AGEAOQAyADYANwBmAGIANAAxADQANwBiAGEANAA5AGMANQAuAGMAcwBwAHIAbwBqAC4AZABs
AGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANQAwAGMAZQA1ADUA
ZQA0AGQANgAwADEANAA2ADcAYQA5ADIANgA3AGYAYgA0ADEANAA3AGIAYQA0ADkAYwA1AC4AYwBz
AHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NQA3ADYANQAuADMAMgAzADcAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA3ADYANQAuADMAMgAzADcAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAHA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_50ce55e4d601467a9267fb4147ba49c5</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::_ConnString_TaskProcess,User::_OLEDBConnString_TaskProcess,User::DEBUG</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">005dd0dbe72b32098ed478665d3db223</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[XMLSqlQueryEC]"
                          cachedDataType="nText"
                          cachedName="XMLSqlQueryEC"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[XMLSqlQueryEC]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[CriteriaSQL]"
                          cachedDataType="nText"
                          cachedName="CriteriaSQL"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSQL]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[SessionID]"
                          cachedDataType="wstr"
                          cachedLength="36"
                          cachedName="SessionID"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[SessionID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[CriteriaSetId]"
                          cachedDataType="i8"
                          cachedName="CriteriaSetId"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSetId]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[CriteriaName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="CriteriaName"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[CriteriaSetTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaSetTypeCode"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaSetTypeCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[CriteriaTypeCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="CriteriaTypeCode"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[CriteriaTypeCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[SequenceNo]"
                          cachedDataType="i4"
                          cachedName="SequenceNo"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output].Columns[SequenceNo]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0].Columns[ConnectionString]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ConnectionString"
                          lineageId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output].Columns[ConnectionString]"
                          usageType="readWrite" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[ECResult]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Inputs[Lookup Input]"
                  name="ECResult"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Outputs[ECResult]" />
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[NonConstantVariable]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component.Inputs[Input 0]"
                  name="NonConstantVariable"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split.Outputs[NonConstantVariable]" />
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[OLE DB Source Output]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{22FAB95D-2305-49F8-82A2-8D1CC216C1F4}"
          DTS:ObjectName="{22FAB95D-2305-49F8-82A2-8D1CC216C1F4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::_ECPassNo" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Package End"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C292B1CB-A656-419B-A5E1-7582F7FBF949}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Package End"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_718f91b8722248e09c196e97c2d23064"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::ActionMessage">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1ea631f85a0e4c769572780c1c01895f.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1ea631f85a0e4c769572780c1c01895f.csproj")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="st_718f91b8722248e09c196e97c2d23064.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_1ea631f85a0e4c769572780c1c01895f.csproj</RootNamespace>
    <AssemblyName>st_718f91b8722248e09c196e97c2d23064</AssemblyName>
    <ProjectGuid>{23A4DECE-5A23-4ED4-9E41-08D4114B5FC8}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;

namespace ST_1ea631f85a0e4c769572780c1c01895f.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/
        public void Main()
        {
            // TODO: Add your code here
            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_718f91b8722248e09c196e97c2d23064</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_718f91b8722248e09c196e97c2d23064</msb:DisplayName>
		<msb:ProjectId>{5778C686-942A-41DC-A42C-2CE557B6A00A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_718f91b8722248e09c196e97c2d23064.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Settings.get_Default():ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Sett" +
    "ings")]

namespace ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1ea631f85a0e4c769572780c1c01895f.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="st_718f91b8722248e09c196e97c2d23064.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGrOHVYAAAAAAAAAAOAAAiELAQsAAA4AAAAIAAAAAAAAHi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANAsAABLAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LQAAAAAAAEgAAAACAAUAkCEAAEALAAABAAAAAAAAANggAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqNgIoFgAAChZvFwAACioeAigYAAAKKgAAAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAhAMAACN+AADwAwAAbAUAACNTdHJp
bmdzAAAAAFwJAACEAAAAI1VTAOAJAAAQAAAAI0dVSUQAAADwCQAAUAEAACNCbG9iAAAAAAAAAAIA
AAFXHaIBCQMAAAD6JTMAFgAAAQAAABsAAAAFAAAABgAAAAkAAAABAAAAGAAAAAIAAAAPAAAAAQAA
AAIAAAADAAAABAAAAAEAAAADAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDPAMgACgDrANYADgBLASIB
BgBnAcgABgB9AWwBBgCuAZkBBgBlAksCBgCQAn4CBgCnAn4CBgDEAn4CBgDjAn4CBgD8An4CBgAV
A34CBgAwA34CBgBLA34CBgBkA34CBgCdA30DBgC9A30DBgASBP8DBgAvBMgABgA0BMgABgBYBH4C
CgCEBG4ECgCdBG4EBgCyBH0DDgDUBCIBDgD2BCIBAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQAB
AAABEAByADwACQADAAUAAQAQAHsAhgANAAQACAADAQAAsQAAABEABAAKABEAjQETABEAugEXABEA
BAI5AAYGLQJHAFaANQJKAFaAPQJKAFAgAAAAAIMYygEbAAEAWCAAAAAAkwjQAR8AAQCRIAAAAACT
COQBJAABAJggAAAAAJMI8AEpAAEAoCAAAAAAlggUAj0AAgCzIAAAAACGGMoBGwACAKcgAAAAAJEY
zQSJAAIAuyAAAAAAhgAoAhsAAgDJIAAAAACGGMoBGwACAAAAAQBFAjkAygFYAEEAygFYAEkAygFY
AFEAygFYAFkAygFYAGEAygFYAGkAygFYAHEAygFYAHkAygFYAIEAygFYAIkAygFdAJEAygEbAJkA
ygEbAAkAygEbAKEARgRiAKEAYQRpACkAygFuALkAygF6AMkAygEbABEAygEbANEAygEbABkACAWN
ANkAEAVdABkAygEbAAgAFABOAAgAGABTACkAkwCAAC4AGwAKAS4AIwAKAS4AYwAwAS4ACwCSAC4A
EwDaAC4AMwDaAC4AKwAKAS4AOwAQAS4AQwAKAS4AWwAnAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBT
AHUAAgABAAMAAwAAAH0BLwAAAPwBNAAAACACQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAA
AQAAAIUW9VEAAAAAAADbAwAABAAAAAAAAAAAAAAAAQC/AAAAAAAEAAAAAAAAAAAAAAABAMgAAAAA
AAwAAAAAAAAAAAAAAAoAAwEAAAAAAAAAAAEAAAAfBQAABQAEAAAAADxNb2R1bGU+AHN0XzcxOGY5
MWI4NzIyMjQ4ZTA5YzE5NmU5N2MyZDIzMDY0LmRsbABSZXNvdXJjZXMAU1RfMWVhNjMxZjg1YTBl
NGM3Njk1NzI3ODBjMWMwMTg5NWYuY3Nwcm9qLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFp
bgBTVF8xZWE2MzFmODVhMGU0Yzc2OTU3Mjc4MGMxYzAxODk1Zi5jc3Byb2oAU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0u
UmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2Vt
Ymx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
c3RfNzE4ZjkxYjg3MjIyNDhlMDljMTk2ZTk3YzJkMjMwNjQAU3lzdGVtLkRpYWdub3N0aWNzAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNj
cmlwdE9iamVjdE1vZGVsAGdldF9EdHMAc2V0X1Rhc2tSZXN1bHQAU1RfMWVhNjMxZjg1YTBlNGM3
Njk1NzI3ODBjMWMwMTg5NWYuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAA
AAAAf1MAVABfADEAZQBhADYAMwAxAGYAOAA1AGEAMABlADQAYwA3ADYAOQA1ADcAMgA3ADgAMABj
ADEAYwAwADEAOAA5ADUAZgAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAAAAAfuHERac1BTYEkvS3tAGycAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEU
BAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAA
AAADAAABBCAAEm1HAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAqU1RfMWVhNjMxZjg1YTBlNGM3Njk1NzI3ODBj
MWMwMTg5NWYuY3Nwcm9qAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA+CwAAAAAAAAAAAAADi0AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAtAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAADQAwAAAAAAAAAAAADQAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEA9VGFFgAAAQD1UYUWPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEMAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAADAMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAgAArAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADEAZQBhADYAMwAxAGYAOAA1AGEAMABlADQAYwA3ADYAOQA1ADcAMgA3ADgAMABjADEAYwAw
ADEAOAA5ADUAZgAuAGMAcwBwAHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANQA3ADYANQAuADIAMAA5ADgAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABzAHQAXwA3ADEAOABmADkAMQBiADgANwAyADIAMgA0ADgAZQAwADkAYwAxADkA
NgBlADkANwBjADIAZAAyADMAMAA2ADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8A
cgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHQAXwA3ADEAOABmADkAMQBiADgANwAy
ADIAMgA0ADgAZQAwADkAYwAxADkANgBlADkANwBjADIAZAAyADMAMAA2ADQALgBkAGwAbAAAAHgA
KwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMQBlAGEANgAzADEAZgA4ADUAYQAw
AGUANABjADcANgA5ADUANwAyADcAOAAwAGMAMQBjADAAMQA4ADkANQBmAC4AYwBzAHAAcgBvAGoA
AAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADYANQAu
ADIAMAA5ADgAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANQA3ADYANQAuADIAMAA5ADgAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAID0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Package Initialization"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:DelayValidation="True"
      DTS:Description="Script Task"
      DTS:DTSID="{293A9185-E72F-4F85-963C-3EC87896A0BB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Package Initialization"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">0</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">0</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">0</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">0</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_37fd2fd3d3564e0d816217d074cd81e2"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::LogPath">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d00adcc592cb4d0f81f18b8103908f33.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d00adcc592cb4d0f81f18b8103908f33.csproj")]
[assembly: AssemblyCopyright("Copyright @  2012")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="st_37fd2fd3d3564e0d816217d074cd81e2.csproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>ST_d00adcc592cb4d0f81f18b8103908f33.csproj</RootNamespace>
    <AssemblyName>st_37fd2fd3d3564e0d816217d074cd81e2</AssemblyName>
    <ProjectGuid>{F9E2208F-D363-4B2A-9A77-2C13975665FC}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[/*
   Microsoft SQL Server Integration Services Script Task
   Write scripts using Microsoft Visual C# 2008.
   The ScriptMain is the entry point class of the script.
*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
//using System.Windows.Forms;
using System.IO;

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        #region VSTA generated code
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        /*
		The execution engine calls this method when the task executes.
		To access the object model, use the Dts property. Connections, variables, events,
		and logging features are available as members of the Dts property as shown in the following examples.

		To reference a variable, call Dts.Variables["MyCaseSensitiveVariableName"].Value;
		To post a log entry, call Dts.Log("This is my log text", 999, null);
		To fire an event, call Dts.Events.FireInformation(99, "test", "hit the help message", "", 0, true);

		To use the connections collection use something like the following:
		ConnectionManager cm = Dts.Connections.Add("OLEDB");
		cm.ConnectionString = "Data Source=localhost;Initial Catalog=AdventureWorks;Provider=SQLNCLI10;Integrated Security=SSPI;Auto Translate=False;";

		Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		
		To open Help, press F1.
	*/

        public void Main()
        {
            // TODO: Add your code here
            string sMsg = null;
            string sLogPath = Dts.Variables["LogPath"].Value.ToString();

            if (!Directory.Exists(sLogPath))
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                sMsg = string.Format("Package Init: Log Path {0} does not exist", sLogPath);
                throw new Exception(sMsg);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_37fd2fd3d3564e0d816217d074cd81e2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>st_37fd2fd3d3564e0d816217d074cd81e2</msb:DisplayName>
		<msb:ProjectId>{BB076A92-D476-4045-BA6D-B51805881835}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="st_37fd2fd3d3564e0d816217d074cd81e2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Settings.get_Default():ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Sett" +
    "ings")]

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d00adcc592cb4d0f81f18b8103908f33.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="st_37fd2fd3d3564e0d816217d074cd81e2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGjOHVYAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAADi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQuAABXAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
LgAAAAAAAEgAAAACAAUA4CEAANQMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBWAAAAAgAAERQKAigWAAAKbxcAAApygQAAcG8YAAAKbxkAAApv
GgAACgsHKBsAAAotHwIoFgAAChdvHAAACnKRAABwBygdAAAKCgZzHgAACnoCKBYAAAoWbxwAAAoq
HgIoHwAACioAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADkAwAAI34AAFAEAAAYBgAAI1N0cmluZ3MAAAAAaAoAAOgAAAAjVVMAUAsAABAAAAAjR1VJRAAA
AGALAAB0AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIAAAAAUAAAAGAAAA
CQAAAAEAAAAfAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAM8AyAAKAOsA1gAOAEsBIgEGAGcByAAGAH0BbAEGAK4BmQEGAGUCSwIGAJACfgIGAKcC
fgIGAMQCfgIGAOMCfgIGAPwCfgIGABUDfgIGADADfgIGAEsDfgIGAGQDfgIGAJ0DfQMGAL0DfQMG
ABIE/wMGAC8EyAAGADQEyAAGAFgEfgIKAIQEbgQKAJ0EbgQGALIEfQMOANQEIgEOAPYEIgESAE8F
LwUSAGcFLwUGAJYFjAUGALYFyAAGAMQFyAAAAAAAAQAAAAAAAQABAAAAEAAyADwABQABAAEAAAEQ
AHIAPAAJAAMABQABABAAewCGAA0ABAAIAAMBAACxAAAAEQAEAAoAEQCNARMAEQC6ARcAEQAEAjkA
BgYtAkcAVoA1AkoAVoA9AkoAUCAAAAAAgxjKARsAAQBYIAAAAACTCNABHwABAJEgAAAAAJMI5AEk
AAEAmCAAAAAAkwjwASkAAQCgIAAAAACWCBQCPQACALMgAAAAAIYYygEbAAIApyAAAAAAkRjNBIkA
AgC8IAAAAACGACgCGwACAB4hAAAAAIYYygEbAAIAAAABAEUCOQDKAVgAQQDKAVgASQDKAVgAUQDK
AVgAWQDKAVgAYQDKAVgAaQDKAVgAcQDKAVgAeQDKAVgAgQDKAVgAiQDKAV0AkQDKARsAmQDKARsA
CQDKARsAoQBGBGIAoQBhBGkAKQDKAW4AuQDKAXoAyQDKARsAEQDKARsA0QDKARsAGQAIBY0A2QBZ
BZIA4QBwBZcA6QB5BZ0ACQCDBaEA8QCgBaUA2QCnBV0A+QC9BaoAAQHKAVgAGQDKARsACAAUAE4A
CAAYAFMAKQCTAIAALgAbAC0BLgAjAC0BLgBjAFMBLgALALUALgATAP0ALgAzAP0ALgArAC0BLgA7
ADMBLgBDAC0BLgBbAEoBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQCwAAIAAQADAAMAAAB9AS8A
AAD8ATQAAAAgAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAACFFvRRAAAAAAAA2wMA
AAQAAAAAAAAAAAAAAAEAvwAAAAAABAAAAAAAAAAAAAAAAQDIAAAAAAAMAAAAAAAAAAAAAAAKAAMB
AAAAAAwAAAAAAAAAAAAAAAoAEAUAAAAAAAAAAAEAAADOBQAABQAEAAAAAAAAPE1vZHVsZT4Ac3Rf
MzdmZDJmZDNkMzU2NGUwZDgxNjIxN2QwNzRjZDgxZTIuZGxsAFJlc291cmNlcwBTVF9kMDBhZGNj
NTkyY2I0ZDBmODFmMThiODEwMzkwOGYzMy5jc3Byb2ouUHJvcGVydGllcwBTZXR0aW5ncwBTY3Jp
cHRNYWluAFNUX2QwMGFkY2M1OTJjYjRkMGY4MWYxOGI4MTAzOTA4ZjMzLmNzcHJvagBTY3JpcHRS
ZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lz
dGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZh
bHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5
c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUA
QXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBzdF8zN2ZkMmZkM2QzNTY0ZTBkODE2MjE3ZDA3NGNkODFlMgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxl
cwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLklPAERpcmVjdG9y
eQBFeGlzdHMAc2V0X1Rhc2tSZXN1bHQAU3RyaW5nAEZvcm1hdABFeGNlcHRpb24AU1RfZDAwYWRj
YzU5MmNiNGQwZjgxZjE4YjgxMDM5MDhmMzMuY3Nwcm9qLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwAAf1MAVABfAGQAMAAwAGEAZABjAGMANQA5ADIAYwBiADQAZAAwAGYAOAAxAGYAMQA4
AGIAOAAxADAAMwA5ADAAOABmADMAMwAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAPTABvAGcAUABhAHQAaAAAU1AAYQBjAGsAYQBnAGUAIABJ
AG4AaQB0ADoAIABMAG8AZwAgAFAAYQB0AGgAIAB7ADAAfQAgAGQAbwBlAHMAIABuAG8AdAAgAGUA
eABpAHMAdAAAAAAAPMn9H0K+NUeERBGHjvrBvgAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMg
AAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEA
AAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQg
ABJtBCAAEnEFIAESdRwDIAAcAyAADgQAAQIOBQACDg4cBAcCDg5HAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQvAQAq
U1RfZDAwYWRjYzU5MmNiNGQwZjgxZjE4YjgxMDM5MDhmMzMuY3Nwcm9qAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTIAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
ANwuAAAAAAAAAAAAAP4uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwLgAAAAAAAAAAAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAANADAAAAAAAAAAAAANADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQD0UYUWAAABAPRRhRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAMAwAAAQAwADAA
MAAwADAANABiADAAAACAACsAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZAAwADAAYQBkAGMAYwA1ADkAMgBjAGIANABkADAAZgA4ADEAZgAxADgAYgA4ADEAMAAzADkA
MAA4AGYAMwAzAC4AYwBzAHAAcgBvAGoAAAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA1ADcANgA1AC4AMgAwADkAOAAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAHMAdABfADMANwBmAGQAMgBmAGQAMwBkADMANQA2ADQAZQAwAGQAOAAxADYAMgAx
ADcAZAAwADcANABjAGQAOAAxAGUAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAyAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAHMAdABfADMANwBmAGQAMgBmAGQAMwBkADMA
NQA2ADQAZQAwAGQAOAAxADYAMgAxADcAZAAwADcANABjAGQAOAAxAGUAMgAuAGQAbABsAAAAeAAr
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBkADAAMABhAGQAYwBjADUAOQAyAGMA
YgA0AGQAMABmADgAMQBmADEAOABiADgAMQAwADMAOQAwADgAZgAzADMALgBjAHMAcAByAG8AagAA
AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcANgA1AC4A
MgAwADkAOAAwAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA1ADcANgA1AC4AMgAwADkAOAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Prepare EC Passno List"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DelayValidation="True"
      DTS:Description="Sequence Container"
      DTS:DTSID="{36B5848E-766F-4FE0-B84E-71A84A7068A9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prepare EC Passno List">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Prepare EC Passno List\Create ECPassNo List"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{41310E8C-22BE-41F1-984E-50EC4588A23A}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create ECPassNo List"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              BLOBTempStoragePath=""
              bufferTempStoragePath=""
              version="1">
              <components>
                <component
                  refId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform"
                  componentClassID="Microsoft.Cache"
                  contactInfo="Cache Transform;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Inserts rows into a cache."
                  name="Cache Transform"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Connections[CacheConnection]"
                      connectionManagerID="Package.ConnectionManagers[SessionContextLookup]"
                      connectionManagerRefId="Package.ConnectionManagers[SessionContextLookup]"
                      description="The connection used to access the cache."
                      name="CacheConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Inputs[Cache Input]"
                      hasSideEffects="true"
                      name="Cache Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Inputs[Cache Input].Columns[VariableName]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="VariableName"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[VariableName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">VariableName</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Inputs[Cache Input].Columns[SessionContextId]"
                          cachedDataType="i8"
                          cachedName="SessionContextId"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[SessionContextId]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="The cache column associated with the input column."
                              name="CacheColumnName">SessionContextId</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Outputs[Cache Output]"
                      name="Cache Output"
                      synchronousInputId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Inputs[Cache Input]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select distinct Task.GetDictonaryCodeByCodeId('CriteriaPassNoType', ECPassNo) as ECPassNoCode
from Task.Criteria c
inner join Task.CriteriaSet cs on c.CriteriaSetId = cs.CriteriaSetId
where  cs.CriteriaSetTypeId = ? and IsEnable = 1
order by ECPassNoCode</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::_query_GetCriteriaPassNoList</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0",{D04FAEA9-9898-4295-8DF6-A49BD2A017F7};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          length="200"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          name="ECPassNoCode" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ECPassNoCode]"
                          name="ECPassNoCode" />
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source 1"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::_query_SessionContextLookup</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      connectionManagerRefId="Package.ConnectionManagers[OLEDB_TaskProcess]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[VariableName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[VariableName]"
                          length="200"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[VariableName]"
                          name="VariableName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[SessionContextId]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[SessionContextId]"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[SessionContextId]"
                          name="SessionContextId"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[VariableName]"
                          dataType="wstr"
                          length="200"
                          name="VariableName" />
                        <externalMetadataColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[SessionContextId]"
                          dataType="i8"
                          name="SessionContextId" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[VariableName]"
                          dataType="wstr"
                          length="200"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[VariableName]"
                          name="VariableName" />
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[SessionContextId]"
                          dataType="i8"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[SessionContextId]"
                          name="SessionContextId" />
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Prepare EC Passno List\Create ECPassNo List\Recordset Destination"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset."
                  name="Recordset Destination">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::_ECPassNo_List</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Prepare EC Passno List\Create ECPassNo List\Recordset Destination.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Prepare EC Passno List\Create ECPassNo List\Recordset Destination.Inputs[Recordset Destination Input].Columns[ECPassNoCode]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="ECPassNoCode"
                          lineageId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output].Columns[ECPassNoCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Prepare EC Passno List\Create ECPassNo List.Paths[OLE DB Source Output]"
                  endId="Package\Prepare EC Passno List\Create ECPassNo List\Recordset Destination.Inputs[Recordset Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Prepare EC Passno List\Create ECPassNo List.Paths[OLE DB Source Output1]"
                  endId="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform.Inputs[Cache Input]"
                  name="OLE DB Source Output"
                  startId="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Prepare EC Passno List\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DFE38EAE-B457-45D6-9629-40C875415BDA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9FF16C3D-7858-49E3-A509-54A4D3FD2F36}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::_query_GetCriteriaSetCodeId"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="CriteriaSetID"
                SQLTask:DtsVariableName="User::_CriteriaSetID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@CriteriaSetCode"
                SQLTask:DtsVariableName="User::CriteriaSetCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="200" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Prepare EC Passno List.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7A7FD7BF-D24E-41F4-8F20-B487D0B924C9}"
          DTS:From="Package\Prepare EC Passno List\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Prepare EC Passno List\Create ECPassNo List" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F04EDCD8-CC02-4D03-9987-046E3D3D0A5A}"
      DTS:From="Package\Package Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Prepare EC Passno List" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B6BD7CBD-E3F4-448C-B2B5-CC7AE4398208}"
      DTS:From="Package\Prepare EC Passno List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{70D54CEC-8CB3-4340-82DD-B6839B793D1A}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Package End" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="214.4,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables"
          TopLeft="23.811320754717,17.7547169811321" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="257.6,88"
          Size="257.6,132"
          Id="Package\Foreach Loop Container"
          TopLeft="5.5,346.179245283019" />
        <NodeLayout
          Size="136,44"
          Id="Package\Package End"
          TopLeft="65.5,532.556603773585" />
        <NodeLayout
          Size="136,44"
          Id="Package\Package Initialization"
          TopLeft="57.5754716981132,5.5" />
        <NodeLayout
          Size="185.6,44"
          Id="Package\Prepare EC Passno List\Create ECPassNo List"
          TopLeft="23.811320754717,81.8301886792453" />
        <NodeLayout
          Size="168,44"
          Id="Package\Prepare EC Passno List\Execute SQL Task"
          TopLeft="34.9433962264151,11.9056603773585" />
        <EdgeLayout
          Id="Package\Prepare EC Passno List.PrecedenceConstraints[Constraint]"
          TopLeft="118.792452830189,55.8301886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1.66037735849056,26"
              Start="0,0"
              End="-1.66037735849056,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.9811320754717" />
                  <mssgle:LineSegment
                    End="-1.66037735849056,12.9811320754717" />
                  <mssgle:LineSegment
                    End="-1.66037735849056,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="254.4,140"
          Size="254.4,184"
          Id="Package\Prepare EC Passno List"
          TopLeft="6.59433962264151,104.556603773585" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="125.462264150943,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="7.9622641509434,55.1320754716981"
              Start="0,0"
              End="7.9622641509434,47.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5471698113207" />
                  <mssgle:LineSegment
                    End="7.9622641509434,27.5471698113207" />
                  <mssgle:LineSegment
                    End="7.9622641509434,47.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="133.424528301887,288.292452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1.39622641509433,57.8867924528302"
              Start="0,0"
              End="1.39622641509433,50.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.9433962264151" />
                  <mssgle:LineSegment
                    End="1.39622641509433,28.9433962264151" />
                  <mssgle:LineSegment
                    End="1.39622641509433,50.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="134.820754716981,477.952830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1.43396226415094,54.6037735849056"
              Start="0,0"
              End="-1.43396226415094,47.1037735849056">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.2830188679245" />
                  <mssgle:LineSegment
                    End="-1.43396226415094,27.2830188679245" />
                  <mssgle:LineSegment
                    End="-1.43396226415094,47.1037735849056" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Apply EC for Session Variables">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="212,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Destination"
          TopLeft="14.4811320754717,562.405660377358" />
        <NodeLayout
          Size="168,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\OLE DB Source"
          TopLeft="31.4622641509434,5.5" />
        <NodeLayout
          Size="218,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\Session Variables EC XML to SQL"
          TopLeft="8.4811320754717,204.141509433962" />
        <NodeLayout
          Size="229,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\Constant Variable Conditional Split"
          TopLeft="417.801886792453,469.311320754717" />
        <NodeLayout
          Size="186,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\Derived Column"
          TopLeft="23.4245283018868,110.330188679245" />
        <NodeLayout
          Size="206,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\Script Component"
          TopLeft="428.783018867925,557.990566037736" />
        <NodeLayout
          Size="165,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\Lookup"
          TopLeft="35.6509433962264,375.5" />
        <NodeLayout
          Size="225,44"
          Id="Package\Foreach Loop Container\Apply EC for Session Variables\Apply Session Variables EC"
          TopLeft="5.5,291.009433962264" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Output 0]"
          TopLeft="117.311320754717,248.066037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.490566037735846,42.9433962264151"
              Start="0,0"
              End="0.490566037735846,35.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.4716981132075" />
                  <mssgle:LineSegment
                    End="0.490566037735846,21.4716981132075" />
                  <mssgle:LineSegment
                    End="0.490566037735846,35.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[OLE DB Source Output]"
          TopLeft="115.311320754717,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.943396226415103,60.9056603773585"
              Start="0,0"
              End="0.943396226415103,53.4056603773585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.4528301886792" />
                  <mssgle:LineSegment
                    End="0.943396226415103,30.4528301886792" />
                  <mssgle:LineSegment
                    End="0.943396226415103,53.4056603773585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[NonConstantVariable]"
          TopLeft="532.103773584906,513.235849056604">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.754716981132"
              Start="0,0"
              End="0,37.254716981132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.254716981132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-46.55634765625,13.752846771816,93.1126953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Lookup No Match Output]"
          TopLeft="97.2735849056604,419.424528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.0188679245283,142.981132075472"
              Start="0,0"
              End="23.0188679245283,135.481132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,107.207547169811" />
                  <mssgle:LineSegment
                    End="23.0188679245283,107.207547169811" />
                  <mssgle:LineSegment
                    End="23.0188679245283,135.481132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.2969527564859,112.207547169811,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Lookup Match Output]"
          TopLeft="138.783018867925,419.424528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="393.320754716981,49.8867924528302"
              Start="0,0"
              End="393.320754716981,42.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.9433962264151" />
                  <mssgle:LineSegment
                    End="393.320754716981,24.9433962264151" />
                  <mssgle:LineSegment
                    End="393.320754716981,42.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="148.468990639741,29.9433962264151,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[ECResult]"
          TopLeft="117.801886792453,334.933962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.226415094339643,40.5660377358491"
              Start="0,0"
              End="0.226415094339643,33.0660377358491">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2641509433962" />
                  <mssgle:LineSegment
                    End="0.226415094339643,20.2641509433962" />
                  <mssgle:LineSegment
                    End="0.226415094339643,33.0660377358491" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Apply EC for Session Variables.Paths[Derived Column Output]"
          TopLeft="116.254716981132,154.254716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="1.0566037735849,49.8867924528302"
              Start="0,0"
              End="1.0566037735849,42.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.9433962264151" />
                  <mssgle:LineSegment
                    End="1.0566037735849,24.9433962264151" />
                  <mssgle:LineSegment
                    End="1.0566037735849,42.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Prepare EC Passno List\Create ECPassNo List">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,44"
          Id="Package\Prepare EC Passno List\Create ECPassNo List\Recordset Destination"
          TopLeft="7.5,149.311320754717" />
        <NodeLayout
          Size="136,44"
          Id="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Prepare EC Passno List\Create ECPassNo List\Cache Transform"
          TopLeft="271.047169811321,148.292452830189" />
        <NodeLayout
          Size="168.8,44"
          Id="Package\Prepare EC Passno List\Create ECPassNo List\OLE DB Source 1"
          TopLeft="258.066037735849,6.5188679245283" />
        <EdgeLayout
          Id="Package\Prepare EC Passno List\Create ECPassNo List.Paths[OLE DB Source Output1]"
          TopLeft="342.405660377358,50.4433962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-3.47169811320754,97.8490566037736"
              Start="0,0"
              End="-3.47169811320754,90.3490566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.9056603773585" />
                  <mssgle:LineSegment
                    End="-3.47169811320754,48.9056603773585" />
                  <mssgle:LineSegment
                    End="-3.47169811320754,90.3490566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Prepare EC Passno List\Create ECPassNo List.Paths[OLE DB Source Output]"
          TopLeft="73.3867924528302,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2,99.8867924528302"
              Start="0,0"
              End="2,92.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.9245283018868" />
                  <mssgle:LineSegment
                    End="2,49.9245283018868" />
                  <mssgle:LineSegment
                    End="2,92.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>